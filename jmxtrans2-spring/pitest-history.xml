9
<classHistory><id hierarchicalHash="5ebdc34d"><classId hash="1589494605"><name><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser3Test</name></name></classId></id><coverageId>5ebdc34d</coverageId></classHistory>
<classHistory><id hierarchicalHash="170a2cdfd"><classId hash="4037917099"><name><name>org/jmxtrans/spring/EmbeddedJmxTransNamespaceHandler</name></name></classId></id><coverageId>f18549db</coverageId></classHistory>
<classHistory><id hierarchicalHash="5081c349"><classId hash="1350681417"><name><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser2Test</name></name></classId></id><coverageId>5081c349</coverageId></classHistory>
<classHistory><id hierarchicalHash="19072ca2b"><classId hash="3468105407"><name><name>org/jmxtrans/spring/SpringEmbeddedJmxTrans</name></name></classId></id><coverageId>10ab6664d</coverageId></classHistory>
<classHistory><id hierarchicalHash="19311c72"><classId hash="422648946"><name><name>org/jmxtrans/spring/EmbeddedJmxTransFactoryTest</name></name></classId></id><coverageId>19311c72</coverageId></classHistory>
<classHistory><id hierarchicalHash="4245c345"><classId hash="1111868229"><name><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser1Test</name></name></classId></id><coverageId>4245c345</coverageId></classHistory>
<classHistory><id hierarchicalHash="11eb8577b"><classId hash="3773809932"><name><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></name></classId></id><coverageId>f18549db</coverageId></classHistory>
<classHistory><id hierarchicalHash="bf5523cb"><classId hash="3210027979"><name><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></name></classId></id><coverageId>10ab6664d</coverageId></classHistory>
<classHistory><id hierarchicalHash="58d03d5b"><classId hash="1490042203"><name><name>org/jmxtrans/spring/SpringEmbeddedJmxTransMBean</name></name></classId></id><coverageId>0</coverageId></classHistory>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test.test(org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>131</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test.test(org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test.test(org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test.test(org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test.test(org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test.test(org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test.test(org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test.test(org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test.test(org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test.test(org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test.test(org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test.test(org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test.test(org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test.test(org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test.test(org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>139</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test.test(org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test.test(org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test.test(org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test.test(org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test.test(org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test.test(org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>getBeanClass</name></method><methodDesc>(Lorg/w3c/dom/Element;)Ljava/lang/Class;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test.test(org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>resolveId</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/support/AbstractBeanDefinition;Lorg/springframework/beans/factory/xml/ParserContext;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>resolveId</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/support/AbstractBeanDefinition;Lorg/springframework/beans/factory/xml/ParserContext;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test.test(org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>resolveId</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/support/AbstractBeanDefinition;Lorg/springframework/beans/factory/xml/ParserContext;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>resolveId</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/support/AbstractBeanDefinition;Lorg/springframework/beans/factory/xml/ParserContext;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>resolveId</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/support/AbstractBeanDefinition;Lorg/springframework/beans/factory/xml/ParserContext;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>resolveId</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/support/AbstractBeanDefinition;Lorg/springframework/beans/factory/xml/ParserContext;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/springframework/core/io/ResourceLoader;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>189</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>160</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>105</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>124</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>130</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>160</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>160</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>224</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>200</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>218</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObjectType</name></method><methodDesc>()Ljava/lang/Class;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>isSingleton</name></method><methodDesc>()Z</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>isSingleton</name></method><methodDesc>()Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>setConfigurationUrl</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>setConfigurationUrl</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>setConfigurationUrl</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>setConfigurationUrl</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>setConfigurationUrl</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>setConfigurationUrls</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>setConfigurationUrls</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>setConfigurationUrls</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>setConfigurationUrls</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>setConfigurationUrls</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransNamespaceHandler</name></clazz><method><name>init</name></method><methodDesc>()V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser3Test.test(org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser3Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransNamespaceHandler</name></clazz><method><name>init</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser3Test.test(org.jmxtrans.spring.EmbeddedJmxTransBeanDefinitionParser3Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>146</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>176</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>184</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>148</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>150</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>151</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>178</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>180</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>182</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>183</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>124</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/SpringEmbeddedJmxTrans</name></clazz><method><name>afterPropertiesSet</name></method><methodDesc>()V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/SpringEmbeddedJmxTrans</name></clazz><method><name>destroy</name></method><methodDesc>()V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/SpringEmbeddedJmxTrans</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/SpringEmbeddedJmxTrans</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
