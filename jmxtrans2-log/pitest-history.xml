13
<classHistory><id hierarchicalHash="29a60eeb"><classId hash="698748651"><name><name>org/jmxtrans/log/LoggerFactoryTest</name></name></classId></id><coverageId>29a60eeb</coverageId></classHistory>
<classHistory><id hierarchicalHash="4ae5e9de"><classId hash="1256581598"><name><name>org/jmxtrans/log/LoggerFactory</name></name></classId></id><coverageId>29a60eeb</coverageId></classHistory>
<classHistory><id hierarchicalHash="b9ce563b"><classId hash="3117307451"><name><name>org/jmxtrans/log/LogProvider</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="53999f4"><classId hash="87661044"><name><name>org/jmxtrans/log/PrintWriterLoggerTest</name></name></classId></id><coverageId>53999f4</coverageId></classHistory>
<classHistory><id hierarchicalHash="d405e385"><classId hash="3557155717"><name><name>org/jmxtrans/log/ConsoleLogProviderTest</name></name></classId></id><coverageId>d405e385</coverageId></classHistory>
<classHistory><id hierarchicalHash="fd84d632"><classId hash="4253341234"><name><name>org/jmxtrans/log/ConsoleLogProvider</name></name></classId></id><coverageId>fdabf270</coverageId></classHistory>
<classHistory><id hierarchicalHash="d5bee825"><classId hash="3586058277"><name><name>org/jmxtrans/log/PrintWriterLogger</name></name></classId></id><coverageId>102e58c64</coverageId></classHistory>
<classHistory><id hierarchicalHash="6c3a1a32"><classId hash="1815747122"><name><name>org/jmxtrans/log/LevelTest</name></name></classId></id><coverageId>6c3a1a32</coverageId></classHistory>
<classHistory><id hierarchicalHash="f4c821ca"><classId hash="4106756554"><name><name>org/jmxtrans/log/Clock</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="a42df74f"><classId hash="2754475855"><name><name>org/jmxtrans/log/Level</name></name></classId></id><coverageId>16f1fa696</coverageId></classHistory>
<classHistory><id hierarchicalHash="e4ddb803"><classId hash="253677534"><name><name>org/jmxtrans/log/PrintWriterLogger$1</name></name></classId></id><coverageId>102e58c64</coverageId></classHistory>
<classHistory><id hierarchicalHash="8b4f6f7d"><classId hash="2337238909"><name><name>org/jmxtrans/log/Logger</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="220d59df"><classId hash="571300319"><name><name>org/jmxtrans/log/SystemClock</name></name></classId></id><coverageId>fdabf270</coverageId></classHistory>
<result><id><location><clazz><name>org/jmxtrans/log/ConsoleLogProvider</name></clazz><method><name>getLogLevel</name></method><methodDesc>()Lorg/jmxtrans/log/Level;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.ConsoleLogProviderTest.logLevelCanBeSet(org.jmxtrans.log.ConsoleLogProviderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/ConsoleLogProvider</name></clazz><method><name>getLogLevel</name></method><methodDesc>()Lorg/jmxtrans/log/Level;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.ConsoleLogProviderTest.logLevelCanBeSet(org.jmxtrans.log.ConsoleLogProviderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/ConsoleLogProvider</name></clazz><method><name>getLogLevel</name></method><methodDesc>()Lorg/jmxtrans/log/Level;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/ConsoleLogProvider</name></clazz><method><name>getLogLevel</name></method><methodDesc>()Lorg/jmxtrans/log/Level;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.ConsoleLogProviderTest.logLevelCanBeSet(org.jmxtrans.log.ConsoleLogProviderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/ConsoleLogProvider</name></clazz><method><name>getLogLevel</name></method><methodDesc>()Lorg/jmxtrans/log/Level;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.ConsoleLogProviderTest.defaultingToWarnWhenLogLevelIsInvalid(org.jmxtrans.log.ConsoleLogProviderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/ConsoleLogProvider</name></clazz><method><name>getLogLevel</name></method><methodDesc>()Lorg/jmxtrans/log/Level;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/LoggerFactory</name></clazz><method><name>instantiateLogProvider</name></method><methodDesc>()Lorg/jmxtrans/log/LogProvider;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/LoggerFactory</name></clazz><method><name>instantiateLogProvider</name></method><methodDesc>()Lorg/jmxtrans/log/LogProvider;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/LoggerFactory</name></clazz><method><name>instantiateLogProvider</name></method><methodDesc>()Lorg/jmxtrans/log/LogProvider;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/LoggerFactory</name></clazz><method><name>instantiateLogProvider</name></method><methodDesc>()Lorg/jmxtrans/log/LogProvider;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/LoggerFactory</name></clazz><method><name>instantiateLogProvider</name></method><methodDesc>()Lorg/jmxtrans/log/LogProvider;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/LoggerFactory</name></clazz><method><name>instantiateLogProvider</name></method><methodDesc>()Lorg/jmxtrans/log/LogProvider;</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/LoggerFactory</name></clazz><method><name>instantiateLogProvider</name></method><methodDesc>()Lorg/jmxtrans/log/LogProvider;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>getName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.debugLoggerLogsAtAllLevels(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/log/Level;Ljava/lang/String;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/log/Level;Ljava/lang/String;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.logLineContainsAllRequiredInformation(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/log/Level;Ljava/lang/String;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/log/Level;Ljava/lang/String;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.logLineContainsAllRequiredInformation(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/log/Level;Ljava/lang/String;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/log/Level;Ljava/lang/String;)V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.logLineContainsAllRequiredInformation(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/log/Level;Ljava/lang/String;)V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/log/Level;Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.logLineContainsException(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/log/Level;Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.logLineContainsException(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/log/Level;Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/log/Level;Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.logLineContainsException(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/log/Level;Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger$1</name></clazz><method><name>initialValue</name></method><methodDesc>()Ljava/text/DateFormat;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.logLineContainsAllRequiredInformation(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger$1</name></clazz><method><name>initialValue</name></method><methodDesc>()Ljava/text/DateFormat;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.logLineContainsAllRequiredInformation(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/SystemClock</name></clazz><method><name>currentTimeMillis</name></method><methodDesc>()J</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/SystemClock</name></clazz><method><name>currentTimeMillis</name></method><methodDesc>()J</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/LoggerFactory</name></clazz><method><name>instantiateLogProvider</name></method><methodDesc>()Lorg/jmxtrans/log/LogProvider;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/LoggerFactory</name></clazz><method><name>instantiateLogProvider</name></method><methodDesc>()Lorg/jmxtrans/log/LogProvider;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/ConsoleLogProvider</name></clazz><method><name>getLogLevel</name></method><methodDesc>()Lorg/jmxtrans/log/Level;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
