13
<classHistory><id hierarchicalHash="29a60eeb"><classId hash="698748651"><name><name>org/jmxtrans/log/LoggerFactoryTest</name></name></classId></id><coverageId>29a60eeb</coverageId></classHistory>
<classHistory><id hierarchicalHash="4ae5e9de"><classId hash="1256581598"><name><name>org/jmxtrans/log/LoggerFactory</name></name></classId></id><coverageId>29a60eeb</coverageId></classHistory>
<classHistory><id hierarchicalHash="b9ce563b"><classId hash="3117307451"><name><name>org/jmxtrans/log/LogProvider</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="2dbaff6d"><classId hash="767229805"><name><name>org/jmxtrans/log/PrintWriterLoggerTest</name></name></classId></id><coverageId>2dbaff6d</coverageId></classHistory>
<classHistory><id hierarchicalHash="ef57e20b"><classId hash="4015514123"><name><name>org/jmxtrans/log/ConsoleLogProviderTest</name></name></classId></id><coverageId>ef57e20b</coverageId></classHistory>
<classHistory><id hierarchicalHash="56edd4b8"><classId hash="1458427064"><name><name>org/jmxtrans/log/ConsoleLogProvider</name></name></classId></id><coverageId>118fdf0f6</coverageId></classHistory>
<classHistory><id hierarchicalHash="91d6b317"><classId hash="2446766871"><name><name>org/jmxtrans/log/PrintWriterLogger</name></name></classId></id><coverageId>146b8f063</coverageId></classHistory>
<classHistory><id hierarchicalHash="6c3a1a32"><classId hash="1815747122"><name><name>org/jmxtrans/log/LevelTest</name></name></classId></id><coverageId>6c3a1a32</coverageId></classHistory>
<classHistory><id hierarchicalHash="f4c821ca"><classId hash="4106756554"><name><name>org/jmxtrans/log/Clock</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="a42df74f"><classId hash="2754475855"><name><name>org/jmxtrans/log/Level</name></name></classId></id><coverageId>1b2f30a95</coverageId></classHistory>
<classHistory><id hierarchicalHash="a0f582f5"><classId hash="253677534"><name><name>org/jmxtrans/log/PrintWriterLogger$1</name></name></classId></id><coverageId>146b8f063</coverageId></classHistory>
<classHistory><id hierarchicalHash="8b4f6f7d"><classId hash="2337238909"><name><name>org/jmxtrans/log/Logger</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="220d59df"><classId hash="571300319"><name><name>org/jmxtrans/log/SystemClock</name></name></classId></id><coverageId>118fdf0f6</coverageId></classHistory>
<result><id><location><clazz><name>org/jmxtrans/log/ConsoleLogProvider</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.ConsoleLogProviderTest.messagesAreSentToStdOut(org.jmxtrans.log.ConsoleLogProviderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/ConsoleLogProvider</name></clazz><method><name>getLogLevel</name></method><methodDesc>()Lorg/jmxtrans/log/Level;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.ConsoleLogProviderTest.logLevelCanBeSet(org.jmxtrans.log.ConsoleLogProviderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/ConsoleLogProvider</name></clazz><method><name>getLogLevel</name></method><methodDesc>()Lorg/jmxtrans/log/Level;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.ConsoleLogProviderTest.logLevelCanBeSet(org.jmxtrans.log.ConsoleLogProviderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/ConsoleLogProvider</name></clazz><method><name>getLogLevel</name></method><methodDesc>()Lorg/jmxtrans/log/Level;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.ConsoleLogProviderTest.defaultingToWarnWhenLogLevelIsInvalid(org.jmxtrans.log.ConsoleLogProviderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/ConsoleLogProvider</name></clazz><method><name>getLogLevel</name></method><methodDesc>()Lorg/jmxtrans/log/Level;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.ConsoleLogProviderTest.defaultingToWarnWhenLogLevelIsInvalid(org.jmxtrans.log.ConsoleLogProviderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/ConsoleLogProvider</name></clazz><method><name>getLogLevel</name></method><methodDesc>()Lorg/jmxtrans/log/Level;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/ConsoleLogProvider</name></clazz><method><name>getLogLevel</name></method><methodDesc>()Lorg/jmxtrans/log/Level;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.ConsoleLogProviderTest.logLevelCanBeSet(org.jmxtrans.log.ConsoleLogProviderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/ConsoleLogProvider</name></clazz><method><name>getLogLevel</name></method><methodDesc>()Lorg/jmxtrans/log/Level;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.ConsoleLogProviderTest.logLevelCanBeSet(org.jmxtrans.log.ConsoleLogProviderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/ConsoleLogProvider</name></clazz><method><name>getLogLevel</name></method><methodDesc>()Lorg/jmxtrans/log/Level;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.ConsoleLogProviderTest.defaultingToWarnWhenLogLevelIsInvalid(org.jmxtrans.log.ConsoleLogProviderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/ConsoleLogProvider</name></clazz><method><name>getLogLevel</name></method><methodDesc>()Lorg/jmxtrans/log/Level;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/ConsoleLogProvider</name></clazz><method><name>getLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/log/Logger;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.ConsoleLogProviderTest.defaultingToWarnWhenLogLevelIsInvalid(org.jmxtrans.log.ConsoleLogProviderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/ConsoleLogProvider</name></clazz><method><name>getLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/log/Logger;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.ConsoleLogProviderTest.defaultingToWarnWhenLogLevelIsInvalid(org.jmxtrans.log.ConsoleLogProviderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/ConsoleLogProvider</name></clazz><method><name>getLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/log/Logger;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.ConsoleLogProviderTest.defaultingToWarnWhenLogLevelIsInvalid(org.jmxtrans.log.ConsoleLogProviderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/Level</name></clazz><method><name>isEnabled</name></method><methodDesc>(Lorg/jmxtrans/log/Level;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.LevelTest.debugEnablesAllLevels(org.jmxtrans.log.LevelTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/Level</name></clazz><method><name>isEnabled</name></method><methodDesc>(Lorg/jmxtrans/log/Level;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.LevelTest.debugEnablesAllLevels(org.jmxtrans.log.LevelTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/Level</name></clazz><method><name>isEnabled</name></method><methodDesc>(Lorg/jmxtrans/log/Level;)Z</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.LevelTest.errorOnlyEnablesErrorLevel(org.jmxtrans.log.LevelTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/Level</name></clazz><method><name>isEnabled</name></method><methodDesc>(Lorg/jmxtrans/log/Level;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.LevelTest.debugEnablesAllLevels(org.jmxtrans.log.LevelTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/Level</name></clazz><method><name>isEnabled</name></method><methodDesc>(Lorg/jmxtrans/log/Level;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.LevelTest.errorOnlyEnablesErrorLevel(org.jmxtrans.log.LevelTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/Level</name></clazz><method><name>isEnabled</name></method><methodDesc>(Lorg/jmxtrans/log/Level;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.LevelTest.debugEnablesAllLevels(org.jmxtrans.log.LevelTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/Level</name></clazz><method><name>isEnabled</name></method><methodDesc>(Lorg/jmxtrans/log/Level;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.LevelTest.errorOnlyEnablesErrorLevel(org.jmxtrans.log.LevelTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/Level</name></clazz><method><name>isEnabled</name></method><methodDesc>(Lorg/jmxtrans/log/Level;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.LevelTest.debugEnablesAllLevels(org.jmxtrans.log.LevelTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/LoggerFactory</name></clazz><method><name>getLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/log/Logger;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.LoggerFactoryTest.consoleLoggerIsUsedByDefault(org.jmxtrans.log.LoggerFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/LoggerFactory</name></clazz><method><name>getLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/log/Logger;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.LoggerFactoryTest.consoleLoggerIsUsedByDefault(org.jmxtrans.log.LoggerFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/LoggerFactory</name></clazz><method><name>instantiateLogProvider</name></method><methodDesc>()Lorg/jmxtrans/log/LogProvider;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/LoggerFactory</name></clazz><method><name>instantiateLogProvider</name></method><methodDesc>()Lorg/jmxtrans/log/LogProvider;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/LoggerFactory</name></clazz><method><name>instantiateLogProvider</name></method><methodDesc>()Lorg/jmxtrans/log/LogProvider;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/LoggerFactory</name></clazz><method><name>instantiateLogProvider</name></method><methodDesc>()Lorg/jmxtrans/log/LogProvider;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/LoggerFactory</name></clazz><method><name>instantiateLogProvider</name></method><methodDesc>()Lorg/jmxtrans/log/LogProvider;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/LoggerFactory</name></clazz><method><name>instantiateLogProvider</name></method><methodDesc>()Lorg/jmxtrans/log/LogProvider;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/LoggerFactory</name></clazz><method><name>instantiateLogProvider</name></method><methodDesc>()Lorg/jmxtrans/log/LogProvider;</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/LoggerFactory</name></clazz><method><name>instantiateLogProvider</name></method><methodDesc>()Lorg/jmxtrans/log/LogProvider;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Lorg/jmxtrans/log/Level;Lorg/jmxtrans/log/Clock;Ljava/io/PrintStream;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.errorDebuggerOnlyLogsAtErrorLevel(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>debug</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.errorDebuggerOnlyLogsAtErrorLevel(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>debug</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.logLineContainsAllRequiredInformation(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>debug</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.logLineContainsAllRequiredInformation(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>debug</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.errorDebuggerOnlyLogsAtErrorLevel(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>debug</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.logLineContainsAllRequiredInformation(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>debug</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.logLineContainsException(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>debug</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.logLineContainsException(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>debug</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.logLineContainsException(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>debug</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>debug</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.logLineContainsException(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>error</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.errorDebuggerOnlyLogsAtErrorLevel(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>error</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.errorDebuggerOnlyLogsAtErrorLevel(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>error</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.errorDebuggerOnlyLogsAtErrorLevel(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>error</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>error</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.errorDebuggerOnlyLogsAtErrorLevel(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>getName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.debugLoggerLogsAtAllLevels(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>info</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.errorDebuggerOnlyLogsAtErrorLevel(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>info</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.infoLoggerLogsAtAppropriateLevels(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>info</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.infoLoggerLogsAtAppropriateLevels(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>info</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.errorDebuggerOnlyLogsAtErrorLevel(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>info</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.infoLoggerLogsAtAppropriateLevels(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>isDebugEnabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.logLineContainsAllRequiredInformation(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>isDebugEnabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.errorDebuggerOnlyLogsAtErrorLevel(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>isErrorEnabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.errorDebuggerOnlyLogsAtErrorLevel(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>isErrorEnabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.errorDebuggerOnlyLogsAtErrorLevel(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>isInfoEnabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.infoLoggerLogsAtAppropriateLevels(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>isInfoEnabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.errorDebuggerOnlyLogsAtErrorLevel(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>isWarnEnabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.infoLoggerLogsAtAppropriateLevels(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>isWarnEnabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.errorDebuggerOnlyLogsAtErrorLevel(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>warn</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.errorDebuggerOnlyLogsAtErrorLevel(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>warn</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.infoLoggerLogsAtAppropriateLevels(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>warn</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.infoLoggerLogsAtAppropriateLevels(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>warn</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.errorDebuggerOnlyLogsAtErrorLevel(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>warn</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.infoLoggerLogsAtAppropriateLevels(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.errorDebuggerOnlyLogsAtErrorLevel(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.errorDebuggerOnlyLogsAtErrorLevel(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.logLineContainsAllRequiredInformation(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.logLineContainsAllRequiredInformation(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.logLineContainsAllRequiredInformation(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.logLineContainsAllRequiredInformation(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.logLineContainsAllRequiredInformation(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.errorDebuggerOnlyLogsAtErrorLevel(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.logLineContainsException(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.logLineContainsException(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.logLineContainsException(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.logLineContainsException(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger$1</name></clazz><method><name>initialValue</name></method><methodDesc>()Ljava/text/DateFormat;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.errorDebuggerOnlyLogsAtErrorLevel(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger$1</name></clazz><method><name>initialValue</name></method><methodDesc>()Ljava/text/DateFormat;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.log.PrintWriterLoggerTest.errorDebuggerOnlyLogsAtErrorLevel(org.jmxtrans.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/SystemClock</name></clazz><method><name>currentTimeMillis</name></method><methodDesc>()J</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/SystemClock</name></clazz><method><name>currentTimeMillis</name></method><methodDesc>()J</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>error</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>error</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>error</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>error</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>error</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>info</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>info</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>info</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>info</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>info</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>warn</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>warn</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>warn</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>warn</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/PrintWriterLogger</name></clazz><method><name>warn</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/LoggerFactory</name></clazz><method><name>instantiateLogProvider</name></method><methodDesc>()Lorg/jmxtrans/log/LogProvider;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/LoggerFactory</name></clazz><method><name>instantiateLogProvider</name></method><methodDesc>()Lorg/jmxtrans/log/LogProvider;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/log/ConsoleLogProvider</name></clazz><method><name>getLogLevel</name></method><methodDesc>()Lorg/jmxtrans/log/Level;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
