133
<classHistory><id hierarchicalHash="193468f11"><classId hash="2712879544"><name><name>org/jmxtrans/model/output/BaseOutputWriter$ResultValuesTransformer</name></name></classId></id><coverageId>2ab100eda</coverageId></classHistory>
<classHistory><id hierarchicalHash="aba0b39"><classId hash="179964729"><name><name>org/jmxtrans/jobs/ServerJob</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="42e1624d"><classId hash="1122067021"><name><name>org/jmxtrans/monitoring/ManagedGenericKeyedObjectPoolMBean</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="26c792f4c"><classId hash="3644309457"><name><name>org/jmxtrans/guice/JmxTransModule$3</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="1ea941035"><classId hash="4177576668"><name><name>org/jmxtrans/model/output/NagiosWriter</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="19a35c007"><classId hash="2807242235"><name><name>org/jmxtrans/model/output/RRDToolWriter$Builder</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="eb5a81a6"><classId hash="3948577190"><name><name>org/jmxtrans/classloader/JarLoadingException</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="c0bb2e90"><classId hash="932096620"><name><name>org/jmxtrans/model/output/GangliaWriter$Builder</name></name></classId></id><coverageId>9fdd4100</coverageId></classHistory>
<classHistory><id hierarchicalHash="84d22412"><classId hash="2228364306"><name><name>org/jmxtrans/model/naming/JexlNamingStrategy</name></name></classId></id><coverageId>aae7951b</coverageId></classHistory>
<classHistory><id hierarchicalHash="16af6e4bc"><classId hash="2640276780"><name><name>org/jmxtrans/guice/JmxTransModule</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="cd0262d8"><classId hash="3439485656"><name><name>org/jmxtrans/monitoring/ManagedObject</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="ab0b3b74"><classId hash="2869640052"><name><name>org/jmxtrans/guice/GuiceJobFactory</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="1e475ef65"><classId hash="4074938892"><name><name>org/jmxtrans/model/output/RRDToolWriter</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="15bb1e13b"><classId hash="1758412591"><name><name>org/jmxtrans/model/output/RRDToolWriter$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="1aa77db7a"><classId hash="3225438180"><name><name>org/jmxtrans/example/TreeWalker3$ResultCapture</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="6105c55"><classId hash="101735509"><name><name>org/jmxtrans/jmx/JmxUtils</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="267e42daf"><classId hash="3567435316"><name><name>org/jmxtrans/guice/JmxTransModule$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="1ef6b3d60"><classId hash="1546243557"><name><name>org/jmxtrans/guice/JmxTransModule$2</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="16f1f653e"><classId hash="4086949757"><name><name>org/jmxtrans/model/output/OpenTSDBWriter$Builder</name></name></classId></id><coverageId>6287b690</coverageId></classHistory>
<classHistory><id hierarchicalHash="d3ee25c8"><classId hash="3555599816"><name><name>org/jmxtrans/model/naming/StringUtilsTest</name></name></classId></id><coverageId>d3ee25c8</coverageId></classHistory>
<classHistory><id hierarchicalHash="1a613b5d7"><classId hash="3623388504"><name><name>org/jmxtrans/connections/DatagramSocketFactory</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="b34c880d"><classId hash="3008137229"><name><name>org/jmxtrans/monitoring/ManagedJmxTransformerProcessMXBean</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="a9623cf5"><classId hash="2841787637"><name><name>org/jmxtrans/classloader/ClassLoaderEnricher</name></name></classId></id><coverageId>31bc3876</coverageId></classHistory>
<classHistory><id hierarchicalHash="844be445"><classId hash="2219566149"><name><name>org/jmxtrans/model/PropertyResolverTests</name></name></classId></id><coverageId>844be445</coverageId></classHistory>
<classHistory><id hierarchicalHash="1142453be"><classId hash="3200543945"><name><name>org/jmxtrans/model/output/TCollectorUDPWriter</name></name></classId></id><coverageId>c2983b22</coverageId></classHistory>
<classHistory><id hierarchicalHash="1941af649"><classId hash="2726799600"><name><name>org/jmxtrans/model/output/StdOutWriter</name></name></classId></id><coverageId>d8dc60f9</coverageId></classHistory>
<classHistory><id hierarchicalHash="7863b26d"><classId hash="2019799661"><name><name>org/jmxtrans/model/Result</name></name></classId></id><coverageId>3d89996ab</coverageId></classHistory>
<classHistory><id hierarchicalHash="55404526"><classId hash="1430275366"><name><name>org/jmxtrans/model/Server</name></name></classId></id><coverageId>375347603</coverageId></classHistory>
<classHistory><id hierarchicalHash="146f3344e"><classId hash="1432348405"><name><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></name></classId></id><coverageId>1d00786cd</coverageId></classHistory>
<classHistory><id hierarchicalHash="7651129"><classId hash="124064041"><name><name>org/jmxtrans/JmxTransformer</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="1076b1eb"><classId hash="276214251"><name><name>org/jmxtrans/util/JsonPrinter</name></name></classId></id><coverageId>bc2d6fee</coverageId></classHistory>
<classHistory><id hierarchicalHash="ebda58de"><classId hash="3956955358"><name><name>org/jmxtrans/cli/CliArgumentParserTest</name></name></classId></id><coverageId>ebda58de</coverageId></classHistory>
<classHistory><id hierarchicalHash="7b222e65"><classId hash="2065837669"><name><name>org/jmxtrans/model/naming/ClassAttributeNamingStrategy</name></name></classId></id><coverageId>1d00786cd</coverageId></classHistory>
<classHistory><id hierarchicalHash="41cc15ed"><classId hash="1103893997"><name><name>org/jmxtrans/model/naming/StringUtils</name></name></classId></id><coverageId>175e48655</coverageId></classHistory>
<classHistory><id hierarchicalHash="a3850b12"><classId hash="2743405330"><name><name>org/jmxtrans/util/SignalInterceptor</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="17d57a38f"><classId hash="2383892808"><name><name>org/jmxtrans/model/output/KeyOutWriter$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="f9b3e0c5"><classId hash="4189315269"><name><name>org/jmxtrans/example/Hibernate</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="3525dd41"><classId hash="891673921"><name><name>org/jmxtrans/example/Tester</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="e5c3b0a9"><classId hash="3854807209"><name><name>org/jmxtrans/example/HeapMemory</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="8339135d"><classId hash="2201555805"><name><name>org/jmxtrans/model/output/NumberUtils</name></name></classId></id><coverageId>317e6e4a8</coverageId></classHistory>
<classHistory><id hierarchicalHash="d1d80837"><classId hash="3520596023"><name><name>org/jmxtrans/jmx/ProcessServerThread</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="1e76d9f50"><classId hash="4124725751"><name><name>org/jmxtrans/model/output/RRDWriter</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="a439812f"><classId hash="2755232047"><name><name>org/jmxtrans/cli/CliArgumentParser</name></name></classId></id><coverageId>ebda58de</coverageId></classHistory>
<classHistory><id hierarchicalHash="18c22b324"><classId hash="3445507675"><name><name>org/jmxtrans/model/output/TCollectorUDPWriter$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="11787e3da"><classId hash="1946343624"><name><name>org/jmxtrans/util/SignalInterceptor$SignalInterceptorException</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="a5e8fd4e"><classId hash="2783509838"><name><name>org/jmxtrans/model/output/NumberUtilsTest</name></name></classId></id><coverageId>a5e8fd4e</coverageId></classHistory>
<classHistory><id hierarchicalHash="a65d997d"><classId hash="2791151997"><name><name>org/jmxtrans/cli/JmxTransConfiguration</name></name></classId></id><coverageId>ebda58de</coverageId></classHistory>
<classHistory><id hierarchicalHash="14889e020"><classId hash="1459000007"><name><name>org/jmxtrans/model/output/Log4JWriter</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="8885472b"><classId hash="2290435883"><name><name>org/jmxtrans/connections/JMXConnectionParams</name></name></classId></id><coverageId>9c2af652</coverageId></classHistory>
<classHistory><id hierarchicalHash="dc0f5829"><classId hash="3691993129"><name><name>org/jmxtrans/model/results/ValueTransformer</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="162937e71"><classId hash="1934830634"><name><name>org/jmxtrans/model/output/DailyKeyOutWriter</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="b190922c"><classId hash="2979041836"><name><name>org/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="154e0fafc"><classId hash="3770498764"><name><name>org/jmxtrans/model/PropertyResolver$PropertyResolverFunc</name></name></classId></id><coverageId>4519ab2af</coverageId></classHistory>
<classHistory><id hierarchicalHash="71d68fe0"><classId hash="1909886944"><name><name>org/jmxtrans/EqualsTests</name></name></classId></id><coverageId>71d68fe0</coverageId></classHistory>
<classHistory><id hierarchicalHash="2ed9c721"><classId hash="786024225"><name><name>org/jmxtrans/util/LocalJMXConnector</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="dcc9045"><classId hash="231510085"><name><name>org/jmxtrans/model/JmxProcess</name></name></classId></id><coverageId>19509d0e7</coverageId></classHistory>
<classHistory><id hierarchicalHash="1007afab6"><classId hash="2354527878"><name><name>org/jmxtrans/model/PropertyResolver$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="18278c78"><classId hash="405245048"><name><name>org/jmxtrans/model/ValidationException</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="208b227b"><classId hash="545989243"><name><name>org/jmxtrans/model/Query</name></name></classId></id><coverageId>48668c3cf</coverageId></classHistory>
<classHistory><id hierarchicalHash="5733a003"><classId hash="1463001091"><name><name>org/jmxtrans/util/WatchDir</name></name></classId></id><coverageId>3dda75a2</coverageId></classHistory>
<classHistory><id hierarchicalHash="31bc3876"><classId hash="834418806"><name><name>org/jmxtrans/classloader/ClassLoadingTests</name></name></classId></id><coverageId>31bc3876</coverageId></classHistory>
<classHistory><id hierarchicalHash="a4040385"><classId hash="2751726469"><name><name>org/jmxtrans/model/naming/KeyUtilsTests</name></name></classId></id><coverageId>a4040385</coverageId></classHistory>
<classHistory><id hierarchicalHash="f1934d59"><classId hash="4052962649"><name><name>org/jmxtrans/model/output/BaseOutputWriter</name></name></classId></id><coverageId>423c9b0d3</coverageId></classHistory>
<classHistory><id hierarchicalHash="94d11a02"><classId hash="1066456284"><name><name>org/jmxtrans/model/Server$Builder</name></name></classId></id><coverageId>29c58150a</coverageId></classHistory>
<classHistory><id hierarchicalHash="3dda75a2"><classId hash="1037727138"><name><name>org/jmxtrans/util/WatchDirTest</name></name></classId></id><coverageId>3dda75a2</coverageId></classHistory>
<classHistory><id hierarchicalHash="75181465"><classId hash="1418523114"><name><name>org/jmxtrans/model/Query$Builder</name></name></classId></id><coverageId>3ad8c62d6</coverageId></classHistory>
<classHistory><id hierarchicalHash="1141e52fd"><classId hash="4086509698"><name><name>org/jmxtrans/model/Query$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="5355381a"><classId hash="1398093850"><name><name>org/jmxtrans/model/NamingStrategy</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="c05b069a"><classId hash="3227190938"><name><name>org/jmxtrans/model/results/IdentityValueTransformerTests</name></name></classId></id><coverageId>c05b069a</coverageId></classHistory>
<classHistory><id hierarchicalHash="76731f79"><classId hash="1987256185"><name><name>org/jmxtrans/util/JsonUtils</name></name></classId></id><coverageId>d8dc60f9</coverageId></classHistory>
<classHistory><id hierarchicalHash="8b206ab7"><classId hash="2334157495"><name><name>org/jmxtrans/jmx/JmxResultProcessorTest</name></name></classId></id><coverageId>8b206ab7</coverageId></classHistory>
<classHistory><id hierarchicalHash="7c0a0458"><classId hash="2081031256"><name><name>org/jmxtrans/model/OutputWriter</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="d2ed62d3"><classId hash="3538772691"><name><name>org/jmxtrans/example/TreeWalker2</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="c2983b22"><classId hash="3264756514"><name><name>org/jmxtrans/model/output/TCollectorUDPWriterTests</name></name></classId></id><coverageId>c2983b22</coverageId></classHistory>
<classHistory><id hierarchicalHash="11e0176ce"><classId hash="3368104360"><name><name>org/jmxtrans/model/Server$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="ea379396"><classId hash="3929510806"><name><name>org/jmxtrans/example/TreeWalker3</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="39122780"><classId hash="957491072"><name><name>org/jmxtrans/model/output/BaseOutputWriterTests</name></name></classId></id><coverageId>39122780</coverageId></classHistory>
<classHistory><id hierarchicalHash="b1a85073"><classId hash="2980597875"><name><name>org/jmxtrans/example/ActiveMQ2</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="a9c2bd9e"><classId hash="775765981"><name><name>org/jmxtrans/model/output/OpenTSDBWriter$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="19ab7560"><classId hash="430667104"><name><name>org/jmxtrans/example/InterestingInfo</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="d0e564b6"><classId hash="2072346049"><name><name>org/jmxtrans/model/output/OpenTSDBWriter</name></name></classId></id><coverageId>6287b690</coverageId></classHistory>
<classHistory><id hierarchicalHash="4cf4576e"><classId hash="1291081582"><name><name>org/jmxtrans/cli/OptionsException</name></name></classId></id><coverageId>ebda58de</coverageId></classHistory>
<classHistory><id hierarchicalHash="4642f386"><classId hash="1054728797"><name><name>org/jmxtrans/JmxTransformer$ShutdownHook</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="6287b690"><classId hash="1653061264"><name><name>org/jmxtrans/model/output/OpenTSDBWriterTests</name></name></classId></id><coverageId>6287b690</coverageId></classHistory>
<classHistory><id hierarchicalHash="f40fa804"><classId hash="4094666756"><name><name>org/jmxtrans/model/results/IdentityValueTransformer</name></name></classId></id><coverageId>4e424b76d</coverageId></classHistory>
<classHistory><id hierarchicalHash="17abfd17d"><classId hash="2301396004"><name><name>org/jmxtrans/model/output/GangliaWriter</name></name></classId></id><coverageId>9fdd4100</coverageId></classHistory>
<classHistory><id hierarchicalHash="10f47cc1d"><classId hash="621820039"><name><name>org/jmxtrans/example/TreeWalker3$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="1698f7c75"><classId hash="3960138777"><name><name>org/jmxtrans/model/output/GraphiteWriter$Builder</name></name></classId></id><coverageId>a1f6608d</coverageId></classHistory>
<classHistory><id hierarchicalHash="7423bc30"><classId hash="1948498992"><name><name>org/jmxtrans/model/PropertyResolver</name></name></classId></id><coverageId>7a1fa2046</coverageId></classHistory>
<classHistory><id hierarchicalHash="aae7951b"><classId hash="2867303707"><name><name>org/jmxtrans/model/output/OpenTSDBGenericWriterTests</name></name></classId></id><coverageId>aae7951b</coverageId></classHistory>
<classHistory><id hierarchicalHash="162c7d198"><classId hash="3846390076"><name><name>org/jmxtrans/model/output/GraphiteWriter$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="a1f6608d"><classId hash="2717278349"><name><name>org/jmxtrans/model/output/GraphiteWriterTests</name></name></classId></id><coverageId>a1f6608d</coverageId></classHistory>
<classHistory><id hierarchicalHash="a922eaed"><classId hash="2837637869"><name><name>org/jmxtrans/example/Ehcache</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="20b28d67"><classId hash="548572519"><name><name>org/jmxtrans/exceptions/LifecycleException</name></name></classId></id><coverageId>1d00786cd</coverageId></classHistory>
<classHistory><id hierarchicalHash="9fdd4100"><classId hash="2682077440"><name><name>org/jmxtrans/model/output/GangliaWriterTests</name></name></classId></id><coverageId>9fdd4100</coverageId></classHistory>
<classHistory><id hierarchicalHash="118b30005"><classId hash="2760852437"><name><name>org/jmxtrans/model/PropertyResolver$ObjectPropertyResolverFunc</name></name></classId></id><coverageId>2ff3c2272</coverageId></classHistory>
<classHistory><id hierarchicalHash="1bfc6b158"><classId hash="4054548697"><name><name>org/jmxtrans/connections/JmxConnectionFactory</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="1f9b6481"><classId hash="530277505"><name><name>org/jmxtrans/connections/SocketFactoryTests</name></name></classId></id><coverageId>1f9b6481</coverageId></classHistory>
<classHistory><id hierarchicalHash="47410056"><classId hash="1195442262"><name><name>org/jmxtrans/example/TreeWalker</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="ffbd28d0"><classId hash="237624183"><name><name>org/jmxtrans/model/output/StatsDWriter</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="8e2bc9e5"><classId hash="2385234405"><name><name>org/jmxtrans/model/ServerTests</name></name></classId></id><coverageId>8e2bc9e5</coverageId></classHistory>
<classHistory><id hierarchicalHash="122381594"><classId hash="816105531"><name><name>org/jmxtrans/model/output/SensuWriter</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="a2691d1a"><classId hash="2724797722"><name><name>org/jmxtrans/jmx/JmxProcessingTests</name></name></classId></id><coverageId>a2691d1a</coverageId></classHistory>
<classHistory><id hierarchicalHash="f1c262de"><classId hash="4056048350"><name><name>org/jmxtrans/example/Ganglia</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="11ac47d7b"><classId hash="1286163708"><name><name>org/jmxtrans/connections/SocketFactory</name></name></classId></id><coverageId>1f9b6481</coverageId></classHistory>
<classHistory><id hierarchicalHash="d8dc60f9"><classId hash="3638321401"><name><name>org/jmxtrans/util/JsonUtilsTest</name></name></classId></id><coverageId>d8dc60f9</coverageId></classHistory>
<classHistory><id hierarchicalHash="1e0d39fa0"><classId hash="4013969991"><name><name>org/jmxtrans/model/output/KeyOutWriter</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="ecfcf00d"><classId hash="3975999501"><name><name>org/jmxtrans/model/results/BooleanAsNumberValueTransformer</name></name></classId></id><coverageId>7c48b9bb</coverageId></classHistory>
<classHistory><id hierarchicalHash="16f17ddb5"><classId hash="2105839708"><name><name>org/jmxtrans/model/output/GraphiteWriter</name></name></classId></id><coverageId>a1f6608d</coverageId></classHistory>
<classHistory><id hierarchicalHash="9c2af652"><classId hash="2620061266"><name><name>org/jmxtrans/connections/JmxConnectionParamsTests</name></name></classId></id><coverageId>9c2af652</coverageId></classHistory>
<classHistory><id hierarchicalHash="18b733628"><classId hash="3891145494"><name><name>org/jmxtrans/util/SignalInterceptor$SignalInterceptorHelper</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="c24f5b9b"><classId hash="3259980699"><name><name>org/jmxtrans/example/ActiveMQ</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="dc8acb7b"><classId hash="3700083579"><name><name>org/jmxtrans/jmx/JmxResultProcessor</name></name></classId></id><coverageId>12d8987d1</coverageId></classHistory>
<classHistory><id hierarchicalHash="d2889019"><classId hash="3532165145"><name><name>org/jmxtrans/jmx/ProcessQueryThread</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="4336923b"><classId hash="1127649851"><name><name>org/jmxtrans/model/results/BooleanAsNumberValueTransformerTests</name></name></classId></id><coverageId>4336923b</coverageId></classHistory>
<classHistory><id hierarchicalHash="bc2d6fee"><classId hash="3157094382"><name><name>org/jmxtrans/util/JsonPrinterTest</name></name></classId></id><coverageId>bc2d6fee</coverageId></classHistory>
<classHistory><id hierarchicalHash="d990b114"><classId hash="3650138388"><name><name>org/jmxtrans/example/MemoryPool</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="15754737f"><classId hash="2559575734"><name><name>org/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></name></classId></id><coverageId>c2983b22</coverageId></classHistory>
<classHistory><id hierarchicalHash="97ec40c5"><classId hash="2548842693"><name><name>org/jmxtrans/util/WatchedCallback</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="102b39aa"><classId hash="271268266"><name><name>org/jmxtrans/model/MergingTests</name></name></classId></id><coverageId>102b39aa</coverageId></classHistory>
<classHistory><id hierarchicalHash="a0c95b3b"><classId hash="2697550651"><name><name>org/jmxtrans/jmx/JmxQueryProcessor</name></name></classId></id><coverageId>a2691d1a</coverageId></classHistory>
<classHistory><id hierarchicalHash="1583d21c9"><classId hash="1722406000"><name><name>org/jmxtrans/model/output/StackdriverWriter</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="1bc2d49e8"><classId hash="3399089295"><name><name>org/jmxtrans/model/output/LibratoWriter</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="fcb086f5"><classId hash="4239427317"><name><name>org/jmxtrans/example/Graphite</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="ebad27b4"><classId hash="3953993652"><name><name>org/jmxtrans/ManagedJmxTransformerProcess</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="10c9afb0e"><classId hash="328874034"><name><name>org/jmxtrans/model/output/NagiosWriter$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="13a04c3da"><classId hash="2966962102"><name><name>org/jmxtrans/model/output/GangliaWriter$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="8a293e01"><classId hash="2317958657"><name><name>org/jmxtrans/model/output/Settings</name></name></classId></id><coverageId>4b292f036</coverageId></classHistory>
<classHistory><id hierarchicalHash="1071e9123"><classId hash="361448394"><name><name>org/jmxtrans/model/output/BaseOutputWriter$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="1c278d2b4"><classId hash="3504702811"><name><name>org/jmxtrans/model/output/VelocityWriter</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="8ec93f63"><classId hash="2395553635"><name><name>org/jmxtrans/model/output/SettingsTests</name></name></classId></id><coverageId>8ec93f63</coverageId></classHistory>
<classHistory><id hierarchicalHash="c61e0370"><classId hash="3323855728"><name><name>org/jmxtrans/model/naming/KeyUtils</name></name></classId></id><coverageId>1f0e1f92d</coverageId></classHistory>
<classHistory><id hierarchicalHash="ff931a72"><classId hash="273860651"><name><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></name></classId></id><coverageId>0</coverageId></classHistory>
<result><id><location><clazz><name>org/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.classloader.ClassLoadingTests.loadingNonExistingFileThrowsException(org.jmxtrans.classloader.ClassLoadingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.classloader.ClassLoadingTests.loadingNonExistingFileThrowsException(org.jmxtrans.classloader.ClassLoadingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.classloader.ClassLoadingTests.loadingNonExistingFileThrowsException(org.jmxtrans.classloader.ClassLoadingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.classloader.ClassLoadingTests.loadingNonExistingFileThrowsException(org.jmxtrans.classloader.ClassLoadingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.classloader.ClassLoadingTests.loadingNonExistingFileThrowsException(org.jmxtrans.classloader.ClassLoadingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.classloader.ClassLoadingTests.loadingNonExistingFileThrowsException(org.jmxtrans.classloader.ClassLoadingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.classloader.ClassLoadingTests.loadingNonExistingFileThrowsException(org.jmxtrans.classloader.ClassLoadingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.jsonConfigDirectoryMustExist(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsCanBeSetToTrueOrFalse(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.jsonConfigDirectoryMustExist(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsCanBeSetToTrueOrFalse(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.quartzConfigFileCannotBeADirectory(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.canParseRunInterval(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.noExceptionThrownWhenHelpIsAsked(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsCanBeSetToTrueOrFalse(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.jsonConfigDirectoryMustExist(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsCanBeSetToTrueOrFalse(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.quartzConfigFileCannotBeADirectory(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.runIntervalMustBeInteger(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.jsonConfigDirectoryMustExist(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.jsonConfigDirectoryMustExist(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.noExceptionThrownWhenHelpIsAsked(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.jsonConfigDirectoryMustExist(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsCanBeSetToTrueOrFalse(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.jsonConfigDirectoryMustExist(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsCanBeSetToTrueOrFalse(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.jsonConfigDirectoryMustExist(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.jsonConfigDirectoryMustExist(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>104</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.jsonConfigDirectoryMustExist(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>123</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsCanBeSetToTrueOrFalse(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>146</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.jsonConfigFileCannotBeADirectory(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>152</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.jsonConfigFileCannotBeADirectory(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>185</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.quartzConfigFileCannotBeADirectory(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>209</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.quartzConfigFileCannotBeADirectory(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>216</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.quartzConfigFileCannotBeADirectory(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>248</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.runIntervalMustBeInteger(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>317</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.noExceptionThrownWhenHelpIsAsked(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>350</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.jsonDirectoryOrJsonFileIsRequired(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>334</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsCanBeSetToTrueOrFalse(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.jsonConfigDirectoryMustExist(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>329</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.noExceptionThrownWhenHelpIsAsked(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.jsonConfigDirectoryMustExist(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.jsonConfigDirectoryMustExist(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.jsonConfigDirectoryMustExist(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.jsonConfigDirectoryCannotBeAFile(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>116</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsCanBeSetToTrueOrFalse(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsCanBeSetToTrueOrFalse(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsCanBeSetToTrueOrFalse(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>164</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.quartzConfigFileCannotBeADirectory(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>178</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.quartzConfigFileCannotBeADirectory(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>191</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>194</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.quartzConfigFileCannotBeADirectory(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>228</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.runIntervalMustBeInteger(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>257</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.noExceptionThrownWhenHelpIsAsked(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>312</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.noExceptionThrownWhenHelpIsAsked(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>341</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.jsonDirectoryOrJsonFileIsRequired(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>344</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsCanBeSetToTrueOrFalse(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.jsonConfigDirectoryMustExist(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.jsonConfigDirectoryMustExist(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.jsonConfigDirectoryMustExist(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.jsonConfigDirectoryMustExist(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsCanBeSetToTrueOrFalse(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsCanBeSetToTrueOrFalse(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsCanBeSetToTrueOrFalse(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.jsonConfigDirectoryMustExist(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.jsonConfigDirectoryMustExist(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.jsonConfigDirectoryMustExist(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.jsonConfigDirectoryMustExist(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>102</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.jsonConfigDirectoryMustExist(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.jsonConfigDirectoryMustExist(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>113</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsCanBeSetToTrueOrFalse(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>115</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsCanBeSetToTrueOrFalse(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsCanBeSetToTrueOrFalse(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsCanBeSetToTrueOrFalse(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>131</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsCanBeSetToTrueOrFalse(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>148</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.jsonConfigFileCannotBeADirectory(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>150</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.jsonConfigFileCannotBeADirectory(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>151</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.jsonConfigFileCannotBeADirectory(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>161</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.quartzConfigFileCannotBeADirectory(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>163</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>175</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.quartzConfigFileCannotBeADirectory(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>177</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.quartzConfigFileCannotBeADirectory(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>184</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.quartzConfigFileCannotBeADirectory(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>190</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>193</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>211</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.quartzConfigFileCannotBeADirectory(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>213</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>214</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.quartzConfigFileCannotBeADirectory(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>215</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.quartzConfigFileCannotBeADirectory(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>225</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.runIntervalMustBeInteger(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>227</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.runIntervalMustBeInteger(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>233</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.canParseRunInterval(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>234</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.runIntervalMustBeInteger(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>254</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.noExceptionThrownWhenHelpIsAsked(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>256</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>309</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.noExceptionThrownWhenHelpIsAsked(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>311</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.noExceptionThrownWhenHelpIsAsked(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>324</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.noExceptionThrownWhenHelpIsAsked(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>340</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.noExceptionThrownWhenHelpIsAsked(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>343</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsCanBeSetToTrueOrFalse(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsCanBeSetToTrueOrFalse(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.jsonConfigDirectoryMustExist(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>116</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsCanBeSetToTrueOrFalse(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsCanBeSetToTrueOrFalse(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsCanBeSetToTrueOrFalse(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>164</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>178</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.quartzConfigFileCannotBeADirectory(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>191</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>194</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>228</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.runIntervalMustBeInteger(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>257</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>312</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.noExceptionThrownWhenHelpIsAsked(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>341</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.jsonDirectoryOrJsonFileIsRequired(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>344</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.jsonDirectoryOrJsonFileIsRequired(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.jsonConfigDirectoryMustExist(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsCanBeSetToTrueOrFalse(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.jsonConfigDirectoryCannotBeAFile(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>116</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.quartzConfigFileCannotBeADirectory(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.jsonConfigFileCannotBeADirectory(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>164</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.quartzConfigFileCannotBeADirectory(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>178</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.runIntervalMustBeInteger(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>191</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>194</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.quartzConfigFileCannotBeADirectory(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>228</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.noExceptionThrownWhenHelpIsAsked(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>257</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.noExceptionThrownWhenHelpIsAsked(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>312</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>341</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.noExceptionThrownWhenHelpIsAsked(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>344</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsCanBeSetToTrueOrFalse(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.jsonConfigDirectoryMustExist(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsCanBeSetToTrueOrFalse(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>356</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsCanBeSetToTrueOrFalse(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsCanBeSetToTrueOrFalse(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>137</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsCanBeSetToTrueOrFalse(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>235</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.canParseRunInterval(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>325</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>330</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.noExceptionThrownWhenHelpIsAsked(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/JmxTransConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsFalseByDefault(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/JmxTransConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/JmxTransConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/JmxTransConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.jsonDirectoryOrJsonFileIsRequired(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/JmxTransConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/JmxTransConfiguration</name></clazz><method><name>getJsonDirOrFile</name></method><methodDesc>()Ljava/io/File;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsCanBeSetToTrueOrFalse(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/JmxTransConfiguration</name></clazz><method><name>getRunPeriod</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.canParseRunInterval(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/JmxTransConfiguration</name></clazz><method><name>isContinueOnJsonError</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsCanBeSetToTrueOrFalse(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/JmxTransConfiguration</name></clazz><method><name>isHelp</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.cli.CliArgumentParserTest.jsonDirectoryOrJsonFileIsRequired(org.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljavax/management/remote/JMXServiceURL;Ljava/util/Map;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentAreEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>asList</name></method><methodDesc>(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>asList</name></method><methodDesc>(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>asList</name></method><methodDesc>(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>asList</name></method><methodDesc>(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>asList</name></method><methodDesc>(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>asList</name></method><methodDesc>(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>asList</name></method><methodDesc>(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>asList</name></method><methodDesc>(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>asList</name></method><methodDesc>(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>asList</name></method><methodDesc>(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>asList</name></method><methodDesc>(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>asList</name></method><methodDesc>(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentEnvironmentsAreNotEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentAreEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithArrayAsEnvironmentValueAreEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentEnvironmentsAreNotEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentEnvironmentsAreNotEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentEnvironmentsAreNotEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithArrayAsEnvironmentValueAreEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentEnvironmentsAreNotEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentAreEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentAreEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentAreEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentAreEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentAreEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentAreEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentAreEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentAreEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentAreEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentAreEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentAreEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentAreEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentAreEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentAreEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentAreEquals(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentHaveSameHashCodes(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentHaveSameHashCodes(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentHaveSameHashCodes(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentEnvironmentsHaveDifferentHashCodes(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentHaveSameHashCodes(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentHaveSameHashCodes(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsDifferentUrlAndNoEnvironmentHaveDifferentHashCodes(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsDifferentUrlAndNoEnvironmentHaveDifferentHashCodes(org.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>makeObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;)Ljava/net/Socket;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.SocketFactoryTests.createdSocketIsValid(org.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>makeObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;)Ljava/net/Socket;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>makeObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;)Ljava/net/Socket;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>makeObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;)Ljava/net/Socket;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.SocketFactoryTests.createdSocketIsValid(org.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>makeObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;)Ljava/net/Socket;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.SocketFactoryTests.createdSocketIsValid(org.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>makeObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;)Ljava/net/Socket;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.SocketFactoryTests.nullSocketIsInvalid(org.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.SocketFactoryTests.closedSocketIsInvalid(org.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>104</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.SocketFactoryTests.createdSocketIsValid(org.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.SocketFactoryTests.createdSocketIsValid(org.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.SocketFactoryTests.createdSocketIsValid(org.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.SocketFactoryTests.createdSocketIsValid(org.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.SocketFactoryTests.createdSocketIsValid(org.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.SocketFactoryTests.createdSocketIsValid(org.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.SocketFactoryTests.createdSocketIsValid(org.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.SocketFactoryTests.createdSocketIsValid(org.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.SocketFactoryTests.closedSocketIsInvalid(org.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.SocketFactoryTests.createdSocketIsValid(org.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.SocketFactoryTests.nullSocketIsInvalid(org.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.SocketFactoryTests.closedSocketIsInvalid(org.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.SocketFactoryTests.createdSocketIsValid(org.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.SocketFactoryTests.createdSocketIsValid(org.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.SocketFactoryTests.createdSocketIsValid(org.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.SocketFactoryTests.createdSocketIsValid(org.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.SocketFactoryTests.createdSocketIsValid(org.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.SocketFactoryTests.createdSocketIsValid(org.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.SocketFactoryTests.nullSocketIsInvalid(org.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.SocketFactoryTests.closedSocketIsInvalid(org.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>105</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.connections.SocketFactoryTests.createdSocketIsValid(org.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(org.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(org.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(org.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(org.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(org.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(org.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(org.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(org.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(org.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>104</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(org.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(org.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(org.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>139</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(org.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>processQuery</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(org.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>processQuery</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(org.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>processQuery</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(org.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>processQuery</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(org.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>processQuery</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(org.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>processQuery</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(org.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>processQuery</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(org.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>processQuery</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(org.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>processQuery</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(org.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>processQuery</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(org.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>processQuery</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(org.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>runOutputWritersForQuery</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(org.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>runOutputWritersForQuery</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(org.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>runOutputWritersForQuery</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(org.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>runOutputWritersForQuery</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(org.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>runOutputWritersForQuery</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(org.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>runOutputWritersForQuery</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(org.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>runOutputWritersForQuery</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(org.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>runOutputWritersForQuery</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(org.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getNewResultObject</name></method><methodDesc>(Ljava/lang/String;Ljava/util/Map;)Lorg/jmxtrans/model/Result;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleBooleanValue(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getNewResultObject</name></method><methodDesc>(Ljava/lang/String;Ljava/util/Map;)Lorg/jmxtrans/model/Result;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getNewResultObject</name></method><methodDesc>(Ljava/lang/String;Ljava/util/Map;)Lorg/jmxtrans/model/Result;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canCreateBasicResultData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getNewResultObject</name></method><methodDesc>(Ljava/lang/String;Ljava/util/Map;)Lorg/jmxtrans/model/Result;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleBooleanValue(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getNewResultObject</name></method><methodDesc>(Ljava/lang/String;Ljava/util/Map;)Lorg/jmxtrans/model/Result;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getNewResultObject</name></method><methodDesc>(Ljava/lang/String;Ljava/util/Map;)Lorg/jmxtrans/model/Result;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleBooleanValue(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>109</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>115</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleBooleanValue(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleBooleanValue(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleBooleanValue(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleBooleanValue(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleBooleanValue(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>200</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleBooleanValue(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleBooleanValue(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>138</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleBooleanValue(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>139</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>208</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>214</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>216</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>223</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>230</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>238</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleBooleanValue(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>244</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleBooleanValue(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>246</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleBooleanValue(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>252</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleBooleanValue(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>254</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleBooleanValue(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>260</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleBooleanValue(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>200</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleBooleanValue(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleBooleanValue(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleBooleanValue(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleBooleanValue(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleBooleanValue(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>200</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleBooleanValue(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>225</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResults</name></method><methodDesc>()Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleBooleanValue(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResults</name></method><methodDesc>()Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleBooleanValue(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResults</name></method><methodDesc>()Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleBooleanValue(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResults</name></method><methodDesc>()Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleBooleanValue(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResults</name></method><methodDesc>()Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleBooleanValue(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResults</name></method><methodDesc>()Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleBooleanValue(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResults</name></method><methodDesc>()Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleBooleanValue(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResults</name></method><methodDesc>()Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleBooleanValue(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResults</name></method><methodDesc>()Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleBooleanValue(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResults</name></method><methodDesc>()Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleBooleanValue(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/JmxProcess</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.util.JsonUtilsTest.loadingFromFile(org.jmxtrans.util.JsonUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/JmxProcess</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/JmxProcess</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.util.JsonPrinterTest.standardJsonPrinting(org.jmxtrans.util.JsonPrinterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/JmxProcess</name></clazz><method><name>getName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.util.JsonPrinterTest.standardJsonPrinting(org.jmxtrans.util.JsonPrinterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/JmxProcess</name></clazz><method><name>getNumMultiThreadedServers</name></method><methodDesc>()Ljava/lang/Integer;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.util.JsonPrinterTest.standardJsonPrinting(org.jmxtrans.util.JsonPrinterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/JmxProcess</name></clazz><method><name>getServers</name></method><methodDesc>()Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.util.JsonPrinterTest.standardJsonPrinting(org.jmxtrans.util.JsonPrinterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/JmxProcess</name></clazz><method><name>setServers</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.util.JsonUtilsTest.loadingFromFile(org.jmxtrans.util.JsonUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveList</name></method><methodDesc>(Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.EqualsTests.testQuery2(org.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveList</name></method><methodDesc>(Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.EqualsTests.testQuery2(org.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveList</name></method><methodDesc>(Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testList(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveList</name></method><methodDesc>(Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testList(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveMap</name></method><methodDesc>(Ljava/util/Map;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testResolveMap(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveMap</name></method><methodDesc>(Ljava/util/Map;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testResolveMap(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveMap</name></method><methodDesc>(Ljava/util/Map;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testResolveMap(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>147</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>101</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>148</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.EqualsTests.testQuery2(org.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>124</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>114</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>137</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>139</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>141</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>157</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>124</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.EqualsTests.testQuery2(org.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>124</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.EqualsTests.testQuery2(org.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>158</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testResolveMap(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testResolveMap(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testResolveMap(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testResolveMap(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testProps(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver$ObjectPropertyResolverFunc</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testResolveMap(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver$ObjectPropertyResolverFunc</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testResolveMap(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver$ObjectPropertyResolverFunc</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testResolveMap(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver$ObjectPropertyResolverFunc</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testMap(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver$ObjectPropertyResolverFunc</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.PropertyResolverTests.testResolveMap(org.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver$ObjectPropertyResolverFunc</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.BaseOutputWriterTests.cannotHaveNullValueInSettings(org.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver$PropertyResolverFunc</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.EqualsTests.testQuery2(org.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver$PropertyResolverFunc</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.EqualsTests.testQuery2(org.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Ljava/lang/String;ZLjava/util/List;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Ljava/lang/String;ZLjava/util/List;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.EqualsTests.testQuery2(org.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Ljava/lang/String;ZLjava/util/List;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.util.JsonUtilsTest.loadingFromFile(org.jmxtrans.util.JsonUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Ljava/lang/String;ZLjava/util/List;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.util.JsonUtilsTest.loadingFromFile(org.jmxtrans.util.JsonUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Ljava/lang/String;ZLjava/util/List;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.EqualsTests.testQuery2(org.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Ljava/lang/String;ZLjava/util/List;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Ljava/lang/String;ZLjava/util/List;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Ljava/lang/String;ZLjava/util/List;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.EqualsTests.testQuery2(org.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Ljava/lang/String;ZLjava/util/List;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(org.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Ljava/lang/String;ZLjava/util/List;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.util.JsonUtilsTest.loadingFromFile(org.jmxtrans.util.JsonUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Ljava/lang/String;ZLjava/util/List;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.EqualsTests.testQuery2(org.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Ljava/lang/String;ZLjava/util/List;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>builder</name></method><methodDesc>()Lorg/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.EqualsTests.testQuery2(org.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>builder</name></method><methodDesc>()Lorg/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.EqualsTests.testQuery2(org.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.EqualsTests.testQuery2(org.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.testMerge(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.testMerge(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.EqualsTests.testQuery2(org.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.testMerge(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.testMerge(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.testMerge(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.testMerge(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.testMerge(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.testMerge(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.EqualsTests.testQuery2(org.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.testMerge(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.testMerge(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.EqualsTests.testQuery2(org.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.testMerge(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.testMerge(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.EqualsTests.testQuery2(org.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.testMerge(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.testMerge(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.EqualsTests.testQuery2(org.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.EqualsTests.testQuery2(org.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.testMerge(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.testMerge(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.EqualsTests.testQuery2(org.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.testMerge(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.testMerge(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.testMerge(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.EqualsTests.testQuery2(org.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>getAttr</name></method><methodDesc>()Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.util.JsonUtilsTest.loadingFromFile(org.jmxtrans.util.JsonUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>getKeys</name></method><methodDesc>()Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>getObj</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.EqualsTests.testQuery2(org.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>getOutputWriters</name></method><methodDesc>()Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(org.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>getResultAlias</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.sameServerWithTwoDifferentQueriesMergesQueries(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>getTypeNames</name></method><methodDesc>()Lcom/google/common/collect/ImmutableSet;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.sameServerWithTwoDifferentQueriesMergesQueries(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.sameServerWithTwoDifferentQueriesMergesQueries(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.sameServerWithTwoDifferentQueriesMergesQueries(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.sameServerWithTwoDifferentQueriesMergesQueries(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.sameServerWithTwoDifferentQueriesMergesQueries(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.sameServerWithTwoDifferentQueriesMergesQueries(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.sameServerWithTwoDifferentQueriesMergesQueries(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.sameServerWithTwoDifferentQueriesMergesQueries(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>isAllowDottedKeys</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>sizeOf</name></method><methodDesc>(Ljava/util/List;)I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>sizeOf</name></method><methodDesc>(Ljava/util/List;)I</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>sizeOf</name></method><methodDesc>(Ljava/util/List;)I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>sizeOf</name></method><methodDesc>(Ljava/util/List;)I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>sizeOf</name></method><methodDesc>(Ljava/util/List;)I</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.EqualsTests.testQuery2(org.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.EqualsTests.testQuery2(org.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(org.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query$Builder</name></clazz><method><name>addAttr</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.EqualsTests.testQuery2(org.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query$Builder</name></clazz><method><name>addAttr</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query$Builder</name></clazz><method><name>addAttr</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.EqualsTests.testQuery2(org.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query$Builder</name></clazz><method><name>addKey</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.testMerge(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query$Builder</name></clazz><method><name>addKey</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.testMerge(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query$Builder</name></clazz><method><name>addKey</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.testMerge(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query$Builder</name></clazz><method><name>addKey</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.testMerge(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query$Builder</name></clazz><method><name>addKeys</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.EqualsTests.testQuery2(org.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query$Builder</name></clazz><method><name>addKeys</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query$Builder</name></clazz><method><name>addKeys</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.EqualsTests.testQuery2(org.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query$Builder</name></clazz><method><name>addOutputWriter</name></method><methodDesc>(Lorg/jmxtrans/model/OutputWriter;)Lorg/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(org.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query$Builder</name></clazz><method><name>addOutputWriter</name></method><methodDesc>(Lorg/jmxtrans/model/OutputWriter;)Lorg/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(org.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query$Builder</name></clazz><method><name>addOutputWriter</name></method><methodDesc>(Lorg/jmxtrans/model/OutputWriter;)Lorg/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(org.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query$Builder</name></clazz><method><name>addOutputWriter</name></method><methodDesc>(Lorg/jmxtrans/model/OutputWriter;)Lorg/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(org.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query$Builder</name></clazz><method><name>addOutputWriters</name></method><methodDesc>([Lorg/jmxtrans/model/OutputWriter;)Lorg/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(org.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query$Builder</name></clazz><method><name>addOutputWriters</name></method><methodDesc>([Lorg/jmxtrans/model/OutputWriter;)Lorg/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(org.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query$Builder</name></clazz><method><name>addOutputWriters</name></method><methodDesc>([Lorg/jmxtrans/model/OutputWriter;)Lorg/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(org.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/model/Query;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.EqualsTests.testQuery2(org.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/model/Query;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.EqualsTests.testQuery2(org.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query$Builder</name></clazz><method><name>setObj</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.EqualsTests.testQuery2(org.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query$Builder</name></clazz><method><name>setResultAlias</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.EqualsTests.testQuery2(org.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Result</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleBooleanValue(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Result</name></clazz><method><name>getAttributeName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleBooleanValue(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Result</name></clazz><method><name>getClassName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canCreateBasicResultData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Result</name></clazz><method><name>getClassNameAlias</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canCreateBasicResultData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Result</name></clazz><method><name>getEpoch</name></method><methodDesc>()J</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Result</name></clazz><method><name>getTypeName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Result</name></clazz><method><name>getValues</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleBooleanValue(org.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Result</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Result</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Result</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Result</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Result</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Result</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Result</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Result</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Result</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Result</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Result</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Result</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Result</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Result</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;ZLjava/util/List;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;ZLjava/util/List;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;ZLjava/util/List;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;ZLjava/util/List;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;ZLjava/util/List;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;ZLjava/util/List;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.sameServerWithTwoDifferentQueriesMergesQueries(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>builder</name></method><methodDesc>()Lorg/jmxtrans/model/Server$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>builder</name></method><methodDesc>()Lorg/jmxtrans/model/Server$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>builder</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)Lorg/jmxtrans/model/Server$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.sameServerWithTwoDifferentQueriesMergesQueries(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>builder</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)Lorg/jmxtrans/model/Server$Builder;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.sameServerWithTwoDifferentQueriesMergesQueries(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>extractPortFromUrl</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>extractPortFromUrl</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>extractPortFromUrl</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>extractPortFromUrl</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>extractPortFromUrl</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>extractPortFromUrl</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>extractPortFromUrl</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>extractPortFromUrl</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>extractPortFromUrl</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>extractPortFromUrl</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>extractPortFromUrl</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>extractPortFromUrl</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>extractPortFromUrl</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>extractPortFromUrl</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getAlias</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testHashCode(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getCronExpression</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testHashCode(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getNumQueryThreads</name></method><methodDesc>()Ljava/lang/Integer;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testHashCode(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getPassword</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testHashCode(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getPort</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getPort</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getPort</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getPort</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getPort</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getPort</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getPort</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getPort</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getPort</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getPort</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getPort</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getPort</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getProtocolProviderPackages</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.util.JsonPrinterTest.standardJsonPrinting(org.jmxtrans.util.JsonPrinterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getQueries</name></method><methodDesc>()Lcom/google/common/collect/ImmutableSet;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.sameServerWithTwoDifferentQueriesMergesQueries(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getUsername</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testHashCode(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testHashCode(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testHashCode(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testHashCode(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testHashCode(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testHashCode(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testHashCode(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testHashCode(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testHashCode(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testHashCode(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testHashCode(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testHashCode(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testHashCode(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testHashCode(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>isLocal</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>merge</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Server;)Lorg/jmxtrans/model/Server;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.sameServerWithTwoDifferentQueriesMergesQueries(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>merge</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Server;)Lorg/jmxtrans/model/Server;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.sameServerWithTwoDifferentQueriesMergesQueries(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>merge</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Server;)Lorg/jmxtrans/model/Server;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.sameServerWithTwoDifferentQueriesMergesQueries(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>merge</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Server;)Lorg/jmxtrans/model/Server;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.sameServerWithTwoDifferentQueriesMergesQueries(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>merge</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Server;)Lorg/jmxtrans/model/Server;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.sameServerWithTwoDifferentQueriesMergesQueries(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>mergeServerLists</name></method><methodDesc>(Ljava/util/List;Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.sameServerWithTwoDifferentQueriesMergesQueries(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>mergeServerLists</name></method><methodDesc>(Ljava/util/List;Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.sameServerWithTwoDifferentQueriesMergesQueries(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>mergeServerLists</name></method><methodDesc>(Ljava/util/List;Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.sameServerWithTwoDifferentQueriesMergesQueries(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>mergeServerLists</name></method><methodDesc>(Ljava/util/List;Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.sameServerWithTwoDifferentQueriesMergesQueries(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>mergeServerLists</name></method><methodDesc>(Ljava/util/List;Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.sameServerWithTwoDifferentQueriesMergesQueries(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>mergeServerLists</name></method><methodDesc>(Ljava/util/List;Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.sameServerWithTwoDifferentQueriesMergesQueries(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>mergeServerLists</name></method><methodDesc>(Ljava/util/List;Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.sameServerWithTwoDifferentQueriesMergesQueries(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>mergeServerLists</name></method><methodDesc>(Ljava/util/List;Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.sameServerWithTwoDifferentQueriesMergesQueries(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>mergeServerLists</name></method><methodDesc>(Ljava/util/List;Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>mergeServerLists</name></method><methodDesc>(Ljava/util/List;Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.sameServerWithTwoDifferentQueriesMergesQueries(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>mergeServerLists</name></method><methodDesc>(Ljava/util/List;Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.sameServerWithTwoDifferentQueriesMergesQueries(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>mergeServerLists</name></method><methodDesc>(Ljava/util/List;Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.sameServerWithTwoDifferentQueriesMergesQueries(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>mergeServerLists</name></method><methodDesc>(Ljava/util/List;Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.sameServerWithTwoDifferentQueriesMergesQueries(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>mergeServerLists</name></method><methodDesc>(Ljava/util/List;Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.testMerge(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>mergeServerLists</name></method><methodDesc>(Ljava/util/List;Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.sameServerWithTwoDifferentQueriesMergesQueries(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>mergeServerLists</name></method><methodDesc>(Ljava/util/List;Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.sameServerWithTwoDifferentQueriesMergesQueries(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>mergeServerLists</name></method><methodDesc>(Ljava/util/List;Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.sameServerWithTwoDifferentQueriesMergesQueries(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>mergeServerLists</name></method><methodDesc>(Ljava/util/List;Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.sameServerWithTwoDifferentQueriesMergesQueries(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>mergeServerLists</name></method><methodDesc>(Ljava/util/List;Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>mergeServerLists</name></method><methodDesc>(Ljava/util/List;Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.sameServerWithTwoDifferentQueriesMergesQueries(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.sameServerWithTwoDifferentQueriesMergesQueries(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.testMerge(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.testMerge(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.testMerge(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.testMerge(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.testMerge(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.testMerge(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.testMerge(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.sameServerWithTwoDifferentQueriesMergesQueries(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.sameServerWithTwoDifferentQueriesMergesQueries(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server$Builder</name></clazz><method><name>addQueries</name></method><methodDesc>(Ljava/util/Set;)Lorg/jmxtrans/model/Server$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.sameServerWithTwoDifferentQueriesMergesQueries(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server$Builder</name></clazz><method><name>addQueries</name></method><methodDesc>(Ljava/util/Set;)Lorg/jmxtrans/model/Server$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.sameServerWithTwoDifferentQueriesMergesQueries(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server$Builder</name></clazz><method><name>addQuery</name></method><methodDesc>(Lorg/jmxtrans/model/Query;)Lorg/jmxtrans/model/Server$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.sameServerWithTwoDifferentQueriesMergesQueries(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server$Builder</name></clazz><method><name>addQuery</name></method><methodDesc>(Lorg/jmxtrans/model/Query;)Lorg/jmxtrans/model/Server$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.MergingTests.sameServerWithTwoDifferentQueriesMergesQueries(org.jmxtrans.model.MergingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/model/Server;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/model/Server;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server$Builder</name></clazz><method><name>setAlias</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/model/Server$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server$Builder</name></clazz><method><name>setCronExpression</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/model/Server$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server$Builder</name></clazz><method><name>setHost</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/model/Server$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server$Builder</name></clazz><method><name>setNumQueryThreads</name></method><methodDesc>(Ljava/lang/Integer;)Lorg/jmxtrans/model/Server$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server$Builder</name></clazz><method><name>setPassword</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/model/Server$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server$Builder</name></clazz><method><name>setPort</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/model/Server$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server$Builder</name></clazz><method><name>setUrl</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/model/Server$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testGetUrl(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server$Builder</name></clazz><method><name>setUsername</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/model/Server$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.ServerTests.testEquals(org.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/ClassAttributeNamingStrategy</name></clazz><method><name>formatName</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/ClassAttributeNamingStrategy</name></clazz><method><name>formatName</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/ClassAttributeNamingStrategy</name></clazz><method><name>formatName</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/ClassAttributeNamingStrategy</name></clazz><method><name>formatName</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/ClassAttributeNamingStrategy</name></clazz><method><name>formatName</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/ClassAttributeNamingStrategy</name></clazz><method><name>formatName</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/lang/String;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/ClassAttributeNamingStrategy</name></clazz><method><name>formatName</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/lang/String;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/ClassAttributeNamingStrategy</name></clazz><method><name>formatName</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/lang/String;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/ClassAttributeNamingStrategy</name></clazz><method><name>formatName</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/lang/String;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/ClassAttributeNamingStrategy</name></clazz><method><name>formatName</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/ClassAttributeNamingStrategy</name></clazz><method><name>formatName</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/ClassAttributeNamingStrategy</name></clazz><method><name>formatName</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/lang/String;</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>formatName</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>formatName</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/lang/String;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>formatName</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/lang/String;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>formatName</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>populateContext</name></method><methodDesc>(Lorg/apache/commons/jexl2/JexlContext;Lorg/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>populateContext</name></method><methodDesc>(Lorg/apache/commons/jexl2/JexlContext;Lorg/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>populateContext</name></method><methodDesc>(Lorg/apache/commons/jexl2/JexlContext;Lorg/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>populateContext</name></method><methodDesc>(Lorg/apache/commons/jexl2/JexlContext;Lorg/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>populateContext</name></method><methodDesc>(Lorg/apache/commons/jexl2/JexlContext;Lorg/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>populateContext</name></method><methodDesc>(Lorg/apache/commons/jexl2/JexlContext;Lorg/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>populateContext</name></method><methodDesc>(Lorg/apache/commons/jexl2/JexlContext;Lorg/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>populateContext</name></method><methodDesc>(Lorg/apache/commons/jexl2/JexlContext;Lorg/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>populateContext</name></method><methodDesc>(Lorg/apache/commons/jexl2/JexlContext;Lorg/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>populateContext</name></method><methodDesc>(Lorg/apache/commons/jexl2/JexlContext;Lorg/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>populateContext</name></method><methodDesc>(Lorg/apache/commons/jexl2/JexlContext;Lorg/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>populateContext</name></method><methodDesc>(Lorg/apache/commons/jexl2/JexlContext;Lorg/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>populateContext</name></method><methodDesc>(Lorg/apache/commons/jexl2/JexlContext;Lorg/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>populateContext</name></method><methodDesc>(Lorg/apache/commons/jexl2/JexlContext;Lorg/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>populateContext</name></method><methodDesc>(Lorg/apache/commons/jexl2/JexlContext;Lorg/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>populateContext</name></method><methodDesc>(Lorg/apache/commons/jexl2/JexlContext;Lorg/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addAlias</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addAlias</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addAlias</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addAlias</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addAlias</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addAlias</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addAlias</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addAlias</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addAlias</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addAlias</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addAlias</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addAlias</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addAlias</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addClassName</name></method><methodDesc>(Lorg/jmxtrans/model/Result;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addClassName</name></method><methodDesc>(Lorg/jmxtrans/model/Result;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addClassName</name></method><methodDesc>(Lorg/jmxtrans/model/Result;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addClassName</name></method><methodDesc>(Lorg/jmxtrans/model/Result;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addClassName</name></method><methodDesc>(Lorg/jmxtrans/model/Result;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addClassName</name></method><methodDesc>(Lorg/jmxtrans/model/Result;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addKeyString</name></method><methodDesc>(Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addKeyString</name></method><methodDesc>(Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addKeyString</name></method><methodDesc>(Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addRootPrefix</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addRootPrefix</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addRootPrefix</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addRootPrefix</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addRootPrefix</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addTypeName</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Lorg/jmxtrans/model/Result;Ljava/util/List;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addTypeName</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Lorg/jmxtrans/model/Result;Ljava/util/List;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addTypeName</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Lorg/jmxtrans/model/Result;Ljava/util/List;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addTypeName</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Lorg/jmxtrans/model/Result;Ljava/util/List;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addTypeName</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Lorg/jmxtrans/model/Result;Ljava/util/List;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addTypeName</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Lorg/jmxtrans/model/Result;Ljava/util/List;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addTypeName</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Lorg/jmxtrans/model/Result;Ljava/util/List;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addTypeName</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Lorg/jmxtrans/model/Result;Ljava/util/List;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addTypeName</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Lorg/jmxtrans/model/Result;Ljava/util/List;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addTypeName</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Lorg/jmxtrans/model/Result;Ljava/util/List;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addTypeName</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Lorg/jmxtrans/model/Result;Ljava/util/List;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addTypeName</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Lorg/jmxtrans/model/Result;Ljava/util/List;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>computeKey</name></method><methodDesc>(Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;)Ljava/lang/String;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>computeKey</name></method><methodDesc>(Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>computeKey</name></method><methodDesc>(Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>computeKey</name></method><methodDesc>(Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;)Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>computeKey</name></method><methodDesc>(Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;)Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>computeKey</name></method><methodDesc>(Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>computeKey</name></method><methodDesc>(Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;)Ljava/lang/String;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>computeKey</name></method><methodDesc>(Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;)Ljava/lang/String;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>computeKey</name></method><methodDesc>(Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>computeKey</name></method><methodDesc>(Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;)Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>computeKey</name></method><methodDesc>(Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;)Ljava/lang/String;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>computeKey</name></method><methodDesc>(Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>computeKey</name></method><methodDesc>(Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>computeKey</name></method><methodDesc>(Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;)Ljava/lang/String;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getKeyString</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getKeyString</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getKeyString</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getKeyString</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getKeyString</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getKeyString</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getKeyString</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getKeyString</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getKeyString</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getKeyString</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>splitTypeNameValue</name></method><methodDesc>(Ljava/lang/String;)[Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>splitTypeNameValue</name></method><methodDesc>(Ljava/lang/String;)[Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>splitTypeNameValue</name></method><methodDesc>(Ljava/lang/String;)[Ljava/lang/String;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>splitTypeNameValue</name></method><methodDesc>(Ljava/lang/String;)[Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>splitTypeNameValue</name></method><methodDesc>(Ljava/lang/String;)[Ljava/lang/String;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>splitTypeNameValue</name></method><methodDesc>(Ljava/lang/String;)[Ljava/lang/String;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>splitTypeNameValue</name></method><methodDesc>(Ljava/lang/String;)[Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>splitTypeNameValue</name></method><methodDesc>(Ljava/lang/String;)[Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>splitTypeNameValue</name></method><methodDesc>(Ljava/lang/String;)[Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>splitTypeNameValue</name></method><methodDesc>(Ljava/lang/String;)[Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>splitTypeNameValue</name></method><methodDesc>(Ljava/lang/String;)[Ljava/lang/String;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(org.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/StringUtils</name></clazz><method><name>cleanupStr</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.StringUtilsTest.testCleanupStr(org.jmxtrans.model.naming.StringUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/StringUtils</name></clazz><method><name>cleanupStr</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.StringUtilsTest.testCleanupStr(org.jmxtrans.model.naming.StringUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/StringUtils</name></clazz><method><name>cleanupStr</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.StringUtilsTest.testCleanupStr(org.jmxtrans.model.naming.StringUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/StringUtils</name></clazz><method><name>cleanupStr</name></method><methodDesc>(Ljava/lang/String;Z)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.StringUtilsTest.testCleanupStrDottedKeysKept(org.jmxtrans.model.naming.StringUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/StringUtils</name></clazz><method><name>cleanupStr</name></method><methodDesc>(Ljava/lang/String;Z)Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.StringUtilsTest.testCleanupStrDottedKeysKept(org.jmxtrans.model.naming.StringUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/StringUtils</name></clazz><method><name>cleanupStr</name></method><methodDesc>(Ljava/lang/String;Z)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.StringUtilsTest.testCleanupStrDottedKeysKept(org.jmxtrans.model.naming.StringUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/StringUtils</name></clazz><method><name>cleanupStr</name></method><methodDesc>(Ljava/lang/String;Z)Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.StringUtilsTest.testCleanupStrDottedKeysKept(org.jmxtrans.model.naming.StringUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/StringUtils</name></clazz><method><name>cleanupStr</name></method><methodDesc>(Ljava/lang/String;Z)Ljava/lang/String;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.StringUtilsTest.testCleanupStrDottedKeysKept(org.jmxtrans.model.naming.StringUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/StringUtils</name></clazz><method><name>cleanupStr</name></method><methodDesc>(Ljava/lang/String;Z)Ljava/lang/String;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.StringUtilsTest.testCleanupStrDottedKeysKept(org.jmxtrans.model.naming.StringUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/StringUtils</name></clazz><method><name>cleanupStr</name></method><methodDesc>(Ljava/lang/String;Z)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.StringUtilsTest.testCleanupStr(org.jmxtrans.model.naming.StringUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/StringUtils</name></clazz><method><name>cleanupStr</name></method><methodDesc>(Ljava/lang/String;Z)Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.StringUtilsTest.testCleanupStr(org.jmxtrans.model.naming.StringUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/StringUtils</name></clazz><method><name>cleanupStr</name></method><methodDesc>(Ljava/lang/String;Z)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.StringUtilsTest.testCleanupStrDottedKeysKept(org.jmxtrans.model.naming.StringUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/StringUtils</name></clazz><method><name>cleanupStr</name></method><methodDesc>(Ljava/lang/String;Z)Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.StringUtilsTest.testCleanupStrDottedKeysKept(org.jmxtrans.model.naming.StringUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/StringUtils</name></clazz><method><name>cleanupStr</name></method><methodDesc>(Ljava/lang/String;Z)Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.StringUtilsTest.testCleanupStr(org.jmxtrans.model.naming.StringUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/StringUtils</name></clazz><method><name>cleanupStr</name></method><methodDesc>(Ljava/lang/String;Z)Ljava/lang/String;</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.naming.StringUtilsTest.testCleanupStrDottedKeysKept(org.jmxtrans.model.naming.StringUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.BaseOutputWriterTests.booleanValuesAreTransformedToNumber(org.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.BaseOutputWriterTests.booleanValuesAreNotTransformedToNumber(org.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.BaseOutputWriterTests.booleanValuesAreTransformedToNumber(org.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.BaseOutputWriterTests.booleanValuesAreTransformedToNumber(org.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.BaseOutputWriterTests.booleanValuesAreTransformedToNumber(org.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.BaseOutputWriterTests.propertyResolvedIntSettings(org.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.BaseOutputWriterTests.propertyResolvedIntSettings(org.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.util.JsonUtilsTest.loadingFromFile(org.jmxtrans.util.JsonUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.BaseOutputWriterTests.propertyResolvedIntSettings(org.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.BaseOutputWriterTests.propertyResolvedIntSettings(org.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.BaseOutputWriterTests.booleanValuesAreTransformedToNumber(org.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.BaseOutputWriterTests.booleanValuesAreTransformedToNumber(org.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.BaseOutputWriterTests.booleanValuesAreTransformedToNumber(org.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.BaseOutputWriterTests.booleanValuesAreNotTransformedToNumber(org.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>doWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.BaseOutputWriterTests.booleanValuesAreTransformedToNumber(org.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>doWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.BaseOutputWriterTests.booleanValuesAreTransformedToNumber(org.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>doWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.BaseOutputWriterTests.booleanValuesAreTransformedToNumber(org.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>doWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.BaseOutputWriterTests.booleanValuesAreTransformedToNumber(org.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>doWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.BaseOutputWriterTests.booleanValuesAreTransformedToNumber(org.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>firstNonNull</name></method><methodDesc>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>firstNonNull</name></method><methodDesc>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>firstNonNull</name></method><methodDesc>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>firstNonNull</name></method><methodDesc>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>firstNonNull</name></method><methodDesc>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>firstNonNull</name></method><methodDesc>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>firstNonNull</name></method><methodDesc>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>firstNonNull</name></method><methodDesc>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>getSettings</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.BaseOutputWriterTests.propertyResolvedIntSettings(org.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>getTypeNames</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>isDebugEnabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>setSettings</name></method><methodDesc>(Ljava/util/Map;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>setSettings</name></method><methodDesc>(Ljava/util/Map;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.BaseOutputWriterTests.propertyResolvedIntSettings(org.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>setSettings</name></method><methodDesc>(Ljava/util/Map;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.BaseOutputWriterTests.cannotHaveNullValueInSettings(org.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>setSettings</name></method><methodDesc>(Ljava/util/Map;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>setSettings</name></method><methodDesc>(Ljava/util/Map;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>setSettings</name></method><methodDesc>(Ljava/util/Map;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>setSettings</name></method><methodDesc>(Ljava/util/Map;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>setSettings</name></method><methodDesc>(Ljava/util/Map;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>setSettings</name></method><methodDesc>(Ljava/util/Map;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.BaseOutputWriterTests.propertyResolvedIntSettings(org.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter$ResultValuesTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Lorg/jmxtrans/model/Result;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.BaseOutputWriterTests.booleanValuesAreTransformedToNumber(org.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter$ResultValuesTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Lorg/jmxtrans/model/Result;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.BaseOutputWriterTests.booleanValuesAreTransformedToNumber(org.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter$ResultValuesTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Lorg/jmxtrans/model/Result;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter$ResultValuesTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Lorg/jmxtrans/model/Result;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter$ResultValuesTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Lorg/jmxtrans/model/Result;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter$ResultValuesTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Lorg/jmxtrans/model/Result;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter$ResultValuesTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Lorg/jmxtrans/model/Result;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter$ResultValuesTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Lorg/jmxtrans/model/Result;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.BaseOutputWriterTests.booleanValuesAreTransformedToNumber(org.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter$ResultValuesTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Lorg/jmxtrans/model/Result;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.BaseOutputWriterTests.booleanValuesAreTransformedToNumber(org.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter$ResultValuesTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Lorg/jmxtrans/model/Result;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter$ResultValuesTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Lorg/jmxtrans/model/Result;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.BaseOutputWriterTests.booleanValuesAreTransformedToNumber(org.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter$ResultValuesTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Lorg/jmxtrans/model/Result;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter$ResultValuesTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Lorg/jmxtrans/model/Result;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.BaseOutputWriterTests.booleanValuesAreTransformedToNumber(org.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>123</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>137</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationWithoutSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>112</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>114</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>124</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>135</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>138</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>139</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>142</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationAllSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>150</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>152</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>155</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>builder</name></method><methodDesc>()Lorg/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>builder</name></method><methodDesc>()Lorg/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>computeAddressingMode</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Linfo/ganglia/gmetric4j/gmetric/GMetric$UDPAddressingMode;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>computeAddressingMode</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Linfo/ganglia/gmetric4j/gmetric/GMetric$UDPAddressingMode;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>computeAddressingMode</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Linfo/ganglia/gmetric4j/gmetric/GMetric$UDPAddressingMode;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationAllSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>computeAddressingMode</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Linfo/ganglia/gmetric4j/gmetric/GMetric$UDPAddressingMode;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getAddressingMode</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getAddressingMode</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getDmax</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getGroupName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getPort</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSlope</name></method><methodDesc>()Linfo/ganglia/gmetric4j/gmetric/GMetricSlope;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getTmax</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getTtl</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getUnits</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>isV31</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/model/output/GangliaWriter;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationWithoutSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/model/output/GangliaWriter;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/model/output/GangliaWriter;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>setAddressingMode</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationAllSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>setDmax</name></method><methodDesc>(Ljava/lang/Integer;)Lorg/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationAllSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>setGroupName</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationAllSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>setHost</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>setPort</name></method><methodDesc>(I)Lorg/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationAllSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>setPort</name></method><methodDesc>(I)Lorg/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationAllSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>setSlope</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationAllSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>setTmax</name></method><methodDesc>(Ljava/lang/Integer;)Lorg/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationAllSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>setTtl</name></method><methodDesc>(Ljava/lang/Integer;)Lorg/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationAllSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>setUnits</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationAllSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>setV31</name></method><methodDesc>(Ljava/lang/Boolean;)Lorg/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GangliaWriterTests.testValidationAllSettings(org.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.hostIsRequired(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.hostIsRequired(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.hostIsRequired(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>builder</name></method><methodDesc>()Lorg/jmxtrans/model/output/GraphiteWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>builder</name></method><methodDesc>()Lorg/jmxtrans/model/output/GraphiteWriter$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>90</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>112</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>113</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>101</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>102</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>104</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>109</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>114</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>116</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>117</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>133</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>175</int><int>161</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/model/output/GraphiteWriter;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/model/output/GraphiteWriter;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/model/output/GraphiteWriter;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>setHost</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/model/output/GraphiteWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>setPort</name></method><methodDesc>(I)Lorg/jmxtrans/model/output/GraphiteWriter$Builder;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>setPort</name></method><methodDesc>(I)Lorg/jmxtrans/model/output/GraphiteWriter$Builder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.GraphiteWriterTests.hostIsRequired(org.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(org.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(org.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(org.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(org.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(org.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(org.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(org.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(org.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(org.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(org.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(org.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(org.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(org.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(org.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(org.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(org.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(org.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(org.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(org.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(org.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(org.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(org.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(org.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(org.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(org.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(org.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(org.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(org.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(org.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>136</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>139</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>143</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>145</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>147</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>157</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>158</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTag</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTag</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTag</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTag</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTag</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTag</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lorg/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lorg/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lorg/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lorg/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lorg/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lorg/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lorg/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lorg/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lorg/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lorg/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lorg/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lorg/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lorg/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lorg/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>formatResultString</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;JLjava/lang/Object;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>formatResultString</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;JLjava/lang/Object;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>formatResultString</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;JLjava/lang/Object;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>formatResultString</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;JLjava/lang/Object;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>formatResultString</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;JLjava/lang/Object;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>formatResultString</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;JLjava/lang/Object;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>formatResultString</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;JLjava/lang/Object;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>formatResultString</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;JLjava/lang/Object;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>formatResultString</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;JLjava/lang/Object;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(org.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lorg/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(org.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lorg/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lorg/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lorg/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lorg/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lorg/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lorg/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lorg/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lorg/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lorg/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lorg/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lorg/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lorg/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lorg/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lorg/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lorg/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lorg/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lorg/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lorg/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(org.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lorg/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lorg/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(org.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(org.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(org.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(org.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(org.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(org.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(org.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(org.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>sanitizeString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>sanitizeString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>sanitizeString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(org.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(org.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>builder</name></method><methodDesc>()Lorg/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(org.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>builder</name></method><methodDesc>()Lorg/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(org.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>finishOutput</name></method><methodDesc>()V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(org.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>finishOutput</name></method><methodDesc>()V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(org.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>finishOutput</name></method><methodDesc>()V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(org.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>finishOutput</name></method><methodDesc>()V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(org.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>finishOutput</name></method><methodDesc>()V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(org.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>finishOutput</name></method><methodDesc>()V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(org.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>finishOutput</name></method><methodDesc>()V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>finishOutput</name></method><methodDesc>()V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>finishOutput</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(org.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>getAddHostnameTagDefault</name></method><methodDesc>()Z</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(org.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>getAddHostnameTagDefault</name></method><methodDesc>()Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(org.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(org.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(org.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(org.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(org.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(org.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(org.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(org.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>sendOutput</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(org.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>sendOutput</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(org.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>sendOutput</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(org.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>sendOutput</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(org.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>sendOutput</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(org.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>sendOutput</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(org.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>shutdownSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(org.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>shutdownSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(org.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>startOutput</name></method><methodDesc>()V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(org.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>startOutput</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(org.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(org.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(org.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/model/output/OpenTSDBWriter;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(org.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/model/output/OpenTSDBWriter;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/model/output/OpenTSDBWriter;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/model/output/OpenTSDBWriter;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(org.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>setDebugEnabled</name></method><methodDesc>(Z)Lorg/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>setDebugEnabled</name></method><methodDesc>(Z)Lorg/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(org.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>setHost</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(org.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>setPort</name></method><methodDesc>(I)Lorg/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(org.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>setPort</name></method><methodDesc>(I)Lorg/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(org.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getBooleanSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Boolean;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.unsetBooleanSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getBooleanSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Boolean;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.unsetBooleanSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getBooleanSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Boolean;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.correctBooleanSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getBooleanSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Boolean;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.correctBooleanSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getBooleanSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.correctBooleanSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getBooleanSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.correctBooleanSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getBooleanSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.wrongTypeBooleanSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getBooleanSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.correctBooleanSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getBooleanSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.incorrectBooleanSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getBooleanSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getBooleanSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.correctBooleanSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getBooleanSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getBooleanSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.correctBooleanSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getBooleanSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.incorrectBooleanSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getBooleanSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.wrongTypeBooleanSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getBooleanSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.unsetBooleanSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getBooleanSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.correctBooleanSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getBooleanSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.incorrectBooleanSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getBooleanSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.wrongTypeBooleanSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.parsedFromInvalidStringIntSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.parsedFromInvalidStringIntSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.parsedFromInvalidStringIntSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.parsedFromStringIntSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.parsedFromInvalidStringIntSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.parsedFromStringIntSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.parsedFromStringIntSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.parsedFromInvalidStringIntSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.parsedFromInvalidStringIntSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.parsedFromInvalidStringIntSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.parsedFromInvalidStringIntSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.parsedFromInvalidStringIntSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.parsedFromInvalidStringIntSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.parsedFromInvalidStringIntSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.unsetIntSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.parsedFromStringIntSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.parsedFromStringIntSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.unsetIntSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntegerSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.correctIntegerSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntegerSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.correctIntegerSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntegerSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.parsedFromStringIntegerSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntegerSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.correctIntegerSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntegerSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.correctIntegerSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntegerSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.correctIntegerSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntegerSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.parsedFromStringIntegerSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntegerSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.parsedFromStringIntegerSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntegerSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntegerSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.correctIntegerSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntegerSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.parsedFromStringIntegerSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntegerSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.correctIntegerSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntegerSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.parsedFromStringIntegerSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntegerSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntegerSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.unsetIntegerSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntegerSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.correctIntegerSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntegerSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.parsedFromStringIntegerSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntegerSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.parsedFromInvalidStringIntegerSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getStringSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.unsetStringSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getStringSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.numberParsedAsStringSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getStringSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getStringSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.unsetStringSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getStringSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.SettingsTests.unsetStringSettings(org.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>builder</name></method><methodDesc>()Lorg/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(org.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>builder</name></method><methodDesc>()Lorg/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(org.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>getAddHostnameTagDefault</name></method><methodDesc>()Z</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(org.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>getAddHostnameTagDefault</name></method><methodDesc>()Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(org.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(org.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(org.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(org.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(org.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(org.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(org.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>sendOutput</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(org.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>sendOutput</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(org.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>sendOutput</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(org.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>sendOutput</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(org.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(org.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(org.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/model/output/TCollectorUDPWriter;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(org.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/model/output/TCollectorUDPWriter;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/model/output/TCollectorUDPWriter;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/model/output/TCollectorUDPWriter;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(org.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>setDebugEnabled</name></method><methodDesc>(Z)Lorg/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>setDebugEnabled</name></method><methodDesc>(Z)Lorg/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(org.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>setHost</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(org.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>setPort</name></method><methodDesc>(I)Lorg/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(org.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>setPort</name></method><methodDesc>(I)Lorg/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(org.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/results/BooleanAsNumberValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.results.BooleanAsNumberValueTransformerTests.falseIsConvertedToNumber(org.jmxtrans.model.results.BooleanAsNumberValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/results/BooleanAsNumberValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.results.BooleanAsNumberValueTransformerTests.falseIsConvertedToNumber(org.jmxtrans.model.results.BooleanAsNumberValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/results/BooleanAsNumberValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.results.BooleanAsNumberValueTransformerTests.falseIsConvertedToNumber(org.jmxtrans.model.results.BooleanAsNumberValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/results/BooleanAsNumberValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.results.BooleanAsNumberValueTransformerTests.trueIsConvertedToNumber(org.jmxtrans.model.results.BooleanAsNumberValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/results/BooleanAsNumberValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/results/BooleanAsNumberValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.results.BooleanAsNumberValueTransformerTests.falseIsConvertedToNumber(org.jmxtrans.model.results.BooleanAsNumberValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/results/BooleanAsNumberValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.results.BooleanAsNumberValueTransformerTests.trueIsConvertedToNumber(org.jmxtrans.model.results.BooleanAsNumberValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/results/BooleanAsNumberValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.results.BooleanAsNumberValueTransformerTests.falseIsConvertedToNumber(org.jmxtrans.model.results.BooleanAsNumberValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/results/BooleanAsNumberValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.results.BooleanAsNumberValueTransformerTests.integerIsNotModified(org.jmxtrans.model.results.BooleanAsNumberValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/results/BooleanAsNumberValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.results.BooleanAsNumberValueTransformerTests.falseIsConvertedToNumber(org.jmxtrans.model.results.BooleanAsNumberValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/results/BooleanAsNumberValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.results.BooleanAsNumberValueTransformerTests.trueIsConvertedToNumber(org.jmxtrans.model.results.BooleanAsNumberValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/results/BooleanAsNumberValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.results.BooleanAsNumberValueTransformerTests.falseIsConvertedToNumber(org.jmxtrans.model.results.BooleanAsNumberValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/results/BooleanAsNumberValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.results.BooleanAsNumberValueTransformerTests.integerIsNotModified(org.jmxtrans.model.results.BooleanAsNumberValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/results/IdentityValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.results.IdentityValueTransformerTests.identityTransformerDoesNothing(org.jmxtrans.model.results.IdentityValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/JsonPrinter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/PrintStream;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.util.JsonPrinterTest.standardJsonPrinting(org.jmxtrans.util.JsonPrinterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/JsonPrinter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/PrintStream;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.util.JsonPrinterTest.standardJsonPrinting(org.jmxtrans.util.JsonPrinterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/JsonPrinter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/PrintStream;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/JsonPrinter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/PrintStream;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.util.JsonPrinterTest.prettyJsonPrinting(org.jmxtrans.util.JsonPrinterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/JsonPrinter</name></clazz><method><name>prettyPrint</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.util.JsonPrinterTest.prettyJsonPrinting(org.jmxtrans.util.JsonPrinterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/JsonPrinter</name></clazz><method><name>print</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.util.JsonPrinterTest.standardJsonPrinting(org.jmxtrans.util.JsonPrinterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/JsonUtils</name></clazz><method><name>getJmxProcess</name></method><methodDesc>(Ljava/io/File;)Lorg/jmxtrans/model/JmxProcess;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.util.JsonUtilsTest.loadingFromFile(org.jmxtrans.util.JsonUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/JsonUtils</name></clazz><method><name>getJmxProcess</name></method><methodDesc>(Ljava/io/File;)Lorg/jmxtrans/model/JmxProcess;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.util.JsonUtilsTest.loadingFromFile(org.jmxtrans.util.JsonUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/JsonUtils</name></clazz><method><name>getJmxProcess</name></method><methodDesc>(Ljava/io/File;)Lorg/jmxtrans/model/JmxProcess;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.util.JsonUtilsTest.loadingFromFile(org.jmxtrans.util.JsonUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/JsonUtils</name></clazz><method><name>getJmxProcess</name></method><methodDesc>(Ljava/io/File;)Lorg/jmxtrans/model/JmxProcess;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.util.JsonUtilsTest.loadingFromFile(org.jmxtrans.util.JsonUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/JsonUtils</name></clazz><method><name>getJmxProcess</name></method><methodDesc>(Ljava/io/File;)Lorg/jmxtrans/model/JmxProcess;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.util.JsonUtilsTest.loadingFromFile(org.jmxtrans.util.JsonUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/JsonUtils</name></clazz><method><name>getJmxProcess</name></method><methodDesc>(Ljava/io/File;)Lorg/jmxtrans/model/JmxProcess;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.util.JsonUtilsTest.loadingFromFile(org.jmxtrans.util.JsonUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/JsonUtils</name></clazz><method><name>getJmxProcess</name></method><methodDesc>(Ljava/io/File;)Lorg/jmxtrans/model/JmxProcess;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.util.JsonUtilsTest.loadingFromFile(org.jmxtrans.util.JsonUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;Lorg/jmxtrans/util/WatchedCallback;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.util.WatchDirTest.watchingFileIsNotPossible(org.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;Lorg/jmxtrans/util/WatchedCallback;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.util.WatchDirTest.watchingFileIsNotPossible(org.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;Lorg/jmxtrans/util/WatchedCallback;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.util.WatchDirTest.watchingFileIsNotPossible(org.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;Lorg/jmxtrans/util/WatchedCallback;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.util.WatchDirTest.watchingFileIsNotPossible(org.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;Lorg/jmxtrans/util/WatchedCallback;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.util.WatchDirTest.watchingFileIsNotPossible(org.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;Lorg/jmxtrans/util/WatchedCallback;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.util.WatchDirTest.watchingFileIsNotPossible(org.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;Lorg/jmxtrans/util/WatchedCallback;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.util.WatchDirTest.watchingFileIsNotPossible(org.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;Lorg/jmxtrans/util/WatchedCallback;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.util.WatchDirTest.watchingFileIsNotPossible(org.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;Lorg/jmxtrans/util/WatchedCallback;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.util.WatchDirTest.watchingFileIsNotPossible(org.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;Lorg/jmxtrans/util/WatchedCallback;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.util.WatchDirTest.watchingFileIsNotPossible(org.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;Lorg/jmxtrans/util/WatchedCallback;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.util.WatchDirTest.deletedFileIsDetected(org.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.util.WatchDirTest.deletedFileIsDetected(org.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>151</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.util.WatchDirTest.modifiedFileIsDetected(org.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>130</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.util.WatchDirTest.deletedFileIsDetected(org.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.util.WatchDirTest.deletedFileIsDetected(org.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>134</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.util.WatchDirTest.modifiedFileIsDetected(org.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>141</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>150</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>130</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.util.WatchDirTest.deletedFileIsDetected(org.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>130</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>90</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>152</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>stopService</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/quartz/Scheduler;Lorg/jmxtrans/cli/JmxTransConfiguration;Lcom/google/inject/Injector;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/quartz/Scheduler;Lorg/jmxtrans/cli/JmxTransConfiguration;Lcom/google/inject/Injector;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/quartz/Scheduler;Lorg/jmxtrans/cli/JmxTransConfiguration;Lcom/google/inject/Injector;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>101</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>102</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>doMain</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>doMain</name></method><methodDesc>()V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>doMain</name></method><methodDesc>()V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>doMain</name></method><methodDesc>()V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>doMain</name></method><methodDesc>()V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>doMain</name></method><methodDesc>()V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>doMain</name></method><methodDesc>()V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>doMain</name></method><methodDesc>()V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>doMain</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>doMain</name></method><methodDesc>()V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>executeStandalone</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>executeStandalone</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>executeStandalone</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>executeStandalone</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>executeStandalone</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>fileAdded</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>fileAdded</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>fileAdded</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>fileAdded</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>fileAdded</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>fileAdded</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>fileAdded</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>fileAdded</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>fileDeleted</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>fileDeleted</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>fileDeleted</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>fileDeleted</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>fileModified</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>fileModified</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>fileModified</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>fileModified</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>fileModified</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>fileModified</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>fileModified</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>fileModified</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>isJsonFile</name></method><methodDesc>(Ljava/io/File;)Z</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>isJsonFile</name></method><methodDesc>(Ljava/io/File;)Z</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>isJsonFile</name></method><methodDesc>(Ljava/io/File;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>isJsonFile</name></method><methodDesc>(Ljava/io/File;)Z</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>isJsonFile</name></method><methodDesc>(Ljava/io/File;)Z</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>isJsonFile</name></method><methodDesc>(Ljava/io/File;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>isJsonFile</name></method><methodDesc>(Ljava/io/File;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>isJsonFile</name></method><methodDesc>(Ljava/io/File;)Z</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>isJsonFile</name></method><methodDesc>(Ljava/io/File;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>isJsonFile</name></method><methodDesc>(Ljava/io/File;)Z</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>isJsonFile</name></method><methodDesc>(Ljava/io/File;)Z</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>isJsonFile</name></method><methodDesc>(Ljava/io/File;)Z</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>isJsonFile</name></method><methodDesc>(Ljava/io/File;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>isJsonFile</name></method><methodDesc>(Ljava/io/File;)Z</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>isJsonFile</name></method><methodDesc>(Ljava/io/File;)Z</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>isJsonFile</name></method><methodDesc>(Ljava/io/File;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>isJsonFile</name></method><methodDesc>(Ljava/io/File;)Z</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>isJsonFile</name></method><methodDesc>(Ljava/io/File;)Z</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>isJsonFile</name></method><methodDesc>(Ljava/io/File;)Z</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>isJsonFile</name></method><methodDesc>(Ljava/io/File;)Z</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processFilesIntoServers</name></method><methodDesc>()V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processFilesIntoServers</name></method><methodDesc>()V</methodDesc></location><indexes><int>101</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processFilesIntoServers</name></method><methodDesc>()V</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processFilesIntoServers</name></method><methodDesc>()V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processFilesIntoServers</name></method><methodDesc>()V</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processFilesIntoServers</name></method><methodDesc>()V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processFilesIntoServers</name></method><methodDesc>()V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processFilesIntoServers</name></method><methodDesc>()V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processFilesIntoServers</name></method><methodDesc>()V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processFilesIntoServers</name></method><methodDesc>()V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processFilesIntoServers</name></method><methodDesc>()V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processFilesIntoServers</name></method><methodDesc>()V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processFilesIntoServers</name></method><methodDesc>()V</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processFilesIntoServers</name></method><methodDesc>()V</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processFilesIntoServers</name></method><methodDesc>()V</methodDesc></location><indexes><int>105</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processFilesIntoServers</name></method><methodDesc>()V</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processFilesIntoServers</name></method><methodDesc>()V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processFilesIntoServers</name></method><methodDesc>()V</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processFilesIntoServers</name></method><methodDesc>()V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processFilesIntoServers</name></method><methodDesc>()V</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processFilesIntoServers</name></method><methodDesc>()V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>105</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>102</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>118</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>90</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>123</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>130</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>131</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>133</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>96</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>134</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>141</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>startupSystem</name></method><methodDesc>()V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>startupSystem</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>startupWatchdir</name></method><methodDesc>()V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>startupWatchdir</name></method><methodDesc>()V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>startupWatchdir</name></method><methodDesc>()V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>startupWatchdir</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>startupWatchdir</name></method><methodDesc>()V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>startupWatchdir</name></method><methodDesc>()V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>startupWatchdir</name></method><methodDesc>()V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>startupWatchdir</name></method><methodDesc>()V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>startupWatchdir</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>startupWatchdir</name></method><methodDesc>()V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>startupWatchdir</name></method><methodDesc>()V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>startupWatchdir</name></method><methodDesc>()V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stopServices</name></method><methodDesc>()V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stopServices</name></method><methodDesc>()V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stopServices</name></method><methodDesc>()V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stopServices</name></method><methodDesc>()V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stopServices</name></method><methodDesc>()V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stopServices</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stopServices</name></method><methodDesc>()V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stopServices</name></method><methodDesc>()V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stopServices</name></method><methodDesc>()V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stopServices</name></method><methodDesc>()V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stopServices</name></method><methodDesc>()V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stopServices</name></method><methodDesc>()V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stopServices</name></method><methodDesc>()V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stopServices</name></method><methodDesc>()V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>109</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lcom/google/common/collect/ImmutableSet;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lcom/google/common/collect/ImmutableSet;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lcom/google/common/collect/ImmutableSet;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lcom/google/common/collect/ImmutableSet;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lcom/google/common/collect/ImmutableSet;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lcom/google/common/collect/ImmutableSet;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lcom/google/common/collect/ImmutableSet;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>builder</name></method><methodDesc>()Lorg/jmxtrans/model/output/RRDToolWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>builder</name></method><methodDesc>()Lorg/jmxtrans/model/output/RRDToolWriter$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>94</int><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>96</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>102</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>104</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>105</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>114</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>123</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>127</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>130</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>134</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>136</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>138</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>formatDouble</name></method><methodDesc>(D)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>formatDouble</name></method><methodDesc>(D)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>formatDouble</name></method><methodDesc>(D)Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>formatDouble</name></method><methodDesc>(D)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>formatDouble</name></method><methodDesc>(D)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>formatDouble</name></method><methodDesc>(D)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>formatDouble</name></method><methodDesc>(D)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getBinaryPath</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getBinaryPath</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDatabaseTemplateSpec</name></method><methodDesc>()Lorg/jrobin/core/RrdDef;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDatabaseTemplateSpec</name></method><methodDesc>()Lorg/jrobin/core/RrdDef;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDatabaseTemplateSpec</name></method><methodDesc>()Lorg/jrobin/core/RrdDef;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDatabaseTemplateSpec</name></method><methodDesc>()Lorg/jrobin/core/RrdDef;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDatabaseTemplateSpec</name></method><methodDesc>()Lorg/jrobin/core/RrdDef;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDatabaseTemplateSpec</name></method><methodDesc>()Lorg/jrobin/core/RrdDef;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDatabaseTemplateSpec</name></method><methodDesc>()Lorg/jrobin/core/RrdDef;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDatabaseTemplateSpec</name></method><methodDesc>()Lorg/jrobin/core/RrdDef;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDatabaseTemplateSpec</name></method><methodDesc>()Lorg/jrobin/core/RrdDef;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDatabaseTemplateSpec</name></method><methodDesc>()Lorg/jrobin/core/RrdDef;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDatabaseTemplateSpec</name></method><methodDesc>()Lorg/jrobin/core/RrdDef;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDatabaseTemplateSpec</name></method><methodDesc>()Lorg/jrobin/core/RrdDef;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsDefStr</name></method><methodDesc>(Lorg/jrobin/core/DsDef;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsDefStr</name></method><methodDesc>(Lorg/jrobin/core/DsDef;)Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsDefStr</name></method><methodDesc>(Lorg/jrobin/core/DsDef;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsDefStr</name></method><methodDesc>(Lorg/jrobin/core/DsDef;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsDefStr</name></method><methodDesc>(Lorg/jrobin/core/DsDef;)Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsDefStr</name></method><methodDesc>(Lorg/jrobin/core/DsDef;)Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsDefStr</name></method><methodDesc>(Lorg/jrobin/core/DsDef;)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsDefStr</name></method><methodDesc>(Lorg/jrobin/core/DsDef;)Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsDefStr</name></method><methodDesc>(Lorg/jrobin/core/DsDef;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsDefStr</name></method><methodDesc>(Lorg/jrobin/core/DsDef;)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsDefStr</name></method><methodDesc>(Lorg/jrobin/core/DsDef;)Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsDefStr</name></method><methodDesc>(Lorg/jrobin/core/DsDef;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsDefStr</name></method><methodDesc>(Lorg/jrobin/core/DsDef;)Ljava/lang/String;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsDefStr</name></method><methodDesc>(Lorg/jrobin/core/DsDef;)Ljava/lang/String;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsDefStr</name></method><methodDesc>(Lorg/jrobin/core/DsDef;)Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsDefStr</name></method><methodDesc>(Lorg/jrobin/core/DsDef;)Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsDefStr</name></method><methodDesc>(Lorg/jrobin/core/DsDef;)Ljava/lang/String;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsDefStr</name></method><methodDesc>(Lorg/jrobin/core/DsDef;)Ljava/lang/String;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsDefStr</name></method><methodDesc>(Lorg/jrobin/core/DsDef;)Ljava/lang/String;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsDefStr</name></method><methodDesc>(Lorg/jrobin/core/DsDef;)Ljava/lang/String;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsNames</name></method><methodDesc>([Lorg/jrobin/core/DsDef;)Ljava/util/List;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsNames</name></method><methodDesc>([Lorg/jrobin/core/DsDef;)Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsNames</name></method><methodDesc>([Lorg/jrobin/core/DsDef;)Ljava/util/List;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsNames</name></method><methodDesc>([Lorg/jrobin/core/DsDef;)Ljava/util/List;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsNames</name></method><methodDesc>([Lorg/jrobin/core/DsDef;)Ljava/util/List;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsNames</name></method><methodDesc>([Lorg/jrobin/core/DsDef;)Ljava/util/List;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsNames</name></method><methodDesc>([Lorg/jrobin/core/DsDef;)Ljava/util/List;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsNames</name></method><methodDesc>([Lorg/jrobin/core/DsDef;)Ljava/util/List;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsNames</name></method><methodDesc>([Lorg/jrobin/core/DsDef;)Ljava/util/List;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsNames</name></method><methodDesc>([Lorg/jrobin/core/DsDef;)Ljava/util/List;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getOutputFile</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getOutputFile</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getRraStr</name></method><methodDesc>(Lorg/jrobin/core/ArcDef;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getRraStr</name></method><methodDesc>(Lorg/jrobin/core/ArcDef;)Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getRraStr</name></method><methodDesc>(Lorg/jrobin/core/ArcDef;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getRraStr</name></method><methodDesc>(Lorg/jrobin/core/ArcDef;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getRraStr</name></method><methodDesc>(Lorg/jrobin/core/ArcDef;)Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getRraStr</name></method><methodDesc>(Lorg/jrobin/core/ArcDef;)Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getRraStr</name></method><methodDesc>(Lorg/jrobin/core/ArcDef;)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getRraStr</name></method><methodDesc>(Lorg/jrobin/core/ArcDef;)Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getRraStr</name></method><methodDesc>(Lorg/jrobin/core/ArcDef;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getRraStr</name></method><methodDesc>(Lorg/jrobin/core/ArcDef;)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getRraStr</name></method><methodDesc>(Lorg/jrobin/core/ArcDef;)Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getRraStr</name></method><methodDesc>(Lorg/jrobin/core/ArcDef;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getRraStr</name></method><methodDesc>(Lorg/jrobin/core/ArcDef;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getRraStr</name></method><methodDesc>(Lorg/jrobin/core/ArcDef;)Ljava/lang/String;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getRraStr</name></method><methodDesc>(Lorg/jrobin/core/ArcDef;)Ljava/lang/String;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getTemplateFile</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getTemplateFile</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>148</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>154</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>158</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>113</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>115</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>148</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>112</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>123</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>142</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>143</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>146</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>147</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>155</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>157</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>159</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>113</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>115</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>113</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>115</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>148</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>148</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>138</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>160</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>114</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>109</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>127</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>137</int><int>158</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>142</int><int>163</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>168</int><int>147</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>133</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>138</int><int>159</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>143</int><int>164</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>169</int><int>148</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolUpdate</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolUpdate</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolUpdate</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolUpdate</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolUpdate</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolUpdate</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolUpdate</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolUpdate</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolUpdate</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolUpdate</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolUpdate</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolUpdate</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolUpdate</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolUpdate</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolUpdate</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolUpdate</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolUpdate</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolUpdate</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolUpdate</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>112</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>113</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>154</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>181</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>142</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>148</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>190</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>208</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>131</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>134</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>141</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>147</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>177</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>180</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>182</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>183</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>185</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>194</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>196</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>212</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>214</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>231</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>142</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>148</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>190</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>208</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>142</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>148</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>190</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>208</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>109</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>171</int><int>228</int><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>189</int><int>246</int><int>124</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>119</int><int>184</int><int>241</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>175</int><int>232</int><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>171</int><int>228</int><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>189</int><int>246</int><int>124</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>171</int><int>228</int><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>189</int><int>246</int><int>124</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>237</int><int>115</int><int>180</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>250</int><int>128</int><int>193</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>255</int><int>198</int><int>133</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getApiKey</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getDetectInstance</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>152</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>347</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>267</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>312</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>313</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>149</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>152</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>187</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>208</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>213</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>239</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>244</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>293</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>297</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>347</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>112</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>118</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>134</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>135</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>142</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>143</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>151</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>157</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>163</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>170</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>176</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>177</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>182</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>185</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>186</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>192</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>198</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>200</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>206</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>210</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>212</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>237</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>241</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>243</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>277</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>284</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>285</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>286</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>287</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>296</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>311</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>351</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>149</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>187</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>208</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>213</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>239</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>244</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>293</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>297</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>149</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>187</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>208</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>213</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>239</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>244</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>293</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>297</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>152</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>347</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>152</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>347</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>352</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>357</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>271</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>278</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>288</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>304</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>314</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>318</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>331</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>335</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>339</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>343</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getPrefix</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getProxyHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getProxyPort</name></method><methodDesc>()Ljava/lang/Integer;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getSource</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getTimeoutInMillis</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>113</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>104</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>137</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>96</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>getFilters</name></method><methodDesc>()Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>getNagiosHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>getOutputFile</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>getOutputFile</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>getPrefix</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>getSuffix</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>getThresholds</name></method><methodDesc>()Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>initLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/apache/log4j/Logger;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>138</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>146</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>113</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>131</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>152</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>159</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>166</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>167</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>171</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>173</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>174</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>180</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>146</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>146</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>96</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>149</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>154</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>96</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>117</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>124</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>131</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>135</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>146</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>157</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>161</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>145</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>149</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>154</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>105</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>152</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>145</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>145</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>149</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>154</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>149</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>154</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>138</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>164</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>519</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>526</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>539</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>540</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>102</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>105</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>109</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>112</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>116</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>123</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>130</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>133</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>137</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>147</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>151</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>154</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>158</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>161</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>180</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>183</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>187</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>190</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>194</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>197</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>201</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>204</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>208</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>211</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>215</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>218</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>222</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>225</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>229</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>232</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>236</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>239</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>243</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>246</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>250</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>253</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>272</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>275</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>279</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>282</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>286</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>289</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>293</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>296</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>300</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>303</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>307</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>310</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>314</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>317</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>321</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>324</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>328</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>331</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>335</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>338</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>342</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>345</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>379</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>382</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>386</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>389</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>408</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>411</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>415</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>418</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>422</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>425</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>429</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>432</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>436</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>439</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>443</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>446</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>497</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>501</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>531</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>534</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>101</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>115</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>136</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>143</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>150</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>157</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>164</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>166</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>167</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>173</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>177</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>179</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>186</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>193</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>200</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>207</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>214</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>221</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>228</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>235</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>242</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>249</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>256</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>258</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>259</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>265</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>269</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>271</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>278</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>285</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>292</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>299</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>306</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>313</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>320</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>327</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>334</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>341</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>348</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>350</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>351</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>357</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>361</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>363</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>365</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>366</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>372</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>376</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>378</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>385</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>392</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>394</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>395</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>401</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>405</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>407</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>414</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>421</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>428</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>435</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>442</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>449</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>451</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>452</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>458</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>462</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>464</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>466</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>468</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>470</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>472</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>474</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>476</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>478</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>480</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>481</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>487</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>491</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>493</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>494</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>496</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>498</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>500</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>502</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>503</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>504</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>505</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>511</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>518</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>542</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>548</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>528</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>555</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>154</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>155</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>137</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>90</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>96</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>109</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>137</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>137</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getLibratoApiTimeoutInMillis</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getProxyHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getProxyPort</name></method><methodDesc>()Ljava/lang/Integer;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getSource</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getSource</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getSource</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getSource</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getSource</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getSource</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getSource</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getSource</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getSource</name></method><methodDesc>(Lorg/jmxtrans/model/Server;)Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getToken</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getUrl</name></method><methodDesc>()Ljava/net/URL;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getUsername</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>102</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>159</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>174</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>101</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>116</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>118</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>123</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>136</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>151</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>166</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>181</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>102</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>159</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>174</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>102</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>159</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>174</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>137</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>152</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>167</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>182</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>187</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>200</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>204</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>208</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>212</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>140</int><int>227</int><int>286</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>251</int><int>310</int><int>164</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>134</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>237</int><int>296</int><int>150</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>256</int><int>169</int><int>315</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>290</int><int>231</int><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>305</int><int>159</int><int>246</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>140</int><int>227</int><int>286</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>251</int><int>310</int><int>164</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>140</int><int>227</int><int>286</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>251</int><int>310</int><int>164</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>155</int><int>242</int><int>301</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>174</int><int>320</int><int>261</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>getBucketType</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>getHostname</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>getHostname</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>getPort</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>getPort</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>114</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>115</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>128</int><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>124</int><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>167</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>176</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>216</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>97</int><int>130</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>160</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>161</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>166</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>169</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>175</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>188</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>194</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>210</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>215</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>218</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>124</int><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>167</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>176</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>216</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>124</int><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>167</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>176</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>216</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>182</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>201</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>224</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>160</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>113</int><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>151</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>145</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>150</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>113</int><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>151</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>113</int><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>151</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>118</int><int>131</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>164</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>shutdownAndAwaitTermination</name></method><methodDesc>(Ljava/util/concurrent/ExecutorService;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>shutdownAndAwaitTermination</name></method><methodDesc>(Ljava/util/concurrent/ExecutorService;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>shutdownAndAwaitTermination</name></method><methodDesc>(Ljava/util/concurrent/ExecutorService;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>shutdownAndAwaitTermination</name></method><methodDesc>(Ljava/util/concurrent/ExecutorService;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>shutdownAndAwaitTermination</name></method><methodDesc>(Ljava/util/concurrent/ExecutorService;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>shutdownAndAwaitTermination</name></method><methodDesc>(Ljava/util/concurrent/ExecutorService;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>shutdownAndAwaitTermination</name></method><methodDesc>(Ljava/util/concurrent/ExecutorService;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>shutdownAndAwaitTermination</name></method><methodDesc>(Ljava/util/concurrent/ExecutorService;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>shutdownAndAwaitTermination</name></method><methodDesc>(Ljava/util/concurrent/ExecutorService;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>shutdownAndAwaitTermination</name></method><methodDesc>(Ljava/util/concurrent/ExecutorService;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>shutdownAndAwaitTermination</name></method><methodDesc>(Ljava/util/concurrent/ExecutorService;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>shutdownAndAwaitTermination</name></method><methodDesc>(Ljava/util/concurrent/ExecutorService;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>shutdownAndAwaitTermination</name></method><methodDesc>(Ljava/util/concurrent/ExecutorService;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>shutdownAndAwaitTermination</name></method><methodDesc>(Ljava/util/concurrent/ExecutorService;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxUtils</name></clazz><method><name>shutdownAndAwaitTermination</name></method><methodDesc>(Ljava/util/concurrent/ExecutorService;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>218</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>235</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>236</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>102</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>109</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>113</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>116</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>123</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>127</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>130</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>134</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>137</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>141</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>148</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>151</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>155</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>158</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>162</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>165</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>169</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>172</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>176</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>179</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>183</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>186</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>190</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>193</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>197</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>200</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>207</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>211</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>227</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>230</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>105</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>112</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>133</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>147</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>154</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>161</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>168</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>175</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>182</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>189</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>196</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>203</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>204</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>206</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>208</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>210</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>212</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>213</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>214</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>215</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>216</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>217</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>238</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>244</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>224</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>251</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>214</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>231</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>232</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>90</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>104</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>114</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>118</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>139</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>142</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>146</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>149</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>156</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>160</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>163</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>167</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>170</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>174</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>177</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>181</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>184</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>188</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>191</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>195</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>198</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>202</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>205</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>223</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>226</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>96</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>117</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>124</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>131</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>133</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>134</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>135</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>136</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>138</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>145</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>152</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>159</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>166</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>173</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>180</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>187</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>194</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>201</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>208</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>210</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>211</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>212</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>213</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>234</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>240</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>220</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>247</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>202</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>219</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>220</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>101</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>104</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>115</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>118</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>139</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>142</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>146</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>149</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>170</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>173</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>177</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>180</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>184</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>211</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>214</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>114</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>136</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>138</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>145</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>156</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>157</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>163</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>167</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>169</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>176</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>187</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>188</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>194</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>201</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>222</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>228</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>208</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>235</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>70</int><int>38</int><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>70</int><int>38</int><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>70</int><int>38</int><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>86</int><int>42</int><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>output</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>output</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>output</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>output</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>output</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>output</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>output</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>output</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>output</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>output</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>output</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>90</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>101</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>102</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getJmxServiceURL</name></method><methodDesc>()Ljavax/management/remote/JMXServiceURL;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getJmxServiceURL</name></method><methodDesc>()Ljavax/management/remote/JMXServiceURL;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getJmxServiceURL</name></method><methodDesc>()Ljavax/management/remote/JMXServiceURL;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getLocalMBeanServer</name></method><methodDesc>()Ljavax/management/MBeanServer;</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getLocalMBeanServer</name></method><methodDesc>()Ljavax/management/MBeanServer;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getPort</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getServerConnection</name></method><methodDesc>()Ljavax/management/remote/JMXConnector;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getServerConnection</name></method><methodDesc>()Ljavax/management/remote/JMXConnector;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getServerConnection</name></method><methodDesc>()Ljavax/management/remote/JMXConnector;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getServerConnection</name></method><methodDesc>()Ljavax/management/remote/JMXConnector;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getServerConnection</name></method><methodDesc>()Ljavax/management/remote/JMXConnector;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>getUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>isQueriesMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>isQueriesMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>isQueriesMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>isQueriesMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>isQueriesMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>isQueriesMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>isQueriesMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>isQueriesMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>isQueriesMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>isQueriesMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>isQueriesMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>mergeServerLists</name></method><methodDesc>(Ljava/util/List;Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>computeAddressingMode</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Linfo/ganglia/gmetric4j/gmetric/GMetric$UDPAddressingMode;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>computeAddressingMode</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Linfo/ganglia/gmetric4j/gmetric/GMetric$UDPAddressingMode;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>createOrOpenDatabase</name></method><methodDesc>()Lorg/jrobin/core/RrdDb;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>createOrOpenDatabase</name></method><methodDesc>()Lorg/jrobin/core/RrdDb;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>createOrOpenDatabase</name></method><methodDesc>()Lorg/jrobin/core/RrdDb;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>createOrOpenDatabase</name></method><methodDesc>()Lorg/jrobin/core/RrdDb;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>createOrOpenDatabase</name></method><methodDesc>()Lorg/jrobin/core/RrdDb;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>createOrOpenDatabase</name></method><methodDesc>()Lorg/jrobin/core/RrdDb;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>createOrOpenDatabase</name></method><methodDesc>()Lorg/jrobin/core/RrdDb;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>createOrOpenDatabase</name></method><methodDesc>()Lorg/jrobin/core/RrdDb;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>createOrOpenDatabase</name></method><methodDesc>()Lorg/jrobin/core/RrdDb;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>createOrOpenDatabase</name></method><methodDesc>()Lorg/jrobin/core/RrdDb;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>createOrOpenDatabase</name></method><methodDesc>()Lorg/jrobin/core/RrdDb;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>createOrOpenDatabase</name></method><methodDesc>()Lorg/jrobin/core/RrdDb;</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>createOrOpenDatabase</name></method><methodDesc>()Lorg/jrobin/core/RrdDb;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>createOrOpenDatabase</name></method><methodDesc>()Lorg/jrobin/core/RrdDb;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>getOutputFile</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>getOutputFile</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>getTemplateFile</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>getTemplateFile</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>99</int><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>99</int><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>99</int><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>103</int><int>115</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>buildLog4jAppender</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;)Lorg/apache/log4j/Appender;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>buildLog4jLoggerFactory</name></method><methodDesc>(Lorg/apache/log4j/Appender;)Lorg/apache/log4j/spi/LoggerFactory;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>buildLog4jLoggerFactory</name></method><methodDesc>(Lorg/apache/log4j/Appender;)Lorg/apache/log4j/spi/LoggerFactory;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>buildLoggerName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>buildLoggerName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>buildLoggerName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>buildLoggerName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>buildLoggerName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>buildLoggerName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>getDelimiter</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>getMaxLogBackupFiles</name></method><methodDesc>()Ljava/lang/Integer;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>getMaxLogBackupFiles</name></method><methodDesc>()Ljava/lang/Integer;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>getMaxLogFileSize</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>getOutputFile</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>initLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>initLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>initLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>initLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>initLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>getHandler</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>90</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>109</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>113</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>116</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>118</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>138</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>139</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>143</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>147</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>151</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>writeToSensu</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>writeToSensu</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>writeToSensu</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>64</int><int>92</int><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>writeToSensu</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>writeToSensu</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>64</int><int>92</int><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>writeToSensu</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>64</int><int>92</int><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>writeToSensu</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/SensuWriter</name></clazz><method><name>writeToSensu</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>68</int><int>96</int><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>154</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>166</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>115</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>180</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>147</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>154</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>124</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>130</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>143</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>159</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>168</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>169</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>171</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>173</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>174</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>176</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>188</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>190</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>191</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>154</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>154</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>104</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>112</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>133</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>109</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>127</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>130</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>131</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>102</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>105</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>118</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>70</int><int>38</int><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>70</int><int>38</int><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>70</int><int>38</int><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>86</int><int>42</int><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>165</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>131</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>134</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>141</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>143</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>145</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>158</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>159</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>164</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>167</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>165</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>165</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>configure</name></method><methodDesc>()V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>configure</name></method><methodDesc>()V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>configure</name></method><methodDesc>()V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>configure</name></method><methodDesc>()V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>configure</name></method><methodDesc>()V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>configure</name></method><methodDesc>()V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>configure</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>configure</name></method><methodDesc>()V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>configure</name></method><methodDesc>()V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>configure</name></method><methodDesc>()V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>configure</name></method><methodDesc>()V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>configure</name></method><methodDesc>()V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>configure</name></method><methodDesc>()V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>configure</name></method><methodDesc>()V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>configure</name></method><methodDesc>()V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>configure</name></method><methodDesc>()V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>configure</name></method><methodDesc>()V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>configure</name></method><methodDesc>()V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>getObjectPool</name></method><methodDesc>(Lorg/apache/commons/pool/KeyedPoolableObjectFactory;Ljava/lang/String;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>getObjectPool</name></method><methodDesc>(Lorg/apache/commons/pool/KeyedPoolableObjectFactory;Ljava/lang/String;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>getObjectPool</name></method><methodDesc>(Lorg/apache/commons/pool/KeyedPoolableObjectFactory;Ljava/lang/String;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>getObjectPool</name></method><methodDesc>(Lorg/apache/commons/pool/KeyedPoolableObjectFactory;Ljava/lang/String;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>getObjectPool</name></method><methodDesc>(Lorg/apache/commons/pool/KeyedPoolableObjectFactory;Ljava/lang/String;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>getObjectPool</name></method><methodDesc>(Lorg/apache/commons/pool/KeyedPoolableObjectFactory;Ljava/lang/String;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>getObjectPool</name></method><methodDesc>(Lorg/apache/commons/pool/KeyedPoolableObjectFactory;Ljava/lang/String;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>getObjectPool</name></method><methodDesc>(Lorg/apache/commons/pool/KeyedPoolableObjectFactory;Ljava/lang/String;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>getObjectPool</name></method><methodDesc>(Lorg/apache/commons/pool/KeyedPoolableObjectFactory;Ljava/lang/String;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>getObjectPool</name></method><methodDesc>(Lorg/apache/commons/pool/KeyedPoolableObjectFactory;Ljava/lang/String;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>getObjectPool</name></method><methodDesc>(Lorg/apache/commons/pool/KeyedPoolableObjectFactory;Ljava/lang/String;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>getObjectPool</name></method><methodDesc>(Lorg/apache/commons/pool/KeyedPoolableObjectFactory;Ljava/lang/String;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>getObjectPool</name></method><methodDesc>(Lorg/apache/commons/pool/KeyedPoolableObjectFactory;Ljava/lang/String;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>getObjectPool</name></method><methodDesc>(Lorg/apache/commons/pool/KeyedPoolableObjectFactory;Ljava/lang/String;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>getObjectPool</name></method><methodDesc>(Lorg/apache/commons/pool/KeyedPoolableObjectFactory;Ljava/lang/String;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>getObjectPool</name></method><methodDesc>(Lorg/apache/commons/pool/KeyedPoolableObjectFactory;Ljava/lang/String;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>jmxTransConfiguration</name></method><methodDesc>()Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>scheduler</name></method><methodDesc>(Lorg/jmxtrans/cli/JmxTransConfiguration;Lorg/jmxtrans/guice/GuiceJobFactory;)Lorg/quartz/Scheduler;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>scheduler</name></method><methodDesc>(Lorg/jmxtrans/cli/JmxTransConfiguration;Lorg/jmxtrans/guice/GuiceJobFactory;)Lorg/quartz/Scheduler;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>scheduler</name></method><methodDesc>(Lorg/jmxtrans/cli/JmxTransConfiguration;Lorg/jmxtrans/guice/GuiceJobFactory;)Lorg/quartz/Scheduler;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>scheduler</name></method><methodDesc>(Lorg/jmxtrans/cli/JmxTransConfiguration;Lorg/jmxtrans/guice/GuiceJobFactory;)Lorg/quartz/Scheduler;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>scheduler</name></method><methodDesc>(Lorg/jmxtrans/cli/JmxTransConfiguration;Lorg/jmxtrans/guice/GuiceJobFactory;)Lorg/quartz/Scheduler;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>scheduler</name></method><methodDesc>(Lorg/jmxtrans/cli/JmxTransConfiguration;Lorg/jmxtrans/guice/GuiceJobFactory;)Lorg/quartz/Scheduler;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>scheduler</name></method><methodDesc>(Lorg/jmxtrans/cli/JmxTransConfiguration;Lorg/jmxtrans/guice/GuiceJobFactory;)Lorg/quartz/Scheduler;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>scheduler</name></method><methodDesc>(Lorg/jmxtrans/cli/JmxTransConfiguration;Lorg/jmxtrans/guice/GuiceJobFactory;)Lorg/quartz/Scheduler;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>scheduler</name></method><methodDesc>(Lorg/jmxtrans/cli/JmxTransConfiguration;Lorg/jmxtrans/guice/GuiceJobFactory;)Lorg/quartz/Scheduler;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>scheduler</name></method><methodDesc>(Lorg/jmxtrans/cli/JmxTransConfiguration;Lorg/jmxtrans/guice/GuiceJobFactory;)Lorg/quartz/Scheduler;</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>scheduler</name></method><methodDesc>(Lorg/jmxtrans/cli/JmxTransConfiguration;Lorg/jmxtrans/guice/GuiceJobFactory;)Lorg/quartz/Scheduler;</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>scheduler</name></method><methodDesc>(Lorg/jmxtrans/cli/JmxTransConfiguration;Lorg/jmxtrans/guice/GuiceJobFactory;)Lorg/quartz/Scheduler;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>scheduler</name></method><methodDesc>(Lorg/jmxtrans/cli/JmxTransConfiguration;Lorg/jmxtrans/guice/GuiceJobFactory;)Lorg/quartz/Scheduler;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>scheduler</name></method><methodDesc>(Lorg/jmxtrans/cli/JmxTransConfiguration;Lorg/jmxtrans/guice/GuiceJobFactory;)Lorg/quartz/Scheduler;</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>scheduler</name></method><methodDesc>(Lorg/jmxtrans/cli/JmxTransConfiguration;Lorg/jmxtrans/guice/GuiceJobFactory;)Lorg/quartz/Scheduler;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>scheduler</name></method><methodDesc>(Lorg/jmxtrans/cli/JmxTransConfiguration;Lorg/jmxtrans/guice/GuiceJobFactory;)Lorg/quartz/Scheduler;</methodDesc></location><indexes><int>68</int><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/JmxTransModule</name></clazz><method><name>scheduler</name></method><methodDesc>(Lorg/jmxtrans/cli/JmxTransConfiguration;Lorg/jmxtrans/guice/GuiceJobFactory;)Lorg/quartz/Scheduler;</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>96</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>90</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>104</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>buildAppender</name></method><methodDesc>(Lch/qos/logback/core/encoder/Encoder;Lch/qos/logback/core/rolling/RollingPolicy;)Lch/qos/logback/core/rolling/RollingFileAppender;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>buildAppender</name></method><methodDesc>(Lch/qos/logback/core/encoder/Encoder;Lch/qos/logback/core/rolling/RollingPolicy;)Lch/qos/logback/core/rolling/RollingFileAppender;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>buildAppender</name></method><methodDesc>(Lch/qos/logback/core/encoder/Encoder;Lch/qos/logback/core/rolling/RollingPolicy;)Lch/qos/logback/core/rolling/RollingFileAppender;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>buildAppender</name></method><methodDesc>(Lch/qos/logback/core/encoder/Encoder;Lch/qos/logback/core/rolling/RollingPolicy;)Lch/qos/logback/core/rolling/RollingFileAppender;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>buildAppender</name></method><methodDesc>(Lch/qos/logback/core/encoder/Encoder;Lch/qos/logback/core/rolling/RollingPolicy;)Lch/qos/logback/core/rolling/RollingFileAppender;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>buildAppender</name></method><methodDesc>(Lch/qos/logback/core/encoder/Encoder;Lch/qos/logback/core/rolling/RollingPolicy;)Lch/qos/logback/core/rolling/RollingFileAppender;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>buildAppender</name></method><methodDesc>(Lch/qos/logback/core/encoder/Encoder;Lch/qos/logback/core/rolling/RollingPolicy;)Lch/qos/logback/core/rolling/RollingFileAppender;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>buildAppender</name></method><methodDesc>(Lch/qos/logback/core/encoder/Encoder;Lch/qos/logback/core/rolling/RollingPolicy;)Lch/qos/logback/core/rolling/RollingFileAppender;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>buildEncoder</name></method><methodDesc>()Lch/qos/logback/core/encoder/Encoder;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>buildEncoder</name></method><methodDesc>()Lch/qos/logback/core/encoder/Encoder;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>buildEncoder</name></method><methodDesc>()Lch/qos/logback/core/encoder/Encoder;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>buildEncoder</name></method><methodDesc>()Lch/qos/logback/core/encoder/Encoder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>buildEncoder</name></method><methodDesc>()Lch/qos/logback/core/encoder/Encoder;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>buildEncoder</name></method><methodDesc>()Lch/qos/logback/core/encoder/Encoder;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>getAndConfigureLogger</name></method><methodDesc>(Lch/qos/logback/core/Appender;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>getAndConfigureLogger</name></method><methodDesc>(Lch/qos/logback/core/Appender;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>getAndConfigureLogger</name></method><methodDesc>(Lch/qos/logback/core/Appender;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>getAndConfigureLogger</name></method><methodDesc>(Lch/qos/logback/core/Appender;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>getAndConfigureLogger</name></method><methodDesc>(Lch/qos/logback/core/Appender;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>getAndConfigureLogger</name></method><methodDesc>(Lch/qos/logback/core/Appender;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>getAndConfigureLogger</name></method><methodDesc>(Lch/qos/logback/core/Appender;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>getSettingOutputPattern</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>getSettingOutputPattern</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>getSettingOutputPattern</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>getSettingOutputPattern</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>getSettingOutputPattern</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>getSettingOutputPattern</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>getSettingOutputPattern</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>initLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>initLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>initLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>initLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>initLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>initLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>initLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>initLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>initLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>initLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>initRollingPolicy</name></method><methodDesc>(Ljava/lang/String;ILjava/lang/String;)Lch/qos/logback/core/rolling/RollingPolicy;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>initRollingPolicy</name></method><methodDesc>(Ljava/lang/String;ILjava/lang/String;)Lch/qos/logback/core/rolling/RollingPolicy;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>initRollingPolicy</name></method><methodDesc>(Ljava/lang/String;ILjava/lang/String;)Lch/qos/logback/core/rolling/RollingPolicy;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>initRollingPolicy</name></method><methodDesc>(Ljava/lang/String;ILjava/lang/String;)Lch/qos/logback/core/rolling/RollingPolicy;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>initRollingPolicy</name></method><methodDesc>(Ljava/lang/String;ILjava/lang/String;)Lch/qos/logback/core/rolling/RollingPolicy;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>initRollingPolicy</name></method><methodDesc>(Ljava/lang/String;ILjava/lang/String;)Lch/qos/logback/core/rolling/RollingPolicy;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>initRollingPolicy</name></method><methodDesc>(Ljava/lang/String;ILjava/lang/String;)Lch/qos/logback/core/rolling/RollingPolicy;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>initRollingPolicy</name></method><methodDesc>(Ljava/lang/String;ILjava/lang/String;)Lch/qos/logback/core/rolling/RollingPolicy;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>initRollingPolicy</name></method><methodDesc>(Ljava/lang/String;ILjava/lang/String;)Lch/qos/logback/core/rolling/RollingPolicy;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>70</int><int>38</int><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>70</int><int>38</int><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>70</int><int>38</int><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>86</int><int>42</int><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>90</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>getLogger</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>109</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addAlias</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addClassName</name></method><methodDesc>(Lorg/jmxtrans/model/Result;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addClassName</name></method><methodDesc>(Lorg/jmxtrans/model/Result;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addClassName</name></method><methodDesc>(Lorg/jmxtrans/model/Result;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addKeyStringDotted</name></method><methodDesc>(Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addKeyStringDotted</name></method><methodDesc>(Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addKeyStringDotted</name></method><methodDesc>(Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addTypeName</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Lorg/jmxtrans/model/Result;Ljava/util/List;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addTypeName</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Lorg/jmxtrans/model/Result;Ljava/util/List;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>computeKey</name></method><methodDesc>(Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;)Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getKeyString</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getKeyString</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getKeyString</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getKeyString</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getKeyString</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getKeyString</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getKeyString</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getKeyStringWithDottedKeys</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getKeyStringWithDottedKeys</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getKeyStringWithDottedKeys</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getKeyStringWithDottedKeys</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getKeyStringWithDottedKeys</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getKeyStringWithDottedKeys</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getKeyStringWithDottedKeys</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getKeyStringWithDottedKeys</name></method><methodDesc>(Lorg/jmxtrans/model/Query;Lorg/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>104</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="33" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>127</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="14" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>141</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="25" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="33" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(org.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="12" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lorg/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lorg/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lorg/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lorg/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="9" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lorg/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="9" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(org.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lorg/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lorg/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lorg/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(org.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="MEMORY_ERROR"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lorg/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(org.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lorg/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lorg/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="MEMORY_ERROR"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lorg/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;Ljava/lang/String;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getMaxActive</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getMaxActive</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getMaxIdle</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getMaxIdle</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getMaxWait</name></method><methodDesc>()J</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getMaxWait</name></method><methodDesc>()J</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getMinIdle</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getMinIdle</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getNumActive</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getNumActive</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getNumIdle</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getNumIdle</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getPoolName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>setMaxActive</name></method><methodDesc>(I)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>setMaxIdle</name></method><methodDesc>(I)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>setMaxWait</name></method><methodDesc>(J)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>setMinIdle</name></method><methodDesc>(I)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>setObjectName</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Graphite</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Graphite</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Graphite</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Graphite</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Graphite</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Graphite</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Graphite</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Graphite</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Graphite</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Graphite</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Graphite</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Graphite</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Graphite</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Graphite</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Graphite</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Graphite</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Graphite</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Graphite</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/Graphite</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/ManagedJmxTransformerProcess</name></clazz><method><name>getJsonDirOrFile</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/ManagedJmxTransformerProcess</name></clazz><method><name>getJsonDirOrFile</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/ManagedJmxTransformerProcess</name></clazz><method><name>getJsonDirOrFile</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/ManagedJmxTransformerProcess</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/ManagedJmxTransformerProcess</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/ManagedJmxTransformerProcess</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/ManagedJmxTransformerProcess</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/ManagedJmxTransformerProcess</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/ManagedJmxTransformerProcess</name></clazz><method><name>getQuartPropertiesFile</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/ManagedJmxTransformerProcess</name></clazz><method><name>getQuartPropertiesFile</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/ManagedJmxTransformerProcess</name></clazz><method><name>getRunPeriod</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/ManagedJmxTransformerProcess</name></clazz><method><name>getRunPeriod</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/ManagedJmxTransformerProcess</name></clazz><method><name>setJsonDirOrFile</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/ManagedJmxTransformerProcess</name></clazz><method><name>setJsonDirOrFile</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/ManagedJmxTransformerProcess</name></clazz><method><name>setObjectName</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/ManagedJmxTransformerProcess</name></clazz><method><name>setQuartPropertiesFile</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/ManagedJmxTransformerProcess</name></clazz><method><name>setRunPeriod</name></method><methodDesc>(I)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/ManagedJmxTransformerProcess</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/ManagedJmxTransformerProcess</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter$Builder</name></clazz><method><name>addTypeName</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/model/output/RRDToolWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter$Builder</name></clazz><method><name>addTypeName</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/model/output/RRDToolWriter$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter$Builder</name></clazz><method><name>addTypeNames</name></method><methodDesc>(Ljava/util/List;)Lorg/jmxtrans/model/output/RRDToolWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter$Builder</name></clazz><method><name>addTypeNames</name></method><methodDesc>(Ljava/util/List;)Lorg/jmxtrans/model/output/RRDToolWriter$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/model/output/RRDToolWriter;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/model/output/RRDToolWriter;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/model/output/RRDToolWriter;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/model/output/RRDToolWriter;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/model/output/RRDToolWriter;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/model/output/RRDToolWriter;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter$Builder</name></clazz><method><name>setBinaryPath</name></method><methodDesc>(Ljava/io/File;)Lorg/jmxtrans/model/output/RRDToolWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter$Builder</name></clazz><method><name>setBooleanAsNumber</name></method><methodDesc>(Z)Lorg/jmxtrans/model/output/RRDToolWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter$Builder</name></clazz><method><name>setDebugEnabled</name></method><methodDesc>(Z)Lorg/jmxtrans/model/output/RRDToolWriter$Builder;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter$Builder</name></clazz><method><name>setDebugEnabled</name></method><methodDesc>(Z)Lorg/jmxtrans/model/output/RRDToolWriter$Builder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter$Builder</name></clazz><method><name>setGenerate</name></method><methodDesc>(Ljava/lang/Boolean;)Lorg/jmxtrans/model/output/RRDToolWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter$Builder</name></clazz><method><name>setOutputFile</name></method><methodDesc>(Ljava/io/File;)Lorg/jmxtrans/model/output/RRDToolWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/RRDToolWriter$Builder</name></clazz><method><name>setTemplateFile</name></method><methodDesc>(Ljava/io/File;)Lorg/jmxtrans/model/output/RRDToolWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/DatagramSocketFactory</name></clazz><method><name>destroyObject</name></method><methodDesc>(Ljava/net/SocketAddress;Ljava/net/DatagramSocket;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/DatagramSocketFactory</name></clazz><method><name>makeObject</name></method><methodDesc>(Ljava/net/SocketAddress;)Ljava/net/DatagramSocket;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/DatagramSocketFactory</name></clazz><method><name>makeObject</name></method><methodDesc>(Ljava/net/SocketAddress;)Ljava/net/DatagramSocket;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/DatagramSocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/SocketAddress;Ljava/net/DatagramSocket;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/DatagramSocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/SocketAddress;Ljava/net/DatagramSocket;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/DatagramSocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/SocketAddress;Ljava/net/DatagramSocket;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/DatagramSocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/SocketAddress;Ljava/net/DatagramSocket;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/DatagramSocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/SocketAddress;Ljava/net/DatagramSocket;)Z</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/DatagramSocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/SocketAddress;Ljava/net/DatagramSocket;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/DatagramSocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/SocketAddress;Ljava/net/DatagramSocket;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/DatagramSocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/SocketAddress;Ljava/net/DatagramSocket;)Z</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/DatagramSocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/SocketAddress;Ljava/net/DatagramSocket;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/DatagramSocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/SocketAddress;Ljava/net/DatagramSocket;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/DatagramSocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/SocketAddress;Ljava/net/DatagramSocket;)Z</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/DatagramSocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/SocketAddress;Ljava/net/DatagramSocket;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/DatagramSocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/SocketAddress;Ljava/net/DatagramSocket;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/DatagramSocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/SocketAddress;Ljava/net/DatagramSocket;)Z</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/DatagramSocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/SocketAddress;Ljava/net/DatagramSocket;)Z</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>124</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>278</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>289</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>294</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>168</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>272</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>278</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>199</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>260</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>265</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>290</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>301</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>278</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>278</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>169</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>200</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lorg/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>302</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>getUrl</name></method><methodDesc>()Ljavax/management/remote/JMXServiceURL;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/net/URL;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/net/URL;)V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/net/URL;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/net/URL;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/net/URL;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/net/URL;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/net/URL;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/net/URL;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/net/URL;)V</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/net/URL;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/net/URL;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/net/URL;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jobs/ServerJob</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/quartz/JobExecutionContext;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jobs/ServerJob</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/quartz/JobExecutionContext;)V</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jobs/ServerJob</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/quartz/JobExecutionContext;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jobs/ServerJob</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/quartz/JobExecutionContext;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jobs/ServerJob</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/quartz/JobExecutionContext;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jobs/ServerJob</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/quartz/JobExecutionContext;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jobs/ServerJob</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/quartz/JobExecutionContext;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jobs/ServerJob</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/quartz/JobExecutionContext;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jobs/ServerJob</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/quartz/JobExecutionContext;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jobs/ServerJob</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/quartz/JobExecutionContext;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jobs/ServerJob</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/quartz/JobExecutionContext;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jobs/ServerJob</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/quartz/JobExecutionContext;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jobs/ServerJob</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/quartz/JobExecutionContext;)V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jobs/ServerJob</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/quartz/JobExecutionContext;)V</methodDesc></location><indexes><int>65</int><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>addTag</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Lorg/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>addTag</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Lorg/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>addTypeName</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>addTypeName</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>addTypeNames</name></method><methodDesc>(Ljava/util/List;)Lorg/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>addTypeNames</name></method><methodDesc>(Ljava/util/List;)Lorg/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>setAddHostnameTag</name></method><methodDesc>(Ljava/lang/Boolean;)Lorg/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>setBooleanAsNumber</name></method><methodDesc>(Z)Lorg/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>setMergeTypeNamesTags</name></method><methodDesc>(Ljava/lang/Boolean;)Lorg/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>setMetricNamingExpression</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>setTagName</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>addTag</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Lorg/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>addTag</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Lorg/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>addTypeName</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>addTypeName</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>addTypeNames</name></method><methodDesc>(Ljava/util/List;)Lorg/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>addTypeNames</name></method><methodDesc>(Ljava/util/List;)Lorg/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>setAddHostnameTag</name></method><methodDesc>(Ljava/lang/Boolean;)Lorg/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>setBooleanAsNumber</name></method><methodDesc>(Z)Lorg/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>setMergeTypeNamesTags</name></method><methodDesc>(Ljava/lang/Boolean;)Lorg/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>setMetricNamingExpression</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>setTagName</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>finishOutput</name></method><methodDesc>()V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>finishOutput</name></method><methodDesc>()V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>finishOutput</name></method><methodDesc>()V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/HeapMemory</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/HeapMemory</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/HeapMemory</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/HeapMemory</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/HeapMemory</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/HeapMemory</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/HeapMemory</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/HeapMemory</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/HeapMemory</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/HeapMemory</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/HeapMemory</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/HeapMemory</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/MemoryPool</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/MemoryPool</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/MemoryPool</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/MemoryPool</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/MemoryPool</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/MemoryPool</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/MemoryPool</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/MemoryPool</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/MemoryPool</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/MemoryPool</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/MemoryPool</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/MemoryPool</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JmxConnectionFactory</name></clazz><method><name>destroyObject</name></method><methodDesc>(Lorg/jmxtrans/connections/JMXConnectionParams;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JmxConnectionFactory</name></clazz><method><name>makeObject</name></method><methodDesc>(Lorg/jmxtrans/connections/JMXConnectionParams;)Ljavax/management/remote/JMXConnector;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JmxConnectionFactory</name></clazz><method><name>makeObject</name></method><methodDesc>(Lorg/jmxtrans/connections/JMXConnectionParams;)Ljavax/management/remote/JMXConnector;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JmxConnectionFactory</name></clazz><method><name>makeObject</name></method><methodDesc>(Lorg/jmxtrans/connections/JMXConnectionParams;)Ljavax/management/remote/JMXConnector;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JmxConnectionFactory</name></clazz><method><name>makeObject</name></method><methodDesc>(Lorg/jmxtrans/connections/JMXConnectionParams;)Ljavax/management/remote/JMXConnector;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JmxConnectionFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Lorg/jmxtrans/connections/JMXConnectionParams;Ljavax/management/remote/JMXConnector;)Z</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JmxConnectionFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Lorg/jmxtrans/connections/JMXConnectionParams;Ljavax/management/remote/JMXConnector;)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JmxConnectionFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Lorg/jmxtrans/connections/JMXConnectionParams;Ljavax/management/remote/JMXConnector;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JmxConnectionFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Lorg/jmxtrans/connections/JMXConnectionParams;Ljavax/management/remote/JMXConnector;)Z</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JmxConnectionFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Lorg/jmxtrans/connections/JMXConnectionParams;Ljavax/management/remote/JMXConnector;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/JmxConnectionFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Lorg/jmxtrans/connections/JMXConnectionParams;Ljavax/management/remote/JMXConnector;)Z</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/SignalInterceptor$SignalInterceptorHelper</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Lorg/jmxtrans/util/SignalInterceptor;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/SignalInterceptor$SignalInterceptorHelper</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Lorg/jmxtrans/util/SignalInterceptor;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/SignalInterceptor$SignalInterceptorHelper</name></clazz><method><name>handle</name></method><methodDesc>(Lsun/misc/Signal;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/SignalInterceptor$SignalInterceptorHelper</name></clazz><method><name>handle</name></method><methodDesc>(Lsun/misc/Signal;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/SignalInterceptor$SignalInterceptorHelper</name></clazz><method><name>handle</name></method><methodDesc>(Lsun/misc/Signal;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/SignalInterceptor$SignalInterceptorHelper</name></clazz><method><name>handle</name></method><methodDesc>(Lsun/misc/Signal;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/SignalInterceptor$SignalInterceptorHelper</name></clazz><method><name>handle</name></method><methodDesc>(Lsun/misc/Signal;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/SignalInterceptor$SignalInterceptorHelper</name></clazz><method><name>handle</name></method><methodDesc>(Lsun/misc/Signal;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/SignalInterceptor$SignalInterceptorHelper</name></clazz><method><name>handle</name></method><methodDesc>(Lsun/misc/Signal;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/SignalInterceptor$SignalInterceptorHelper</name></clazz><method><name>handle</name></method><methodDesc>(Lsun/misc/Signal;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/SignalInterceptor$SignalInterceptorHelper</name></clazz><method><name>handle</name></method><methodDesc>(Lsun/misc/Signal;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/JmxProcess</name></clazz><method><name>isServersMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/JmxProcess</name></clazz><method><name>isServersMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/JmxProcess</name></clazz><method><name>isServersMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/JmxProcess</name></clazz><method><name>isServersMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/JmxProcess</name></clazz><method><name>isServersMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/JmxProcess</name></clazz><method><name>isServersMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/JmxProcess</name></clazz><method><name>isServersMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/JmxProcess</name></clazz><method><name>isServersMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/JmxProcess</name></clazz><method><name>isServersMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/JmxProcess</name></clazz><method><name>isServersMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/JmxProcess</name></clazz><method><name>isServersMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/VelocityWriter</name></clazz><method><name>getVelocityEngine</name></method><methodDesc>(Ljava/util/List;)Lorg/apache/velocity/app/VelocityEngine;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/VelocityWriter</name></clazz><method><name>getVelocityEngine</name></method><methodDesc>(Ljava/util/List;)Lorg/apache/velocity/app/VelocityEngine;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/VelocityWriter</name></clazz><method><name>getVelocityEngine</name></method><methodDesc>(Ljava/util/List;)Lorg/apache/velocity/app/VelocityEngine;</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/VelocityWriter</name></clazz><method><name>getVelocityEngine</name></method><methodDesc>(Ljava/util/List;)Lorg/apache/velocity/app/VelocityEngine;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/VelocityWriter</name></clazz><method><name>getVelocityEngine</name></method><methodDesc>(Ljava/util/List;)Lorg/apache/velocity/app/VelocityEngine;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/VelocityWriter</name></clazz><method><name>getVelocityEngine</name></method><methodDesc>(Ljava/util/List;)Lorg/apache/velocity/app/VelocityEngine;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/VelocityWriter</name></clazz><method><name>getVelocityEngine</name></method><methodDesc>(Ljava/util/List;)Lorg/apache/velocity/app/VelocityEngine;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/VelocityWriter</name></clazz><method><name>getVelocityEngine</name></method><methodDesc>(Ljava/util/List;)Lorg/apache/velocity/app/VelocityEngine;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/VelocityWriter</name></clazz><method><name>getVelocityEngine</name></method><methodDesc>(Ljava/util/List;)Lorg/apache/velocity/app/VelocityEngine;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/VelocityWriter</name></clazz><method><name>getVelocityEngine</name></method><methodDesc>(Ljava/util/List;)Lorg/apache/velocity/app/VelocityEngine;</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/VelocityWriter</name></clazz><method><name>getVelocityEngine</name></method><methodDesc>(Ljava/util/List;)Lorg/apache/velocity/app/VelocityEngine;</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/DailyKeyOutWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/DailyKeyOutWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/DailyKeyOutWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/DailyKeyOutWriter</name></clazz><method><name>buildLoggerName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/DailyKeyOutWriter</name></clazz><method><name>buildLoggerName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/DailyKeyOutWriter</name></clazz><method><name>buildLoggerName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/DailyKeyOutWriter</name></clazz><method><name>buildLoggerName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/DailyKeyOutWriter</name></clazz><method><name>buildLoggerName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/DailyKeyOutWriter</name></clazz><method><name>buildLoggerName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/DailyKeyOutWriter</name></clazz><method><name>getDatePattern</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>destroyObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>addTypeName</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/model/output/GraphiteWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>addTypeName</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/model/output/GraphiteWriter$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>addTypeNames</name></method><methodDesc>(Ljava/util/List;)Lorg/jmxtrans/model/output/GraphiteWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>addTypeNames</name></method><methodDesc>(Ljava/util/List;)Lorg/jmxtrans/model/output/GraphiteWriter$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>setBooleanAsNumber</name></method><methodDesc>(Z)Lorg/jmxtrans/model/output/GraphiteWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>setDebugEnabled</name></method><methodDesc>(Z)Lorg/jmxtrans/model/output/GraphiteWriter$Builder;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>setDebugEnabled</name></method><methodDesc>(Z)Lorg/jmxtrans/model/output/GraphiteWriter$Builder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>setRootPrefix</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/model/output/GraphiteWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>sizeOf</name></method><methodDesc>(Ljava/util/List;)I</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query</name></clazz><method><name>sizeOf</name></method><methodDesc>(Ljava/util/List;)I</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getIntegerSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/Settings</name></clazz><method><name>getStringSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="35" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>addTypeName</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>addTypeName</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>addTypeNames</name></method><methodDesc>(Ljava/util/List;)Lorg/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>addTypeNames</name></method><methodDesc>(Ljava/util/List;)Lorg/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>setBooleanAsNumber</name></method><methodDesc>(Z)Lorg/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>setDebugEnabled</name></method><methodDesc>(Z)Lorg/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>setDebugEnabled</name></method><methodDesc>(Z)Lorg/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StdOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StdOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StdOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StdOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StdOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StdOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/StdOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lorg/jmxtrans/model/Server;Lorg/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/SignalInterceptor</name></clazz><method><name>register</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/SignalInterceptor</name></clazz><method><name>register</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/SignalInterceptor</name></clazz><method><name>registerQuietly</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/SignalInterceptor</name></clazz><method><name>registerQuietly</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/SignalInterceptor</name></clazz><method><name>registerQuietly</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/SignalInterceptor</name></clazz><method><name>registerQuietly</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/SignalInterceptor</name></clazz><method><name>registerQuietly</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="49" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="49" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>setSettings</name></method><methodDesc>(Ljava/util/Map;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>setSettings</name></method><methodDesc>(Ljava/util/Map;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>setSettings</name></method><methodDesc>(Ljava/util/Map;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>setSettings</name></method><methodDesc>(Ljava/util/Map;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server$Builder</name></clazz><method><name>addQueries</name></method><methodDesc>([Lorg/jmxtrans/model/Query;)Lorg/jmxtrans/model/Server$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server$Builder</name></clazz><method><name>addQueries</name></method><methodDesc>([Lorg/jmxtrans/model/Query;)Lorg/jmxtrans/model/Server$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server$Builder</name></clazz><method><name>addQueries</name></method><methodDesc>([Lorg/jmxtrans/model/Query;)Lorg/jmxtrans/model/Server$Builder;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server$Builder</name></clazz><method><name>setLocal</name></method><methodDesc>(Z)Lorg/jmxtrans/model/Server$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Server$Builder</name></clazz><method><name>setProtocolProviderPackages</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/model/Server$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/GuiceJobFactory</name></clazz><method><name>newJob</name></method><methodDesc>(Lorg/quartz/spi/TriggerFiredBundle;)Lorg/quartz/Job;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/GuiceJobFactory</name></clazz><method><name>newJob</name></method><methodDesc>(Lorg/quartz/spi/TriggerFiredBundle;)Lorg/quartz/Job;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/GuiceJobFactory</name></clazz><method><name>newJob</name></method><methodDesc>(Lorg/quartz/spi/TriggerFiredBundle;)Lorg/quartz/Job;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/guice/GuiceJobFactory</name></clazz><method><name>newJob</name></method><methodDesc>(Lorg/quartz/spi/TriggerFiredBundle;)Lorg/quartz/Job;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/SignalInterceptor$SignalInterceptorException</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/SignalInterceptor$SignalInterceptorException</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/SignalInterceptor$SignalInterceptorException</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/SignalInterceptor$SignalInterceptorException</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>getPort</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>getPort</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>setExpression</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/JmxTransConfiguration</name></clazz><method><name>getAdditionalJars</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/JmxTransConfiguration</name></clazz><method><name>getQuartPropertiesFile</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/cli/JmxTransConfiguration</name></clazz><method><name>isRunEndlessly</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/ProcessQueryThread</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/ProcessQueryThread</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/ProcessQueryThread</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/LocalJMXConnector</name></clazz><method><name>getConnectionId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/LocalJMXConnector</name></clazz><method><name>getMBeanServerConnection</name></method><methodDesc>()Ljavax/management/MBeanServerConnection;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/LocalJMXConnector</name></clazz><method><name>getMBeanServerConnection</name></method><methodDesc>(Ljavax/security/auth/Subject;)Ljavax/management/MBeanServerConnection;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query$Builder</name></clazz><method><name>setAllowDottedKeys</name></method><methodDesc>(Z)Lorg/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query$Builder</name></clazz><method><name>setTypeNames</name></method><methodDesc>(Ljava/util/Set;)Lorg/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/Query$Builder</name></clazz><method><name>setTypeNames</name></method><methodDesc>(Ljava/util/Set;)Lorg/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3$ResultCapture</name></clazz><method><name>getSettings</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/example/TreeWalker3$ResultCapture</name></clazz><method><name>getSettings</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/ProcessServerThread</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/jmx/ProcessServerThread</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/JmxTransformer$ShutdownHook</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/naming/ClassAttributeNamingStrategy</name></clazz><method><name>getDelimiter</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/KeyOutWriter$1</name></clazz><method><name>makeNewLoggerInstance</name></method><methodDesc>(Ljava/lang/String;)Lorg/apache/log4j/Logger;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/results/BooleanAsNumberValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/ValidationException</name></clazz><method><name>getQuery</name></method><methodDesc>()Lorg/jmxtrans/model/Query;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>170</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/model/output/NagiosWriter$1</name></clazz><method><name>makeNewLoggerInstance</name></method><methodDesc>(Ljava/lang/String;)Lorg/apache/log4j/Logger;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
