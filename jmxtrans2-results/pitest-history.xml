2
<classHistory><id hierarchicalHash="2f410456"><classId hash="792790102"><name><name>org/jmxtrans/results/QueryResultTest</name></name></classId></id><coverageId>2f410456</coverageId></classHistory>
<classHistory><id hierarchicalHash="a2505990"><classId hash="2723174800"><name><name>org/jmxtrans/results/QueryResult</name></name></classId></id><coverageId>2f410456</coverageId></classHistory>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;J)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.initializedCorrectly(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>getEpochInMillis</name></method><methodDesc>()J</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.initializedCorrectly(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>getName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.initializedCorrectly(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>getType</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.initializedCorrectly(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>getValue</name></method><methodDesc>()Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.initializedCorrectly(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.differentValuesHaveDifferentHashCodes(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.differentValuesHaveDifferentHashCodes(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.differentValuesHaveDifferentHashCodes(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesHaveSameHashCode(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.differentValuesHaveDifferentHashCodes(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.differentValuesHaveDifferentHashCodes(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.differentValuesHaveDifferentHashCodes(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>130</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.twoIsGreaterThanOne(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>134</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.twoIsGreaterThanOne(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.twoIsGreaterThanOne(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.twoIsGreaterThanOne(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.twoIsGreaterThanOne(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.twoIsGreaterThanOne(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.twoIsGreaterThanOne(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.twoIsGreaterThanOne(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.twoIsGreaterThanOne(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>90</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.twoIsGreaterThanOne(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.twoIsGreaterThanOne(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.twoIsGreaterThanOne(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.twoIsGreaterThanOne(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.twoIsGreaterThanOne(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.twoIsGreaterThanOne(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.twoIsGreaterThanOne(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.twoIsGreaterThanOne(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>137</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.twoIsGreaterThanOne(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>getEpoch</name></method><methodDesc>(Ljava/util/concurrent/TimeUnit;)J</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>getEpoch</name></method><methodDesc>(Ljava/util/concurrent/TimeUnit;)J</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>112</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>145</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>158</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>104</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>109</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>147</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>150</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>151</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>155</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>156</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>157</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>isValueGreaterThan</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)Z</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
