4
<classHistory><id hierarchicalHash="ee98de1"><classId hash="250187233"><name><name>org/jmxtrans/results/QueryResultTest</name></name></classId></id><coverageId>ee98de1</coverageId></classHistory>
<classHistory><id hierarchicalHash="c5f679bd"><classId hash="3321264573"><name><name>org/jmxtrans/results/QueryResultComparator</name></name></classId></id><coverageId>cdf0ab68</coverageId></classHistory>
<classHistory><id hierarchicalHash="cdf0ab68"><classId hash="3455101800"><name><name>org/jmxtrans/results/QueryResultComparatorTest</name></name></classId></id><coverageId>cdf0ab68</coverageId></classHistory>
<classHistory><id hierarchicalHash="818e6173"><classId hash="2173591923"><name><name>org/jmxtrans/results/QueryResult</name></name></classId></id><coverageId>dcda3949</coverageId></classHistory>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;J)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.cannotCreateQueryResultWithNullName(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>getEpoch</name></method><methodDesc>(Ljava/util/concurrent/TimeUnit;)J</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.initializedCorrectly(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>getEpoch</name></method><methodDesc>(Ljava/util/concurrent/TimeUnit;)J</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.initializedCorrectly(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>getName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.initializedCorrectly(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>getType</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.initializedCorrectly(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>getValue</name></method><methodDesc>()Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.initializedCorrectly(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.differentValuesHaveDifferentHashCodes(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.differentValuesHaveDifferentHashCodes(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.differentValuesHaveDifferentHashCodes(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.sameValuesHaveSameHashCode(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.differentValuesHaveDifferentHashCodes(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.differentValuesHaveDifferentHashCodes(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultTest.differentValuesHaveDifferentHashCodes(org.jmxtrans.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResultComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;Lorg/jmxtrans/results/QueryResult;)I</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultComparatorTest.nullValuesAreEquals(org.jmxtrans.results.QueryResultComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResultComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;Lorg/jmxtrans/results/QueryResult;)I</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultComparatorTest.nullValuesAreSmallerThanNonNull(org.jmxtrans.results.QueryResultComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResultComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;Lorg/jmxtrans/results/QueryResult;)I</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultComparatorTest.nonNullValuesAreGreaterThanNull(org.jmxtrans.results.QueryResultComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResultComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;Lorg/jmxtrans/results/QueryResult;)I</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultComparatorTest.nullValuesAreEquals(org.jmxtrans.results.QueryResultComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResultComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;Lorg/jmxtrans/results/QueryResult;)I</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultComparatorTest.nullValuesAreSmallerThanNonNull(org.jmxtrans.results.QueryResultComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResultComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;Lorg/jmxtrans/results/QueryResult;)I</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultComparatorTest.twoIsGreaterThanOne(org.jmxtrans.results.QueryResultComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResultComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;Lorg/jmxtrans/results/QueryResult;)I</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultComparatorTest.twoIsGreaterThanOne(org.jmxtrans.results.QueryResultComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResultComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;Lorg/jmxtrans/results/QueryResult;)I</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultComparatorTest.twoIsGreaterThanOne(org.jmxtrans.results.QueryResultComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResultComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;Lorg/jmxtrans/results/QueryResult;)I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultComparatorTest.nonNullValuesAreGreaterThanNull(org.jmxtrans.results.QueryResultComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResultComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;Lorg/jmxtrans/results/QueryResult;)I</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultComparatorTest.nullValuesAreSmallerThanNonNull(org.jmxtrans.results.QueryResultComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResultComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;Lorg/jmxtrans/results/QueryResult;)I</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultComparatorTest.twoIsGreaterThanOne(org.jmxtrans.results.QueryResultComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResultComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;Lorg/jmxtrans/results/QueryResult;)I</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultComparatorTest.nullValuesAreEquals(org.jmxtrans.results.QueryResultComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResultComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;Lorg/jmxtrans/results/QueryResult;)I</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultComparatorTest.nullValuesAreSmallerThanNonNull(org.jmxtrans.results.QueryResultComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResultComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;Lorg/jmxtrans/results/QueryResult;)I</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultComparatorTest.nonNullValuesAreGreaterThanNull(org.jmxtrans.results.QueryResultComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResultComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;Lorg/jmxtrans/results/QueryResult;)I</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultComparatorTest.twoIsGreaterThanOne(org.jmxtrans.results.QueryResultComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResultComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;Lorg/jmxtrans/results/QueryResult;)I</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultComparatorTest.twoIsGreaterThanOne(org.jmxtrans.results.QueryResultComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResultComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;Lorg/jmxtrans/results/QueryResult;)I</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResultComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;Lorg/jmxtrans/results/QueryResult;)I</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResultComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;Lorg/jmxtrans/results/QueryResult;)I</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultComparatorTest.twoIsGreaterThanOne(org.jmxtrans.results.QueryResultComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResultComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;Lorg/jmxtrans/results/QueryResult;)I</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResultComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;Lorg/jmxtrans/results/QueryResult;)I</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResultComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;Lorg/jmxtrans/results/QueryResult;)I</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultComparatorTest.nullValuesAreEquals(org.jmxtrans.results.QueryResultComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResultComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;Lorg/jmxtrans/results/QueryResult;)I</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultComparatorTest.nullValuesAreSmallerThanNonNull(org.jmxtrans.results.QueryResultComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResultComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;Lorg/jmxtrans/results/QueryResult;)I</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultComparatorTest.nonNullValuesAreGreaterThanNull(org.jmxtrans.results.QueryResultComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResultComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;Lorg/jmxtrans/results/QueryResult;)I</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.results.QueryResultComparatorTest.twoIsGreaterThanOne(org.jmxtrans.results.QueryResultComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResult</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResultComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;Lorg/jmxtrans/results/QueryResult;)I</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResultComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;Lorg/jmxtrans/results/QueryResult;)I</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResultComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;Lorg/jmxtrans/results/QueryResult;)I</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResultComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;Lorg/jmxtrans/results/QueryResult;)I</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/results/QueryResultComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;Lorg/jmxtrans/results/QueryResult;)I</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
