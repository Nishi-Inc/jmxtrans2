28
<classHistory><id hierarchicalHash="74627995"><classId hash="1952610709"><name><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></name></classId></id><coverageId>e411973f</coverageId></classHistory>
<classHistory><id hierarchicalHash="3bfd6d8d"><classId hash="1006464397"><name><name>org/jmxtrans/output/writers/support/WriterBasedOutputWriter</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="ab3b6844"><classId hash="2872797252"><name><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></name></classId></id><coverageId>3c0f454</coverageId></classHistory>
<classHistory><id hierarchicalHash="5690ca69"><classId hash="1452329577"><name><name>org/jmxtrans/output/writers/ConsoleOutputWriter</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="f0fa2b37"><classId hash="4042926903"><name><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></name></classId></id><coverageId>7081f20d</coverageId></classHistory>
<classHistory><id hierarchicalHash="320bf839"><classId hash="839645241"><name><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="d7c32e4c"><classId hash="2167563235"><name><name>org/jmxtrans/output/writers/ConsoleOutputWriter$Factory</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="5c78aab1"><classId hash="1551411889"><name><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></name></classId></id><coverageId>fb3bc6b5</coverageId></classHistory>
<classHistory><id hierarchicalHash="89f743dc"><classId hash="2314683356"><name><name>org/jmxtrans/output/writers/support/BatchingOutputWriter</name></name></classId></id><coverageId>2dc11af4</coverageId></classHistory>
<classHistory><id hierarchicalHash="3c0f454"><classId hash="62977108"><name><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriterTest</name></name></classId></id><coverageId>3c0f454</coverageId></classHistory>
<classHistory><id hierarchicalHash="89c33401"><classId hash="358660716"><name><name>org/jmxtrans/output/writers/RollingFileOutputWriter$Factory</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="6cc0fdb9"><classId hash="1824587193"><name><name>org/jmxtrans/output/writers/utils/EvictingQueueTest</name></name></classId></id><coverageId>6cc0fdb9</coverageId></classHistory>
<classHistory><id hierarchicalHash="169c6129a"><classId hash="1901240488"><name><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter$Factory</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="1b4b60c9a"><classId hash="3044941753"><name><name>org/jmxtrans/output/writers/SummarizingFileOverwriterOutputWriter$Factory</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="1aa735525"><classId hash="4281855201"><name><name>org/jmxtrans/output/writers/SummarizingFileOverwriterOutputWriter</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="19230422c"><classId hash="3560801333"><name><name>org/jmxtrans/output/writers/SummarizingConsoleOutputWriter$Factory</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="1692e263b"><classId hash="3186802167"><name><name>org/jmxtrans/output/writers/SummarizingConsoleOutputWriter</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="35fb7736"><classId hash="905672502"><name><name>org/jmxtrans/output/writers/GraphiteOutputWriter</name></name></classId></id><coverageId>6ebd99b4</coverageId></classHistory>
<classHistory><id hierarchicalHash="18216cda"><classId hash="404843738"><name><name>org/jmxtrans/output/writers/support/BatchedOutputWriter</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="f87371f2"><classId hash="4168315378"><name><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="a7b28258"><classId hash="1907821346"><name><name>org/jmxtrans/output/writers/GraphiteOutputWriter$Factory</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="6ebd99b4"><classId hash="1857919412"><name><name>org/jmxtrans/output/writers/GraphiteOutputWriterTest</name></name></classId></id><coverageId>6ebd99b4</coverageId></classHistory>
<classHistory><id hierarchicalHash="1b0575672"><classId hash="3210554171"><name><name>org/jmxtrans/output/writers/utils/ForwardingQueue</name></name></classId></id><coverageId>7081f20d</coverageId></classHistory>
<classHistory><id hierarchicalHash="14f66ffd0"><classId hash="2416563349"><name><name>org/jmxtrans/output/writers/utils/EvictingQueue</name></name></classId></id><coverageId>7081f20d</coverageId></classHistory>
<classHistory><id hierarchicalHash="2dc11af4"><classId hash="767630068"><name><name>org/jmxtrans/output/writers/support/BatchingOutputWriterTest</name></name></classId></id><coverageId>2dc11af4</coverageId></classHistory>
<classHistory><id hierarchicalHash="fb3bc6b5"><classId hash="4214998709"><name><name>org/jmxtrans/output/writers/support/TcpOutputWriterTest</name></name></classId></id><coverageId>fb3bc6b5</coverageId></classHistory>
<classHistory><id hierarchicalHash="e411973f"><classId hash="3826358079"><name><name>org/jmxtrans/output/writers/RollingFileOutputWriterTest</name></name></classId></id><coverageId>e411973f</coverageId></classHistory>
<classHistory><id hierarchicalHash="7aee64e5"><classId hash="1222798508"><name><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter$Factory</name></name></classId></id><coverageId>0</coverageId></classHistory>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/EvictingQueue</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(I)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.creating_zeroSize_evictingQueue_fails(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/EvictingQueue</name></clazz><method><name>add</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/EvictingQueue</name></clazz><method><name>add</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/EvictingQueue</name></clazz><method><name>addAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/EvictingQueue</name></clazz><method><name>addAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/EvictingQueue</name></clazz><method><name>addEvictingIfNeeded</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/EvictingQueue</name></clazz><method><name>addEvictingIfNeeded</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/EvictingQueue</name></clazz><method><name>addEvictingIfNeeded</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/EvictingQueue</name></clazz><method><name>addEvictingIfNeeded</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/EvictingQueue</name></clazz><method><name>addEvictingIfNeeded</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/EvictingQueue</name></clazz><method><name>addEvictingIfNeeded</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/EvictingQueue</name></clazz><method><name>addEvictingIfNeeded</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/EvictingQueue</name></clazz><method><name>addEvictingIfNeeded</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/EvictingQueue</name></clazz><method><name>addEvictingIfNeeded</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/EvictingQueue</name></clazz><method><name>addEvictingIfNeeded</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/EvictingQueue</name></clazz><method><name>addEvictingIfNeeded</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/EvictingQueue</name></clazz><method><name>create</name></method><methodDesc>(I)Lorg/jmxtrans/output/writers/utils/EvictingQueue;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.creating_zeroSize_evictingQueue_fails(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/EvictingQueue</name></clazz><method><name>create</name></method><methodDesc>(I)Lorg/jmxtrans/output/writers/utils/EvictingQueue;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/EvictingQueue</name></clazz><method><name>delegate</name></method><methodDesc>()Ljava/util/Queue;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>isEmpty</name></method><methodDesc>()Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>size</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>size</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>size</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>standardAddAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>standardAddAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>standardAddAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>standardAddAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>standardAddAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>standardAddAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>standardAddAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>standardAddAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>standardAddAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>standardAddAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>standardAddAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>standardAddAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>standardAddAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>standardAddAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingQueue</name></clazz><method><name>element</name></method><methodDesc>()Ljava/lang/Object;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingQueue</name></clazz><method><name>element</name></method><methodDesc>()Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingQueue</name></clazz><method><name>element</name></method><methodDesc>()Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingQueue</name></clazz><method><name>peek</name></method><methodDesc>()Ljava/lang/Object;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingQueue</name></clazz><method><name>peek</name></method><methodDesc>()Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingQueue</name></clazz><method><name>peek</name></method><methodDesc>()Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingQueue</name></clazz><method><name>poll</name></method><methodDesc>()Ljava/lang/Object;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingQueue</name></clazz><method><name>poll</name></method><methodDesc>()Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingQueue</name></clazz><method><name>poll</name></method><methodDesc>()Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.utils.EvictingQueueTest.testEvictingAfterThree(org.jmxtrans.output.writers.utils.EvictingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;JILjava/text/DateFormat;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;JILjava/text/DateFormat;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;JILjava/text/DateFormat;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;JILjava/text/DateFormat;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;JILjava/text/DateFormat;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;JILjava/text/DateFormat;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>appendToFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;JI)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>appendToFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;JI)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>appendToFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;JI)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>appendToFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;JI)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>appendToFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;JI)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>appendToFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;JI)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>appendToFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;JI)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>appendToFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;JI)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>appendToFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;JI)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>appendToFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;JI)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>appendToFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;JI)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>appendToFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;JI)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.RollingFileOutputWriterTest.cannotCopySmallFilesToDirectory2(org.jmxtrans.output.writers.RollingFileOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.RollingFileOutputWriterTest.cannotCopySmallFilesToDirectory2(org.jmxtrans.output.writers.RollingFileOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.RollingFileOutputWriterTest.copyToEmptyFile2(org.jmxtrans.output.writers.RollingFileOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.RollingFileOutputWriterTest.copyToEmptyFile2(org.jmxtrans.output.writers.RollingFileOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>346</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>368</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.RollingFileOutputWriterTest.copyToNonEmptyFile2(org.jmxtrans.output.writers.RollingFileOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.RollingFileOutputWriterTest.copyToEmptyFile2(org.jmxtrans.output.writers.RollingFileOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.RollingFileOutputWriterTest.cannotCopySmallFilesToDirectory2(org.jmxtrans.output.writers.RollingFileOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.RollingFileOutputWriterTest.copyToEmptyFile2(org.jmxtrans.output.writers.RollingFileOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>339</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.RollingFileOutputWriterTest.copyToEmptyFile2(org.jmxtrans.output.writers.RollingFileOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.RollingFileOutputWriterTest.cannotCopySmallFilesToDirectory2(org.jmxtrans.output.writers.RollingFileOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.RollingFileOutputWriterTest.cannotCopySmallFilesToDirectory2(org.jmxtrans.output.writers.RollingFileOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.RollingFileOutputWriterTest.cannotCopySmallFilesToDirectory2(org.jmxtrans.output.writers.RollingFileOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.RollingFileOutputWriterTest.cannotCopySmallFilesToDirectory2(org.jmxtrans.output.writers.RollingFileOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.RollingFileOutputWriterTest.cannotCopySmallFilesToDirectory2(org.jmxtrans.output.writers.RollingFileOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.RollingFileOutputWriterTest.cannotCopySmallFilesToDirectory2(org.jmxtrans.output.writers.RollingFileOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.RollingFileOutputWriterTest.copyToEmptyFile2(org.jmxtrans.output.writers.RollingFileOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.RollingFileOutputWriterTest.copyToEmptyFile2(org.jmxtrans.output.writers.RollingFileOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.RollingFileOutputWriterTest.copyToEmptyFile2(org.jmxtrans.output.writers.RollingFileOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.RollingFileOutputWriterTest.copyToEmptyFile2(org.jmxtrans.output.writers.RollingFileOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>335</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.RollingFileOutputWriterTest.copyToEmptyFile2(org.jmxtrans.output.writers.RollingFileOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>337</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.RollingFileOutputWriterTest.copyToEmptyFile2(org.jmxtrans.output.writers.RollingFileOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>348</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>350</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>352</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>354</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>355</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>357</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>359</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>361</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>363</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>364</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>366</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>367</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.RollingFileOutputWriterTest.cannotCopySmallFilesToDirectory2(org.jmxtrans.output.writers.RollingFileOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.RollingFileOutputWriterTest.cannotCopySmallFilesToDirectory2(org.jmxtrans.output.writers.RollingFileOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>339</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.RollingFileOutputWriterTest.copyToEmptyFile2(org.jmxtrans.output.writers.RollingFileOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>339</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.RollingFileOutputWriterTest.copyToEmptyFile2(org.jmxtrans.output.writers.RollingFileOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>postCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>postCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>postCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>postCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>postCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>postCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>postCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>postCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>postCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>postCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>postCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>postCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>postCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>postCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>postCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>postCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>replaceFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>replaceFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>replaceFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>replaceFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>replaceFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>replaceFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>replaceFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>replaceFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>replaceFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>replaceFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>replaceFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>replaceFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>replaceFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>replaceFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>replaceFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>replaceFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>rollFiles</name></method><methodDesc>(Ljava/io/File;I)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>rollFiles</name></method><methodDesc>(Ljava/io/File;I)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>rollFiles</name></method><methodDesc>(Ljava/io/File;I)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>rollFiles</name></method><methodDesc>(Ljava/io/File;I)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>rollFiles</name></method><methodDesc>(Ljava/io/File;I)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>rollFiles</name></method><methodDesc>(Ljava/io/File;I)V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>rollFiles</name></method><methodDesc>(Ljava/io/File;I)V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>rollFiles</name></method><methodDesc>(Ljava/io/File;I)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>rollFiles</name></method><methodDesc>(Ljava/io/File;I)V</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>rollFiles</name></method><methodDesc>(Ljava/io/File;I)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>rollFiles</name></method><methodDesc>(Ljava/io/File;I)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>rollFiles</name></method><methodDesc>(Ljava/io/File;I)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>rollFiles</name></method><methodDesc>(Ljava/io/File;I)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>rollFiles</name></method><methodDesc>(Ljava/io/File;I)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>rollFiles</name></method><methodDesc>(Ljava/io/File;I)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>rollFiles</name></method><methodDesc>(Ljava/io/File;I)V</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>rollFiles</name></method><methodDesc>(Ljava/io/File;I)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>rollFiles</name></method><methodDesc>(Ljava/io/File;I)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>rollFiles</name></method><methodDesc>(Ljava/io/File;I)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>rollFiles</name></method><methodDesc>(Ljava/io/File;I)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>rollFiles</name></method><methodDesc>(Ljava/io/File;I)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>rollFiles</name></method><methodDesc>(Ljava/io/File;I)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>rollFiles</name></method><methodDesc>(Ljava/io/File;I)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>rollFiles</name></method><methodDesc>(Ljava/io/File;I)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>rollFiles</name></method><methodDesc>(Ljava/io/File;I)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>rollFiles</name></method><methodDesc>(Ljava/io/File;I)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>rollFiles</name></method><methodDesc>(Ljava/io/File;I)V</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>rollFiles</name></method><methodDesc>(Ljava/io/File;I)V</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>rollFiles</name></method><methodDesc>(Ljava/io/File;I)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>rollFiles</name></method><methodDesc>(Ljava/io/File;I)V</methodDesc></location><indexes><int>96</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>rollFiles</name></method><methodDesc>(Ljava/io/File;I)V</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>rollFiles</name></method><methodDesc>(Ljava/io/File;I)V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>rollFiles</name></method><methodDesc>(Ljava/io/File;I)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>rollFiles</name></method><methodDesc>(Ljava/io/File;I)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>rollFiles</name></method><methodDesc>(Ljava/io/File;I)V</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>rollFiles</name></method><methodDesc>(Ljava/io/File;I)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>rollFiles</name></method><methodDesc>(Ljava/io/File;I)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>rollFiles</name></method><methodDesc>(Ljava/io/File;I)V</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>rollFiles</name></method><methodDesc>(Ljava/io/File;I)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>rollFiles</name></method><methodDesc>(Ljava/io/File;I)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>rollFiles</name></method><methodDesc>(Ljava/io/File;I)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>rollFiles</name></method><methodDesc>(Ljava/io/File;I)V</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>validateDestinationFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;JI)Z</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>validateDestinationFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;JI)Z</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>validateDestinationFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;JI)Z</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>validateDestinationFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;JI)Z</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>validateDestinationFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;JI)Z</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>validateDestinationFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;JI)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>validateDestinationFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;JI)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>validateDestinationFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;JI)Z</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>validateDestinationFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;JI)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>validateDestinationFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;JI)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>validateDestinationFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;JI)Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>validateDestinationFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;JI)Z</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>validateDestinationFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;JI)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>validateDestinationFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;JI)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>validateDestinationFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;JI)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>validateDestinationFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;JI)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>validateDestinationFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;JI)Z</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>validateDestinationFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;JI)Z</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>validateDestinationFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;JI)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>validateDestinationFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;JI)Z</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>validateDestinationFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;JI)Z</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>validateDestinationFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;JI)Z</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/core/output/OutputWriter;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="6" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testGetPreviousResult_returns_last_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/core/output/OutputWriter;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_60s_elapse(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/core/output/OutputWriter;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="9" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/core/output/OutputWriter;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_null_previous_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>getPreviousQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>getPreviousQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>getPreviousQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testGetPreviousResult_returns_last_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>getPreviousQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testGetPreviousResult_returns_2nd_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>getPreviousQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testGetPreviousResult_returns_last_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>getPreviousQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testGetPreviousResult_returns_last_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>getPreviousQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testGetPreviousResult_returns_2nd_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>getPreviousQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testGetPreviousResult_returns_last_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>getPreviousQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testGetPreviousResult_returns_last_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>getPreviousQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testGetPreviousResult_returns_last_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>getPreviousQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testGetPreviousResult_returns_last_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>getPreviousQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testGetPreviousResult_returns_last_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>getPreviousQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testGetPreviousResult_returns_last_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>getPreviousQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testGetPreviousResult_returns_2nd_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>getPreviousQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testGetPreviousResult_returns_last_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>getPreviousQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testGetPreviousResult_returns_last_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>getPreviousQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testGetPreviousResult_returns_last_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>getPreviousQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testGetPreviousResult_returns_last_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>getPreviousQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testGetPreviousResult_skip_decreasing_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>getPreviousQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testGetPreviousResult_returns_2nd_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>getPreviousQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testGetPreviousResult_returns_2nd_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>getPreviousQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>getPreviousQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testGetPreviousResult_returns_last_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>getPreviousQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testGetPreviousResult_returns_last_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>getPreviousQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testGetPreviousResult_returns_last_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>getPreviousQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testGetPreviousResult_skip_decreasing_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>getPreviousQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testGetPreviousResult_returns_last_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>getPreviousQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testGetPreviousResult_returns_last_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>getPreviousQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testGetPreviousResult_returns_last_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>getPreviousQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>getPreviousQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testGetPreviousResult_returns_last_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>115</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_null_previous_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_null_previous_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_null_previous_value(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_60s_elapse(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_ignore_previous_value_greater_than_current(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_ignore_previous_value_greater_than_current(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>161</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>180</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_60s_elapse(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>200</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>219</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>230</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>255</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_60s_elapse(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>323</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>346</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_60s_elapse(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>250</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_60s_elapse(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>254</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_20s_elapse(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_60s_elapse(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>160</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>179</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_60s_elapse(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>198</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>218</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_60s_elapse(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_60s_elapse(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_60s_elapse(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>115</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_60s_elapse(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>151</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>170</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_60s_elapse(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>189</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>209</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>265</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_60s_elapse(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>279</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_60s_elapse(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>293</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>307</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_60s_elapse(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_null_previous_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_null_previous_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_null_previous_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_null_previous_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_null_previous_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_60s_elapse(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_null_previous_value(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_null_previous_value(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>90</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_60s_elapse(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_60s_elapse(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_60s_elapse(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_60s_elapse(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>114</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_ignore_previous_value_greater_than_current(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>124</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_ignore_previous_value_greater_than_current(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>127</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_ignore_previous_value_greater_than_current(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_ignore_previous_value_greater_than_current(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>130</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>137</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_ignore_previous_value_greater_than_current(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_ignore_previous_value_greater_than_current(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>143</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>157</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>159</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>176</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_60s_elapse(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>178</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_60s_elapse(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>195</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>197</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>215</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>217</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>232</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>234</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>235</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>237</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>239</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>240</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>251</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_60s_elapse(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>256</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_60s_elapse(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>259</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_60s_elapse(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>269</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>270</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>283</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_60s_elapse(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>284</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_60s_elapse(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>297</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>298</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>311</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>312</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>325</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>327</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>328</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>340</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_60s_elapse(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>345</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_null_previous_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_null_previous_value(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>151</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>170</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_60s_elapse(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>189</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>209</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>265</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>279</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_60s_elapse(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>293</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>307</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_60s_elapse(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_60s_elapse(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_60s_elapse(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>151</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>170</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>189</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>209</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>265</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_60s_elapse(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>279</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>293</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>307</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>115</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_ignore_previous_value_greater_than_current(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>115</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_60s_elapse(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_null_previous_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_null_previous_value(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>145</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_ignore_previous_value_greater_than_current(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>245</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>333</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>347</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testPerMinute_60s_elapse(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>131</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>241</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>perMinute</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)Lorg/jmxtrans/core/results/QueryResult;</methodDesc></location><indexes><int>329</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>storeQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testGetPreviousResult_returns_last_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>storeQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>storeQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testGetPreviousResult_returns_last_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>storeQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testGetPreviousResult_returns_last_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>storeQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testGetPreviousResult_returns_last_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>storeQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testGetPreviousResult_returns_last_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>storeQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testGetPreviousResult_returns_last_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>storeQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testGetPreviousResult_returns_last_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>storeQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testGetPreviousResult_returns_last_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>storeQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>storeQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testGetPreviousResult_returns_last_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>storeQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testGetPreviousResult_returns_last_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>storeQueryResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testGetPreviousResult_returns_last_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/PerMinuteSummarizerOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>90</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;ZLjava/text/DateFormat;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;ZLjava/text/DateFormat;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;ZLjava/text/DateFormat;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;ZLjava/text/DateFormat;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;ZLjava/text/DateFormat;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;ZLjava/text/DateFormat;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;ZLjava/text/DateFormat;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;ZLjava/text/DateFormat;)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;ZLjava/text/DateFormat;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;ZLjava/text/DateFormat;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>getTemporaryFileWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>postCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>postCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>postCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>postCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>postCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>postCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>postCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>postCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>postCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>postCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>postCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>postCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>postCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>postCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>postCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>postCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>101</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>104</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>releaseTemporaryWriter</name></method><methodDesc>()V</methodDesc></location><indexes><int>105</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>104</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>writeQueryResult</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>writeQueryResult</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>writeQueryResult</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>writeQueryResult</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>writeQueryResult</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>writeQueryResult</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>writeQueryResult</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>writeQueryResult</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>writeQueryResult</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>writeQueryResult</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>writeQueryResult</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>writeQueryResult</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>writeQueryResult</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>writeQueryResult</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>writeQueryResult</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>writeQueryResult</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>writeQueryResult</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>writeQueryResult</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>writeQueryResult</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>writeQueryResult</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>writeQueryResult</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>writeQueryResult</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>writeQueryResult</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>writeQueryResult</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>writeQueryResult</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>writeQueryResult</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter</name></clazz><method><name>writeQueryResult</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;ILjava/net/InetSocketAddress;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;ILjava/net/InetSocketAddress;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;ILjava/net/InetSocketAddress;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;ILjava/net/InetSocketAddress;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;ILjava/net/InetSocketAddress;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;ILjava/net/InetSocketAddress;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;ILjava/net/InetSocketAddress;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;ILjava/net/InetSocketAddress;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;ILjava/net/InetSocketAddress;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;ILjava/net/InetSocketAddress;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;ILjava/net/InetSocketAddress;)V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;ILjava/net/InetSocketAddress;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;ILjava/net/InetSocketAddress;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>buildMetricPathPrefix</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>buildMetricPathPrefix</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>buildMetricPathPrefix</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>buildMetricPathPrefix</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>buildMetricPathPrefix</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>buildMetricPathPrefix</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>buildMetricPathPrefix</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>buildMetricPathPrefix</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>buildMetricPathPrefix</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>buildMetricPathPrefix</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>buildMetricPathPrefix</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>buildMetricPathPrefix</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>buildMetricPathPrefix</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>90</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>124</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>114</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>96</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>114</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>114</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>ensureGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>releaseGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>releaseGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>releaseGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>releaseGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>releaseGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>releaseGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>releaseGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>releaseGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>releaseGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>releaseGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>releaseGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>releaseGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>releaseGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>releaseGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>releaseGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>releaseGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>releaseGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>releaseGraphiteConnection</name></method><methodDesc>()V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/net/InetSocketAddress;ILjava/nio/charset/Charset;Lorg/jmxtrans/output/writers/support/WriterBasedOutputWriter;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.TcpOutputWriterTest.test(org.jmxtrans.output.writers.support.TcpOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/net/InetSocketAddress;ILjava/nio/charset/Charset;Lorg/jmxtrans/output/writers/support/WriterBasedOutputWriter;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.TcpOutputWriterTest.test(org.jmxtrans.output.writers.support.TcpOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>afterBatch</name></method><methodDesc>()V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>connectToServer</name></method><methodDesc>()V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.TcpOutputWriterTest.test(org.jmxtrans.output.writers.support.TcpOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>connectToServer</name></method><methodDesc>()V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.TcpOutputWriterTest.test(org.jmxtrans.output.writers.support.TcpOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>connectToServer</name></method><methodDesc>()V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.TcpOutputWriterTest.test(org.jmxtrans.output.writers.support.TcpOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>connectToServer</name></method><methodDesc>()V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.TcpOutputWriterTest.test(org.jmxtrans.output.writers.support.TcpOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>connectToServer</name></method><methodDesc>()V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>connectToServer</name></method><methodDesc>()V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.TcpOutputWriterTest.test(org.jmxtrans.output.writers.support.TcpOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>connectToServer</name></method><methodDesc>()V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.TcpOutputWriterTest.test(org.jmxtrans.output.writers.support.TcpOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>connectToServer</name></method><methodDesc>()V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.TcpOutputWriterTest.test(org.jmxtrans.output.writers.support.TcpOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>connectToServer</name></method><methodDesc>()V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>connectToServer</name></method><methodDesc>()V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.TcpOutputWriterTest.test(org.jmxtrans.output.writers.support.TcpOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>connectToServer</name></method><methodDesc>()V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.TcpOutputWriterTest.test(org.jmxtrans.output.writers.support.TcpOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>connectionHealthy</name></method><methodDesc>()Z</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>connectionHealthy</name></method><methodDesc>()Z</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.TcpOutputWriterTest.test(org.jmxtrans.output.writers.support.TcpOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>connectionHealthy</name></method><methodDesc>()Z</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>connectionHealthy</name></method><methodDesc>()Z</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>connectionHealthy</name></method><methodDesc>()Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>connectionHealthy</name></method><methodDesc>()Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>connectionHealthy</name></method><methodDesc>()Z</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>connectionHealthy</name></method><methodDesc>()Z</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>connectionHealthy</name></method><methodDesc>()Z</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>connectionHealthy</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>connectionHealthy</name></method><methodDesc>()Z</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>connectionHealthy</name></method><methodDesc>()Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>connectionHealthy</name></method><methodDesc>()Z</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>connectionHealthy</name></method><methodDesc>()Z</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>connectionHealthy</name></method><methodDesc>()Z</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>connectionHealthy</name></method><methodDesc>()Z</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>connectionHealthy</name></method><methodDesc>()Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>connectionHealthy</name></method><methodDesc>()Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>connectionHealthy</name></method><methodDesc>()Z</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>connectionHealthy</name></method><methodDesc>()Z</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>connectionHealthy</name></method><methodDesc>()Z</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>connectionHealthy</name></method><methodDesc>()Z</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>connectionHealthy</name></method><methodDesc>()Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>connectionHealthy</name></method><methodDesc>()Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>connectionHealthy</name></method><methodDesc>()Z</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>connectionHealthy</name></method><methodDesc>()Z</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>connectionHealthy</name></method><methodDesc>()Z</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>connectionHealthy</name></method><methodDesc>()Z</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.TcpOutputWriterTest.test(org.jmxtrans.output.writers.support.TcpOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>connectionHealthy</name></method><methodDesc>()Z</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>ensureConnected</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.TcpOutputWriterTest.test(org.jmxtrans.output.writers.support.TcpOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>ensureConnected</name></method><methodDesc>()V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>ensureConnected</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.TcpOutputWriterTest.test(org.jmxtrans.output.writers.support.TcpOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>ensureConnected</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>ensureConnected</name></method><methodDesc>()V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>ensureConnected</name></method><methodDesc>()V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.TcpOutputWriterTest.test(org.jmxtrans.output.writers.support.TcpOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>getWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>getWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.TcpOutputWriterTest.test(org.jmxtrans.output.writers.support.TcpOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>getWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.TcpOutputWriterTest.test(org.jmxtrans.output.writers.support.TcpOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>getWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>getWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.TcpOutputWriterTest.test(org.jmxtrans.output.writers.support.TcpOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>getWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.TcpOutputWriterTest.test(org.jmxtrans.output.writers.support.TcpOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>getWriter</name></method><methodDesc>()Ljava/io/Writer;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.TcpOutputWriterTest.test(org.jmxtrans.output.writers.support.TcpOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>releaseSocket</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>releaseSocket</name></method><methodDesc>()V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>releaseSocket</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>releaseSocket</name></method><methodDesc>()V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.TcpOutputWriterTest.test(org.jmxtrans.output.writers.support.TcpOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/TcpOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>add</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>add</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>add</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>addAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>addAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>addAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>clear</name></method><methodDesc>()V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>clear</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>contains</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>contains</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>contains</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>containsAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>containsAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>containsAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>isEmpty</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>isEmpty</name></method><methodDesc>()Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>iterator</name></method><methodDesc>()Ljava/util/Iterator;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testGetPreviousResult_returns_last_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>iterator</name></method><methodDesc>()Ljava/util/Iterator;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testGetPreviousResult_returns_last_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>iterator</name></method><methodDesc>()Ljava/util/Iterator;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest.testGetPreviousResult_returns_last_result(org.jmxtrans.output.writers.PerMinuteSummarizerOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>remove</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>remove</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>remove</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>removeAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>removeAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>removeAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>retainAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>retainAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>retainAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>standardAddAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>standardAddAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>standardAddAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>toArray</name></method><methodDesc>()[Ljava/lang/Object;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>toArray</name></method><methodDesc>()[Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>toArray</name></method><methodDesc>()[Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>toArray</name></method><methodDesc>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>toArray</name></method><methodDesc>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>toArray</name></method><methodDesc>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingCollection</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/BatchingOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(ILorg/jmxtrans/output/writers/support/BatchedOutputWriter;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.BatchingOutputWriterTest.resultsAreProcessedInOrder(org.jmxtrans.output.writers.support.BatchingOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/BatchingOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(ILorg/jmxtrans/output/writers/support/BatchedOutputWriter;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.BatchingOutputWriterTest.resultsAreNotWrittenWhenBatchSizeIsNotReached(org.jmxtrans.output.writers.support.BatchingOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/BatchingOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(ILorg/jmxtrans/output/writers/support/BatchedOutputWriter;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.BatchingOutputWriterTest.resultsAreNotWrittenWhenBatchSizeIsNotReached(org.jmxtrans.output.writers.support.BatchingOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/BatchingOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(ILorg/jmxtrans/output/writers/support/BatchedOutputWriter;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/BatchingOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(ILorg/jmxtrans/output/writers/support/BatchedOutputWriter;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/BatchingOutputWriter</name></clazz><method><name>enqueueAndGetBatch</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)Ljava/util/List;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.BatchingOutputWriterTest.resultsAreProcessedInOrder(org.jmxtrans.output.writers.support.BatchingOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/BatchingOutputWriter</name></clazz><method><name>enqueueAndGetBatch</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)Ljava/util/List;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.BatchingOutputWriterTest.resultsAreNotWrittenWhenBatchSizeIsNotReached(org.jmxtrans.output.writers.support.BatchingOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/BatchingOutputWriter</name></clazz><method><name>enqueueAndGetBatch</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.BatchingOutputWriterTest.resultsAreNotWrittenWhenBatchSizeIsNotReached(org.jmxtrans.output.writers.support.BatchingOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/BatchingOutputWriter</name></clazz><method><name>enqueueAndGetBatch</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)Ljava/util/List;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.BatchingOutputWriterTest.resultsAreProcessedInOrder(org.jmxtrans.output.writers.support.BatchingOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/BatchingOutputWriter</name></clazz><method><name>enqueueAndGetBatch</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)Ljava/util/List;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/BatchingOutputWriter</name></clazz><method><name>enqueueAndGetBatch</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)Ljava/util/List;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.BatchingOutputWriterTest.resultsAreNotWrittenWhenBatchSizeIsNotReached(org.jmxtrans.output.writers.support.BatchingOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/BatchingOutputWriter</name></clazz><method><name>enqueueAndGetBatch</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)Ljava/util/List;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.BatchingOutputWriterTest.resultsAreProcessedInOrder(org.jmxtrans.output.writers.support.BatchingOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/BatchingOutputWriter</name></clazz><method><name>enqueueAndGetBatch</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)Ljava/util/List;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.BatchingOutputWriterTest.resultsAreNotWrittenWhenBatchSizeIsNotReached(org.jmxtrans.output.writers.support.BatchingOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/BatchingOutputWriter</name></clazz><method><name>enqueueAndGetBatch</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)Ljava/util/List;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.BatchingOutputWriterTest.resultsAreProcessedInOrder(org.jmxtrans.output.writers.support.BatchingOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/BatchingOutputWriter</name></clazz><method><name>enqueueAndGetBatch</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)Ljava/util/List;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.BatchingOutputWriterTest.resultsAreNotWrittenWhenBatchSizeIsNotReached(org.jmxtrans.output.writers.support.BatchingOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/BatchingOutputWriter</name></clazz><method><name>processBatch</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/BatchingOutputWriter</name></clazz><method><name>processBatch</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/BatchingOutputWriter</name></clazz><method><name>processBatch</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/BatchingOutputWriter</name></clazz><method><name>processBatch</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.BatchingOutputWriterTest.resultsAreProcessedInOrder(org.jmxtrans.output.writers.support.BatchingOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/BatchingOutputWriter</name></clazz><method><name>processBatch</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.BatchingOutputWriterTest.resultsAreProcessedInOrder(org.jmxtrans.output.writers.support.BatchingOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/BatchingOutputWriter</name></clazz><method><name>processBatch</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.BatchingOutputWriterTest.resultsAreProcessedInOrder(org.jmxtrans.output.writers.support.BatchingOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/BatchingOutputWriter</name></clazz><method><name>processBatch</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/BatchingOutputWriter</name></clazz><method><name>processBatch</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/BatchingOutputWriter</name></clazz><method><name>processBatch</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.BatchingOutputWriterTest.resultsAreProcessedInOrder(org.jmxtrans.output.writers.support.BatchingOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/BatchingOutputWriter</name></clazz><method><name>processBatch</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.BatchingOutputWriterTest.resultsAreProcessedInOrder(org.jmxtrans.output.writers.support.BatchingOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/BatchingOutputWriter</name></clazz><method><name>processBatch</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.BatchingOutputWriterTest.beforeAndAfterBatchAreCalledInOrder(org.jmxtrans.output.writers.support.BatchingOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/BatchingOutputWriter</name></clazz><method><name>processBatch</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.BatchingOutputWriterTest.resultsAreProcessedInOrder(org.jmxtrans.output.writers.support.BatchingOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/BatchingOutputWriter</name></clazz><method><name>processBatch</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.BatchingOutputWriterTest.resultsAreProcessedInOrder(org.jmxtrans.output.writers.support.BatchingOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/BatchingOutputWriter</name></clazz><method><name>processBatch</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/BatchingOutputWriter</name></clazz><method><name>processBatch</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>67</int><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.BatchingOutputWriterTest.beforeAndAfterBatchAreCalledInOrder(org.jmxtrans.output.writers.support.BatchingOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/BatchingOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.BatchingOutputWriterTest.resultsAreNotWrittenWhenBatchSizeIsNotReached(org.jmxtrans.output.writers.support.BatchingOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/BatchingOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.BatchingOutputWriterTest.resultsAreNotWrittenWhenBatchSizeIsNotReached(org.jmxtrans.output.writers.support.BatchingOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/BatchingOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.BatchingOutputWriterTest.resultsAreNotWrittenWhenBatchSizeIsNotReached(org.jmxtrans.output.writers.support.BatchingOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/BatchingOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.BatchingOutputWriterTest.resultsAreProcessedInOrder(org.jmxtrans.output.writers.support.BatchingOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/BatchingOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.BatchingOutputWriterTest.resultsAreNotWrittenWhenBatchSizeIsNotReached(org.jmxtrans.output.writers.support.BatchingOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/support/BatchingOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.support.BatchingOutputWriterTest.resultsAreProcessedInOrder(org.jmxtrans.output.writers.support.BatchingOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphiteOutputWriter</name></clazz><method><name>buildMetricPathPrefix</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.GraphiteOutputWriterTest.metricsSendToGraphiteFollowCorrectFormat(org.jmxtrans.output.writers.GraphiteOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphiteOutputWriter</name></clazz><method><name>buildMetricPathPrefix</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.GraphiteOutputWriterTest.metricsSendToGraphiteFollowCorrectFormat(org.jmxtrans.output.writers.GraphiteOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphiteOutputWriter</name></clazz><method><name>buildMetricPathPrefix</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.GraphiteOutputWriterTest.metricsSendToGraphiteFollowCorrectFormat(org.jmxtrans.output.writers.GraphiteOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphiteOutputWriter</name></clazz><method><name>buildMetricPathPrefix</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphiteOutputWriter</name></clazz><method><name>buildMetricPathPrefix</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.GraphiteOutputWriterTest.metricsSendToGraphiteFollowCorrectFormat(org.jmxtrans.output.writers.GraphiteOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphiteOutputWriter</name></clazz><method><name>buildMetricPathPrefix</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.GraphiteOutputWriterTest.metricsSendToGraphiteFollowCorrectFormat(org.jmxtrans.output.writers.GraphiteOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphiteOutputWriter</name></clazz><method><name>buildMetricPathPrefix</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.GraphiteOutputWriterTest.metricsSendToGraphiteFollowCorrectFormat(org.jmxtrans.output.writers.GraphiteOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphiteOutputWriter</name></clazz><method><name>buildMetricPathPrefix</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphiteOutputWriter</name></clazz><method><name>buildMetricPathPrefix</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.GraphiteOutputWriterTest.metricsSendToGraphiteFollowCorrectFormat(org.jmxtrans.output.writers.GraphiteOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphiteOutputWriter</name></clazz><method><name>buildMetricPathPrefix</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphiteOutputWriter</name></clazz><method><name>buildMetricPathPrefix</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.GraphiteOutputWriterTest.metricsSendToGraphiteFollowCorrectFormat(org.jmxtrans.output.writers.GraphiteOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphiteOutputWriter</name></clazz><method><name>getHostname</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.GraphiteOutputWriterTest.metricsSendToGraphiteFollowCorrectFormat(org.jmxtrans.output.writers.GraphiteOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphiteOutputWriter</name></clazz><method><name>getHostname</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.GraphiteOutputWriterTest.metricsSendToGraphiteFollowCorrectFormat(org.jmxtrans.output.writers.GraphiteOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphiteOutputWriter</name></clazz><method><name>getHostname</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphiteOutputWriter</name></clazz><method><name>getHostname</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphiteOutputWriter</name></clazz><method><name>getHostname</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphiteOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Ljava/io/Writer;Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.GraphiteOutputWriterTest.metricsSendToGraphiteFollowCorrectFormat(org.jmxtrans.output.writers.GraphiteOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphiteOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Ljava/io/Writer;Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.GraphiteOutputWriterTest.metricsSendToGraphiteFollowCorrectFormat(org.jmxtrans.output.writers.GraphiteOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphiteOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Ljava/io/Writer;Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.GraphiteOutputWriterTest.metricsSendToGraphiteFollowCorrectFormat(org.jmxtrans.output.writers.GraphiteOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphiteOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Ljava/io/Writer;Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.GraphiteOutputWriterTest.metricsSendToGraphiteFollowCorrectFormat(org.jmxtrans.output.writers.GraphiteOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphiteOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Ljava/io/Writer;Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.GraphiteOutputWriterTest.metricsSendToGraphiteFollowCorrectFormat(org.jmxtrans.output.writers.GraphiteOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphiteOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Ljava/io/Writer;Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.GraphiteOutputWriterTest.metricsSendToGraphiteFollowCorrectFormat(org.jmxtrans.output.writers.GraphiteOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphiteOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Ljava/io/Writer;Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.GraphiteOutputWriterTest.metricsSendToGraphiteFollowCorrectFormat(org.jmxtrans.output.writers.GraphiteOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphiteOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Ljava/io/Writer;Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.GraphiteOutputWriterTest.metricsSendToGraphiteFollowCorrectFormat(org.jmxtrans.output.writers.GraphiteOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphiteOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Ljava/io/Writer;Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.GraphiteOutputWriterTest.metricsSendToGraphiteFollowCorrectFormat(org.jmxtrans.output.writers.GraphiteOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphiteOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Ljava/io/Writer;Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.GraphiteOutputWriterTest.metricsSendToGraphiteFollowCorrectFormat(org.jmxtrans.output.writers.GraphiteOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphiteOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Ljava/io/Writer;Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.GraphiteOutputWriterTest.metricsSendToGraphiteFollowCorrectFormat(org.jmxtrans.output.writers.GraphiteOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphiteOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Ljava/io/Writer;Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.GraphiteOutputWriterTest.metricsSendToGraphiteFollowCorrectFormat(org.jmxtrans.output.writers.GraphiteOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphiteOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Ljava/io/Writer;Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.writers.GraphiteOutputWriterTest.metricsSendToGraphiteFollowCorrectFormat(org.jmxtrans.output.writers.GraphiteOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/RollingFileOutputWriter;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/RollingFileOutputWriter;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/RollingFileOutputWriter;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/RollingFileOutputWriter;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/RollingFileOutputWriter;</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/RollingFileOutputWriter;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/RollingFileOutputWriter;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/RollingFileOutputWriter;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/RollingFileOutputWriter;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/RollingFileOutputWriter;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/RollingFileOutputWriter;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/RollingFileOutputWriter;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/RollingFileOutputWriter;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/RollingFileOutputWriter;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/RollingFileOutputWriter;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/RollingFileOutputWriter;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/RollingFileOutputWriter;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/RollingFileOutputWriter;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/RollingFileOutputWriter;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/RollingFileOutputWriter;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/RollingFileOutputWriter;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/RollingFileOutputWriter;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/RollingFileOutputWriter;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/RollingFileOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/RollingFileOutputWriter;</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/ConsoleOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/ConsoleOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/ConsoleOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/ConsoleOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/ConsoleOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/ConsoleOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/ConsoleOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/ConsoleOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/ConsoleOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/ConsoleOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/ConsoleOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/ConsoleOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphiteOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/support/BatchingOutputWriter;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphiteOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/support/BatchingOutputWriter;</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphiteOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/support/BatchingOutputWriter;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphiteOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/support/BatchingOutputWriter;</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphiteOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/support/BatchingOutputWriter;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphiteOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/support/BatchingOutputWriter;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphiteOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/support/BatchingOutputWriter;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphiteOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/support/BatchingOutputWriter;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphiteOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/support/BatchingOutputWriter;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphiteOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/support/BatchingOutputWriter;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphiteOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/support/BatchingOutputWriter;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphiteOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/support/BatchingOutputWriter;</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingQueue</name></clazz><method><name>add</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingQueue</name></clazz><method><name>add</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingQueue</name></clazz><method><name>add</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingQueue</name></clazz><method><name>offer</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingQueue</name></clazz><method><name>offer</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingQueue</name></clazz><method><name>offer</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingQueue</name></clazz><method><name>remove</name></method><methodDesc>()Ljava/lang/Object;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingQueue</name></clazz><method><name>remove</name></method><methodDesc>()Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/ForwardingQueue</name></clazz><method><name>remove</name></method><methodDesc>()Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/EvictingQueue</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(I)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="7" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/EvictingQueue</name></clazz><method><name>addEvictingIfNeeded</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="5" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/EvictingQueue</name></clazz><method><name>addEvictingIfNeeded</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="5" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/EvictingQueue</name></clazz><method><name>addEvictingIfNeeded</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="5" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/EvictingQueue</name></clazz><method><name>addEvictingIfNeeded</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/EvictingQueue</name></clazz><method><name>addEvictingIfNeeded</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="5" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/EvictingQueue</name></clazz><method><name>addEvictingIfNeeded</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/EvictingQueue</name></clazz><method><name>offer</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/utils/EvictingQueue</name></clazz><method><name>offer</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/FileOverwriterOutputWriter;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/FileOverwriterOutputWriter;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/FileOverwriterOutputWriter;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/FileOverwriterOutputWriter;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/FileOverwriterOutputWriter;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/FileOverwriterOutputWriter;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/FileOverwriterOutputWriter;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/FileOverwriterOutputWriter;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/FileOverwriterOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/FileOverwriterOutputWriter;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/GraphitePlainTextTcpOutputWriter;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/SummarizingFileOverwriterOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/SummarizingFileOverwriterOutputWriter;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/SummarizingFileOverwriterOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/SummarizingFileOverwriterOutputWriter;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/SummarizingFileOverwriterOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/SummarizingFileOverwriterOutputWriter;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/SummarizingFileOverwriterOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/SummarizingFileOverwriterOutputWriter;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/ConsoleOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/ConsoleOutputWriter;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/ConsoleOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/ConsoleOutputWriter;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/SummarizingConsoleOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/SummarizingConsoleOutputWriter;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/SummarizingConsoleOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/writers/SummarizingConsoleOutputWriter;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/writers/SummarizingConsoleOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
