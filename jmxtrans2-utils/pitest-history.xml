26
<classHistory><id hierarchicalHash="ea36fda8"><classId hash="3929472424"><name><name>org/jmxtrans/utils/net/SocketWriterTest</name></name></classId></id><coverageId>ea36fda8</coverageId></classHistory>
<classHistory><id hierarchicalHash="8fb3e0d1"><classId hash="2410930385"><name><name>org/jmxtrans/utils/collections/ArrayUtils</name></name></classId></id><coverageId>252e8e9f</coverageId></classHistory>
<classHistory><id hierarchicalHash="a04dd409"><classId hash="2689455113"><name><name>org/jmxtrans/utils/collections/Iterables2Test</name></name></classId></id><coverageId>a04dd409</coverageId></classHistory>
<classHistory><id hierarchicalHash="35ea1c6d"><classId hash="904535149"><name><name>org/jmxtrans/utils/ConfigurationUtils</name></name></classId></id><coverageId>5546788d</coverageId></classHistory>
<classHistory><id hierarchicalHash="cbfc3c00"><classId hash="3422305280"><name><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueueMBean</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="bdc2e0f0"><classId hash="3183665392"><name><name>org/jmxtrans/utils/jmx/JmxUtils2</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="9c1daa3"><classId hash="163699363"><name><name>org/jmxtrans/utils/PropertyPlaceholderResolverTest</name></name></classId></id><coverageId>9c1daa3</coverageId></classHistory>
<classHistory><id hierarchicalHash="7cff5ae"><classId hash="131069358"><name><name>org/jmxtrans/utils/net/SocketOutputStream</name></name></classId></id><coverageId>93e09aad</coverageId></classHistory>
<classHistory><id hierarchicalHash="43a4ee76"><classId hash="1134882422"><name><name>org/jmxtrans/utils/io/NullOutputStreamTest</name></name></classId></id><coverageId>43a4ee76</coverageId></classHistory>
<classHistory><id hierarchicalHash="9ff5648"><classId hash="167728712"><name><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></name></classId></id><coverageId>9c1daa3</coverageId></classHistory>
<classHistory><id hierarchicalHash="58de9ab2"><classId hash="1490983602"><name><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueueTest</name></name></classId></id><coverageId>58de9ab2</coverageId></classHistory>
<classHistory><id hierarchicalHash="e746ca6a"><classId hash="3880176234"><name><name>org/jmxtrans/utils/concurrent/NamedThreadFactoryTest</name></name></classId></id><coverageId>e746ca6a</coverageId></classHistory>
<classHistory><id hierarchicalHash="a5c90bf"><classId hash="173838527"><name><name>org/jmxtrans/utils/StringUtils2Test</name></name></classId></id><coverageId>a5c90bf</coverageId></classHistory>
<classHistory><id hierarchicalHash="aa8a24ee"><classId hash="2861180142"><name><name>org/jmxtrans/utils/Preconditions2</name></name></classId></id><coverageId>9f33a5d4</coverageId></classHistory>
<classHistory><id hierarchicalHash="15a52aa2"><classId hash="363145890"><name><name>org/jmxtrans/utils/net/SocketWriter</name></name></classId></id><coverageId>ea36fda8</coverageId></classHistory>
<classHistory><id hierarchicalHash="7929a544"><classId hash="2032772420"><name><name>org/jmxtrans/utils/io/IoUtilsTest</name></name></classId></id><coverageId>7929a544</coverageId></classHistory>
<classHistory><id hierarchicalHash="c866d82e"><classId hash="3362183214"><name><name>org/jmxtrans/utils/collections/Iterables2</name></name></classId></id><coverageId>a04dd409</coverageId></classHistory>
<classHistory><id hierarchicalHash="d8ad595f"><classId hash="3635239263"><name><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></name></classId></id><coverageId>58de9ab2</coverageId></classHistory>
<classHistory><id hierarchicalHash="9f33a5d4"><classId hash="2670962132"><name><name>org/jmxtrans/utils/Preconditions2Test</name></name></classId></id><coverageId>9f33a5d4</coverageId></classHistory>
<classHistory><id hierarchicalHash="93e09aad"><classId hash="2480970413"><name><name>org/jmxtrans/utils/net/SocketOutputStreamTest</name></name></classId></id><coverageId>93e09aad</coverageId></classHistory>
<classHistory><id hierarchicalHash="5546788d"><classId hash="1430681741"><name><name>org/jmxtrans/utils/ConfigurationUtilsTest</name></name></classId></id><coverageId>5546788d</coverageId></classHistory>
<classHistory><id hierarchicalHash="252e8e9f"><classId hash="623808159"><name><name>org/jmxtrans/utils/collections/ArrayUtilsTest</name></name></classId></id><coverageId>252e8e9f</coverageId></classHistory>
<classHistory><id hierarchicalHash="bea25e0c"><classId hash="3198311948"><name><name>org/jmxtrans/utils/io/NullOutputStream</name></name></classId></id><coverageId>43a4ee76</coverageId></classHistory>
<classHistory><id hierarchicalHash="eb7f4bf8"><classId hash="3950988280"><name><name>org/jmxtrans/utils/StringUtils2</name></name></classId></id><coverageId>a5c90bf</coverageId></classHistory>
<classHistory><id hierarchicalHash="c978afa7"><classId hash="3380129703"><name><name>org/jmxtrans/utils/io/IoUtils</name></name></classId></id><coverageId>7929a544</coverageId></classHistory>
<classHistory><id hierarchicalHash="a662808c"><classId hash="2791473292"><name><name>org/jmxtrans/utils/concurrent/NamedThreadFactory</name></name></classId></id><coverageId>e746ca6a</coverageId></classHistory>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getBoolean</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Z)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.validBooleanWithDefaultValueIsParsed(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getBoolean</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Z)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.validBooleanWithDefaultValueIsParsed(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getBoolean</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Z)Z</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.validBooleanWithDefaultValueIsParsed(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getBoolean</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Z)Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.validBooleanWithDefaultValueIsParsed(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getBoolean</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Z)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.validBooleanWithDefaultValueIsParsed(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getBoolean</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Z)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.nonExistingBooleanReturnsDefaultValue(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getBoolean</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Z)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.validBooleanWithDefaultValueIsParsed(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getBoolean</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Z)Z</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.nonExistingBooleanReturnsDefaultValue(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)I</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)I</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.validIntegerIsParsed(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)I</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.validIntegerIsParsed(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)I</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)I</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)I</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)I</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)I</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)I</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)I</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)I</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.validIntegerIsParsed(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.validIntegerWithDefaultValueIsParsed(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.nonExistingIntegerReturnsDefaultValue(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.validIntegerWithDefaultValueIsParsed(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.nonExistingIntegerReturnsDefaultValue(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getLong</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;J)J</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidLongWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getLong</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;J)J</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidLongWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getLong</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;J)J</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidLongWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getLong</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;J)J</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidLongWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getLong</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;J)J</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.validLongWithDefaultValueIsParsed(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getLong</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;J)J</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidLongWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getLong</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;J)J</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidLongWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getLong</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;J)J</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidLongWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getLong</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;J)J</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidLongWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getLong</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;J)J</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidLongWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getLong</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;J)J</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidLongWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getLong</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;J)J</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidLongWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getLong</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;J)J</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidLongWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getLong</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;J)J</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidLongWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getLong</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;J)J</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.nonExistingLongReturnsDefaultValue(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getLong</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;J)J</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.validLongWithDefaultValueIsParsed(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getLong</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;J)J</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.nonExistingLongReturnsDefaultValue(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getString</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.nonExistingIntegerThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getString</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.nonExistingIntegerThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getString</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.validIntegerIsParsed(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getString</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.validIntegerIsParsed(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getString</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.nonExistingIntegerThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getString</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.nonExistingIntegerThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getString</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.nonExistingIntegerThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getString</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.nonExistingIntegerThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getString</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.validIntegerIsParsed(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getString</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.nonExistingIntegerThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getString</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.validIntegerIsParsed(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getString</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.validIntegerIsParsed(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getString</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.existingStringWithDefaultValueIsFound(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getString</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.existingStringWithDefaultValueIsFound(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getString</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.existingStringWithDefaultValueIsFound(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getString</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.existingStringWithDefaultValueIsFound(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getString</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.nonExistingStringWithDefaultValueReturnsDefaultValue(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getString</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.existingStringWithDefaultValueIsFound(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getString</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.nonExistingStringWithDefaultValueReturnsDefaultValue(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkArgument</name></method><methodDesc>(Z)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.Preconditions2Test.checkArgumentThrowsExceptionOnFalse(org.jmxtrans.utils.Preconditions2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkArgument</name></method><methodDesc>(Z)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.Preconditions2Test.checkArgumentThrowsExceptionOnFalse(org.jmxtrans.utils.Preconditions2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkArgument</name></method><methodDesc>(Z)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.Preconditions2Test.checkArgumentThrowsExceptionOnFalse(org.jmxtrans.utils.Preconditions2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkArgument</name></method><methodDesc>(Z)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.Preconditions2Test.checkArgumentDoesNotThrowExceptionOnTrue(org.jmxtrans.utils.Preconditions2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkArgument</name></method><methodDesc>(ZLjava/lang/String;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.Preconditions2Test.checkArgumentPublishMessageInException(org.jmxtrans.utils.Preconditions2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkArgument</name></method><methodDesc>(ZLjava/lang/String;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.Preconditions2Test.checkArgumentPublishMessageInException(org.jmxtrans.utils.Preconditions2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkArgument</name></method><methodDesc>(ZLjava/lang/String;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.Preconditions2Test.checkArgumentPublishMessageInException(org.jmxtrans.utils.Preconditions2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkArgument</name></method><methodDesc>(ZLjava/lang/String;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkNotEmpty</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkNotEmpty</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.Preconditions2Test.checkNotEmptyThrowsExceptionOnEmptyArgument(org.jmxtrans.utils.Preconditions2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkNotEmpty</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.Preconditions2Test.checkNotEmptyThrowsExceptionOnEmptyArgument(org.jmxtrans.utils.Preconditions2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkNotEmpty</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.Preconditions2Test.checkNotEmptyThrowsExceptionOnEmptyArgument(org.jmxtrans.utils.Preconditions2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkNotEmpty</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.Preconditions2Test.checkNotEmptyThrowsExceptionOnEmptyArgument(org.jmxtrans.utils.Preconditions2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkNotEmpty</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkNotEmpty</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.Preconditions2Test.checkNotEmptyThrowsExceptionOnEmptyArgument(org.jmxtrans.utils.Preconditions2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkNotEmpty</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.Preconditions2Test.checkNotEmptyThrowsExceptionOnEmptyArgument(org.jmxtrans.utils.Preconditions2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkNotEmpty</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.Preconditions2Test.checkNotEmptyReturnGivenArgument(org.jmxtrans.utils.Preconditions2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkNotEmpty</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.Preconditions2Test.checkNotEmptyReturnGivenArgument(org.jmxtrans.utils.Preconditions2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>145</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>130</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>109</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>131</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>102</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>141</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveComplexStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>154</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>155</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.nonAlphaNumericCharacters(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.nonAlphaNumericCharacters(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.dotIsNotEscaped(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.nonAlphaNumericCharacters(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.dotIsNotEscaped(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.dotIsNotEscaped(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.nonAlphaNumericCharacters(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.dotIsNotEscaped(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.dotIsNotEscaped(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>delimitedStringToList</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testDelimitedStringToList(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>delimitedStringToList</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testDelimitedStringToList(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>delimitedStringToList</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testDelimitedStringToList(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>delimitedStringToList</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testDelimitedStringToList(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>delimitedStringToList</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testDelimitedStringToList(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>delimitedStringToList</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testDelimitedStringToList(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>delimitedStringToList</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testDelimitedStringToList(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>delimitedStringToList</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testDelimitedStringToList(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>delimitedStringToList</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testDelimitedStringToList(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>delimitedStringToList</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>delimitedStringToList</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testDelimitedStringToList(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>delimitedStringToList</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.delimitedStringToListReturnsNullWhenArgumentIsNull(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>delimitedStringToList</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testDelimitedStringToList(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>delimitedStringToList</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testDelimitedStringToList(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>delimitedStringToList</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>delimitedStringToList</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testDelimitedStringToList(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>delimitedStringToList</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testDelimitedStringToList(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>delimitedStringToList</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.delimitedStringToListReturnsNullWhenArgumentIsNull(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>delimitedStringToList</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testDelimitedStringToList(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>join</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testJoin(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>join</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testJoin(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>join</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testJoin(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>join</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testJoin(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>join</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.joiningWithNullDelimiterIsNotAllowed(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>join</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testJoin(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>join</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testJoin(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>join</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>join</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testJoin(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>join</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testJoin(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>join</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testJoin(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>join</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testJoin(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>join</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.joiningNullIsNull(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>join</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testJoin(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>join</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testJoin(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>join</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testJoin(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>join</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testJoin(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>join</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testJoin(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>join</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.joiningNullIsNull(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>join</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testJoin(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>reverseTokens</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testReverseTokens(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>reverseTokens</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testReverseTokens(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>reverseTokens</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.reversingNullTokensReturnsNull(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>reverseTokens</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testReverseTokens(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>reverseTokens</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.reversingWithNullDelimiterIsNotAllowed(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>reverseTokens</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testReverseTokens(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>reverseTokens</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testReverseTokens(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>reverseTokens</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testReverseTokens(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>reverseTokens</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.reversingNullTokensReturnsNull(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>reverseTokens</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testReverseTokens(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>reverseTokens</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.reversingWithNullDelimiterIsNotAllowed(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>reverseTokens</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testReverseTokens(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>reverseTokens</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.reversingNullTokensReturnsNull(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>reverseTokens</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testReverseTokens(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>reverseTokens</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testReverseTokens(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/ArrayUtils</name></clazz><method><name>transformToListIfIsArray</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.ArrayUtilsTest.transformToListIfIsArrayReturnsListWhenGivenArray(org.jmxtrans.utils.collections.ArrayUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/ArrayUtils</name></clazz><method><name>transformToListIfIsArray</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.ArrayUtilsTest.transformToListIfIsArrayReturnsListWhenGivenArray(org.jmxtrans.utils.collections.ArrayUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/ArrayUtils</name></clazz><method><name>transformToListIfIsArray</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.ArrayUtilsTest.transformToListIfIsArrayReturnsListWhenGivenArray(org.jmxtrans.utils.collections.ArrayUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/ArrayUtils</name></clazz><method><name>transformToListIfIsArray</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.ArrayUtilsTest.transformToListIfIsArrayReturnsListWhenGivenArray(org.jmxtrans.utils.collections.ArrayUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/ArrayUtils</name></clazz><method><name>transformToListIfIsArray</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.ArrayUtilsTest.transformToListIfIsArrayReturnsNullForNullParameter(org.jmxtrans.utils.collections.ArrayUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/ArrayUtils</name></clazz><method><name>transformToListIfIsArray</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.ArrayUtilsTest.transformToListIfIsArrayReturnsGivenNonArrayParameter(org.jmxtrans.utils.collections.ArrayUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/ArrayUtils</name></clazz><method><name>transformToListIfIsArray</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.ArrayUtilsTest.transformToListIfIsArrayReturnsListWhenGivenArray(org.jmxtrans.utils.collections.ArrayUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/ArrayUtils</name></clazz><method><name>transformToListIfIsArray</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.ArrayUtilsTest.transformToListIfIsArrayReturnsGivenNonArrayParameter(org.jmxtrans.utils.collections.ArrayUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/ArrayUtils</name></clazz><method><name>transformToListIfIsArray</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.ArrayUtilsTest.transformToListIfIsArrayReturnsListWhenGivenArray(org.jmxtrans.utils.collections.ArrayUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/ArrayUtils</name></clazz><method><name>transformToListIfIsArray</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.ArrayUtilsTest.transformToListIfIsArrayReturnsListWhenGivenArray(org.jmxtrans.utils.collections.ArrayUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/ArrayUtils</name></clazz><method><name>transformToListIfIsArray</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.ArrayUtilsTest.transformToListIfIsArrayReturnsListWhenGivenArray(org.jmxtrans.utils.collections.ArrayUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/ArrayUtils</name></clazz><method><name>transformToListIfIsArray</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.ArrayUtilsTest.transformToListIfIsArrayReturnsListWhenGivenArray(org.jmxtrans.utils.collections.ArrayUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/ArrayUtils</name></clazz><method><name>transformToListIfIsArray</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.ArrayUtilsTest.transformToListIfIsArrayReturnsListWhenGivenArray(org.jmxtrans.utils.collections.ArrayUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/ArrayUtils</name></clazz><method><name>transformToListIfIsArray</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.ArrayUtilsTest.transformToListIfIsArrayReturnsGivenNonArrayParameter(org.jmxtrans.utils.collections.ArrayUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/ArrayUtils</name></clazz><method><name>transformToListIfIsArray</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.ArrayUtilsTest.transformToListIfIsArrayReturnsNullForNullParameter(org.jmxtrans.utils.collections.ArrayUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/ArrayUtils</name></clazz><method><name>transformToListIfIsArray</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.ArrayUtilsTest.transformToListIfIsArrayReturnsListWhenGivenArray(org.jmxtrans.utils.collections.ArrayUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/ArrayUtils</name></clazz><method><name>transformToListIfIsArray</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.ArrayUtilsTest.transformToListIfIsArrayReturnsListWhenGivenArray(org.jmxtrans.utils.collections.ArrayUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/ArrayUtils</name></clazz><method><name>transformToListIfIsArray</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.ArrayUtilsTest.transformToListIfIsArrayReturnsListWhenGivenArray(org.jmxtrans.utils.collections.ArrayUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/ArrayUtils</name></clazz><method><name>transformToListIfIsArray</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.ArrayUtilsTest.transformToListIfIsArrayReturnsNullForNullParameter(org.jmxtrans.utils.collections.ArrayUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/ArrayUtils</name></clazz><method><name>transformToListIfIsArray</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.ArrayUtilsTest.transformToListIfIsArrayReturnsListWhenGivenArray(org.jmxtrans.utils.collections.ArrayUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_negative_position_throws_an_exception(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_negative_position_throws_an_exception(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_out_of_range_position_throws_an_exception(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_out_of_range_position_throws_an_exception(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_on_iterator_return_value(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_on_iterator_return_value(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_on_list_return_value(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_on_iterator_return_value(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_on_iterator_return_value(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_on_iterator_return_value(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_on_iterator_return_value(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_on_list_return_value(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_negative_position_throws_an_exception(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_negative_position_throws_an_exception(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_negative_position_throws_an_exception(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_on_iterator_return_value(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_on_iterator_return_value(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_on_iterator_return_value(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_out_of_range_position_throws_an_exception(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_out_of_range_position_throws_an_exception(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_out_of_range_position_throws_an_exception(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_out_of_range_position_throws_an_exception(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_out_of_range_position_throws_an_exception(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_on_iterator_return_value(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_on_iterator_return_value(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_on_list_return_value(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_on_iterator_return_value(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_out_of_range_position_throws_an_exception(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_on_iterator_return_value(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_on_iterator_return_value(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_on_list_return_value(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_on_iterator_return_value(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(I)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest.testAdd(org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(IZ)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(IZLjava/util/Collection;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>add</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>add</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>add</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest.testAdd(org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>addAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>addAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>addAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest.testAddAll(org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>addAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>addAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest.testAddAll(org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>addAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest.testAddAll(org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>addAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest.testAddAll(org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>addAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>addAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest.testAddAll(org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>addAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>addAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest.testAddAll(org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>addAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>addAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>addAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest.testAddAll(org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>discardingOffer</name></method><methodDesc>(Ljava/lang/Object;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>discardingOffer</name></method><methodDesc>(Ljava/lang/Object;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>discardingOffer</name></method><methodDesc>(Ljava/lang/Object;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>discardingOffer</name></method><methodDesc>(Ljava/lang/Object;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>discardingOffer</name></method><methodDesc>(Ljava/lang/Object;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest.testAdd(org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>discardingOffer</name></method><methodDesc>(Ljava/lang/Object;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>offer</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>offer</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>offer</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest.testOffer(org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>offer</name></method><methodDesc>(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>offer</name></method><methodDesc>(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>offer</name></method><methodDesc>(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest.testOfferWithTimeout(org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>put</name></method><methodDesc>(Ljava/lang/Object;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest.testPut(org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/NamedThreadFactory</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Z)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.NamedThreadFactoryTest.createNonDaemonThread(org.jmxtrans.utils.concurrent.NamedThreadFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/NamedThreadFactory</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Z)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.NamedThreadFactoryTest.createNonDaemonThread(org.jmxtrans.utils.concurrent.NamedThreadFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/NamedThreadFactory</name></clazz><method><name>newThread</name></method><methodDesc>(Ljava/lang/Runnable;)Ljava/lang/Thread;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.NamedThreadFactoryTest.createNonDaemonThread(org.jmxtrans.utils.concurrent.NamedThreadFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/NamedThreadFactory</name></clazz><method><name>newThread</name></method><methodDesc>(Ljava/lang/Runnable;)Ljava/lang/Thread;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.NamedThreadFactoryTest.createNonDaemonThread(org.jmxtrans.utils.concurrent.NamedThreadFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/NamedThreadFactory</name></clazz><method><name>newThread</name></method><methodDesc>(Ljava/lang/Runnable;)Ljava/lang/Thread;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.NamedThreadFactoryTest.createNonDaemonThread(org.jmxtrans.utils.concurrent.NamedThreadFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/NamedThreadFactory</name></clazz><method><name>newThread</name></method><methodDesc>(Ljava/lang/Runnable;)Ljava/lang/Thread;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.NamedThreadFactoryTest.newThreadIsNamedAccordingToPrefix(org.jmxtrans.utils.concurrent.NamedThreadFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/NamedThreadFactory</name></clazz><method><name>newThread</name></method><methodDesc>(Ljava/lang/Runnable;)Ljava/lang/Thread;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.NamedThreadFactoryTest.createNonDaemonThread(org.jmxtrans.utils.concurrent.NamedThreadFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/NamedThreadFactory</name></clazz><method><name>newThread</name></method><methodDesc>(Ljava/lang/Runnable;)Ljava/lang/Thread;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.NamedThreadFactoryTest.createNonDaemonThread(org.jmxtrans.utils.concurrent.NamedThreadFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/NamedThreadFactory</name></clazz><method><name>newThread</name></method><methodDesc>(Ljava/lang/Runnable;)Ljava/lang/Thread;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.NamedThreadFactoryTest.createNonDaemonThread(org.jmxtrans.utils.concurrent.NamedThreadFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/NamedThreadFactory</name></clazz><method><name>newThread</name></method><methodDesc>(Ljava/lang/Runnable;)Ljava/lang/Thread;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.NamedThreadFactoryTest.newThreadIsNamedAccordingToPrefix(org.jmxtrans.utils.concurrent.NamedThreadFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/NamedThreadFactory</name></clazz><method><name>newThread</name></method><methodDesc>(Ljava/lang/Runnable;)Ljava/lang/Thread;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.NamedThreadFactoryTest.createDaemonThread(org.jmxtrans.utils.concurrent.NamedThreadFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>closeQuietly</name></method><methodDesc>(Ljava/io/Closeable;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.closingNullCloseableDoesNothing(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>closeQuietly</name></method><methodDesc>(Ljava/io/Closeable;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.closingNullCloseableDoesNothing(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>closeQuietly</name></method><methodDesc>(Ljava/io/Closeable;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.closeableIsClosed(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>closeQuietly</name></method><methodDesc>(Ljava/io/Closeable;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.closeableIsClosed(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>copy</name></method><methodDesc>(Ljava/io/InputStream;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>copy</name></method><methodDesc>(Ljava/io/InputStream;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.canCopyStreamToEmptyDestination(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>copy</name></method><methodDesc>(Ljava/io/InputStream;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.canCopyStreamToEmptyDestination(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>copy</name></method><methodDesc>(Ljava/io/InputStream;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.canCopyStreamToEmptyDestination(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>copy</name></method><methodDesc>(Ljava/io/InputStream;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>copy</name></method><methodDesc>(Ljava/io/InputStream;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.canCopyStreamToEmptyDestination(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>copy</name></method><methodDesc>(Ljava/io/InputStream;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.canCopyStreamToEmptyDestination(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>copy</name></method><methodDesc>(Ljava/io/InputStream;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.canCopyStreamToEmptyDestination(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.cannotCopySmallFilesToDirectory(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.cannotCopySmallFilesToDirectory(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.copyToEmptyFile(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.copyToEmptyFile(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.cannotCopySmallFilesToDirectory(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.cannotCopySmallFilesToDirectory(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.copyToEmptyFile(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.copyToEmptyFile(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>79</int><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.cannotCopySmallFilesToDirectory(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.cannotCopySmallFilesToDirectory(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.cannotCopySmallFilesToDirectory(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.cannotCopySmallFilesToDirectory(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.cannotCopySmallFilesToDirectory(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.cannotCopySmallFilesToDirectory(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.copyToEmptyFile(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.appendToExistingFile(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.copyToEmptyFile(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.copyToEmptyFile(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.copyToEmptyFile(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.cannotCopySmallFilesToDirectory(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.cannotCopySmallFilesToDirectory(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.appendToExistingFile(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>79</int><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.copyToEmptyFile(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.copyToEmptyFile(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.copyToEmptyFile(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>79</int><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.appendToExistingFile(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.copyToEmptyFile(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>83</int><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/net/SocketOutputStream</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/net/Socket;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.net.SocketOutputStreamTest.writesArePropagatedToSocket(org.jmxtrans.utils.net.SocketOutputStreamTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/net/SocketOutputStream</name></clazz><method><name>getSocket</name></method><methodDesc>()Ljava/net/Socket;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.net.SocketOutputStreamTest.socketIsAccessibleFromSocketOutputStream(org.jmxtrans.utils.net.SocketOutputStreamTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/net/SocketOutputStream</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.net.SocketOutputStreamTest.SocketWriterHasReasonableToString(org.jmxtrans.utils.net.SocketOutputStreamTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/net/SocketOutputStream</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/net/SocketOutputStream</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.net.SocketOutputStreamTest.SocketWriterHasReasonableToString(org.jmxtrans.utils.net.SocketOutputStreamTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/net/SocketOutputStream</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.net.SocketOutputStreamTest.SocketWriterHasReasonableToString(org.jmxtrans.utils.net.SocketOutputStreamTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/net/SocketOutputStream</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.net.SocketOutputStreamTest.SocketWriterHasReasonableToString(org.jmxtrans.utils.net.SocketOutputStreamTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/net/SocketOutputStream</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.net.SocketOutputStreamTest.SocketWriterHasReasonableToString(org.jmxtrans.utils.net.SocketOutputStreamTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/net/SocketOutputStream</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.net.SocketOutputStreamTest.SocketWriterHasReasonableToString(org.jmxtrans.utils.net.SocketOutputStreamTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/net/SocketWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/net/Socket;Ljava/nio/charset/Charset;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.net.SocketWriterTest.socketIsAccessibleFromSocketOutputStream(org.jmxtrans.utils.net.SocketWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/net/SocketWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/net/Socket;Ljava/nio/charset/Charset;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.net.SocketWriterTest.socketIsAccessibleFromSocketOutputStream(org.jmxtrans.utils.net.SocketWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/net/SocketWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/net/Socket;Ljava/nio/charset/Charset;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.net.SocketWriterTest.socketIsAccessibleFromSocketOutputStream(org.jmxtrans.utils.net.SocketWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/net/SocketWriter</name></clazz><method><name>getSocket</name></method><methodDesc>()Ljava/net/Socket;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.net.SocketWriterTest.socketIsAccessibleFromSocketOutputStream(org.jmxtrans.utils.net.SocketWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/net/SocketWriter</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.net.SocketWriterTest.SocketWriterHasReasonableToString(org.jmxtrans.utils.net.SocketWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/net/SocketWriter</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/net/SocketWriter</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.net.SocketWriterTest.SocketWriterHasReasonableToString(org.jmxtrans.utils.net.SocketWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/net/SocketWriter</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.net.SocketWriterTest.SocketWriterHasReasonableToString(org.jmxtrans.utils.net.SocketWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/net/SocketWriter</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.net.SocketWriterTest.SocketWriterHasReasonableToString(org.jmxtrans.utils.net.SocketWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/net/SocketWriter</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.net.SocketWriterTest.SocketWriterHasReasonableToString(org.jmxtrans.utils.net.SocketWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/net/SocketWriter</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.net.SocketWriterTest.SocketWriterHasReasonableToString(org.jmxtrans.utils.net.SocketWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkArgument</name></method><methodDesc>(ZLjava/lang/String;[Ljava/lang/Object;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkArgument</name></method><methodDesc>(ZLjava/lang/String;[Ljava/lang/Object;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkArgument</name></method><methodDesc>(ZLjava/lang/String;[Ljava/lang/Object;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkArgument</name></method><methodDesc>(ZLjava/lang/String;[Ljava/lang/Object;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkArgument</name></method><methodDesc>(ZLjava/lang/String;[Ljava/lang/Object;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkArgument</name></method><methodDesc>(ZLjava/lang/String;[Ljava/lang/Object;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkArgument</name></method><methodDesc>(ZLjava/lang/String;[Ljava/lang/Object;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkArgument</name></method><methodDesc>(ZLjava/lang/String;[Ljava/lang/Object;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkArgument</name></method><methodDesc>(ZLjava/lang/String;[Ljava/lang/Object;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/jmx/JmxUtils2</name></clazz><method><name>registerObject</name></method><methodDesc>(Ljava/lang/Object;Ljava/lang/String;Ljavax/management/MBeanServer;)Ljavax/management/ObjectName;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/jmx/JmxUtils2</name></clazz><method><name>registerObject</name></method><methodDesc>(Ljava/lang/Object;Ljava/lang/String;Ljavax/management/MBeanServer;)Ljavax/management/ObjectName;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/jmx/JmxUtils2</name></clazz><method><name>registerObject</name></method><methodDesc>(Ljava/lang/Object;Ljava/lang/String;Ljavax/management/MBeanServer;)Ljavax/management/ObjectName;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/jmx/JmxUtils2</name></clazz><method><name>registerObject</name></method><methodDesc>(Ljava/lang/Object;Ljava/lang/String;Ljavax/management/MBeanServer;)Ljavax/management/ObjectName;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/jmx/JmxUtils2</name></clazz><method><name>registerObject</name></method><methodDesc>(Ljava/lang/Object;Ljava/lang/String;Ljavax/management/MBeanServer;)Ljavax/management/ObjectName;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/jmx/JmxUtils2</name></clazz><method><name>unregisterObject</name></method><methodDesc>(Ljavax/management/ObjectName;Ljavax/management/MBeanServer;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/jmx/JmxUtils2</name></clazz><method><name>unregisterObject</name></method><methodDesc>(Ljavax/management/ObjectName;Ljavax/management/MBeanServer;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/jmx/JmxUtils2</name></clazz><method><name>unregisterObject</name></method><methodDesc>(Ljavax/management/ObjectName;Ljavax/management/MBeanServer;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/jmx/JmxUtils2</name></clazz><method><name>unregisterObject</name></method><methodDesc>(Ljavax/management/ObjectName;Ljavax/management/MBeanServer;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>reverseTokens</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="MEMORY_ERROR"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>getDiscardedElementCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>getDiscardedElementCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
