27
<classHistory><id hierarchicalHash="1c03e1bb7"><classId hash="3691821431"><name><name>org/jmxtrans/embedded/util/json/PlaceholderEnabledJsonNodeFactory</name></name></classId></id><coverageId>37f27c7a9</coverageId></classHistory>
<classHistory><id hierarchicalHash="557cd063"><classId hash="1434243171"><name><name>org/jmxtrans/embedded/config/ConfigurationMergeTest</name></name></classId></id><coverageId>557cd063</coverageId></classHistory>
<classHistory><id hierarchicalHash="3175e404"><classId hash="829809668"><name><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactoryTest</name></name></classId></id><coverageId>3175e404</coverageId></classHistory>
<classHistory><id hierarchicalHash="987761a1"><classId hash="1521405746"><name><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></name></classId></id><coverageId>1512e5ffc</coverageId></classHistory>
<classHistory><id hierarchicalHash="6eaccaa6"><classId hash="1856817830"><name><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser2Test</name></name></classId></id><coverageId>6eaccaa6</coverageId></classHistory>
<classHistory><id hierarchicalHash="831c4017"><classId hash="2199666711"><name><name>org/jmxtrans/embedded/config/ConfigurationTest</name></name></classId></id><coverageId>831c4017</coverageId></classHistory>
<classHistory><id hierarchicalHash="125ad1823"><classId hash="3773833445"><name><name>org/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans</name></name></classId></id><coverageId>182a44400</coverageId></classHistory>
<classHistory><id hierarchicalHash="ae27443c"><classId hash="2921808956"><name><name>org/jmxtrans/embedded/config/ConfigurationParser</name></name></classId></id><coverageId>28500882d</coverageId></classHistory>
<classHistory><id hierarchicalHash="69dd37b1"><classId hash="1776105393"><name><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></name></classId></id><coverageId>182a44400</coverageId></classHistory>
<classHistory><id hierarchicalHash="11159beb4"><classId hash="1128173109"><name><name>org/jmxtrans/embedded/util/pool/SocketOutputStreamPoolFactory</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="c2e3c75"><classId hash="204356725"><name><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="1ed69ac2"><classId hash="517380802"><name><name>org/jmxtrans/embedded/EmbeddedJmxTransMBean</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="177a53a5"><classId hash="393892773"><name><name>org/jmxtrans/embedded/util/pool/ManagedGenericKeyedObjectPoolTest</name></name></classId></id><coverageId>177a53a5</coverageId></classHistory>
<classHistory><id hierarchicalHash="152b3d823"><classId hash="3535717329"><name><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransNamespaceHandler</name></name></classId></id><coverageId>1512e5ffc</coverageId></classHistory>
<classHistory><id hierarchicalHash="29c333b3"><classId hash="700658611"><name><name>org/jmxtrans/embedded/config/ConfigurationTemplatesTest</name></name></classId></id><coverageId>29c333b3</coverageId></classHistory>
<classHistory><id hierarchicalHash="62e1caa7"><classId hash="1658964647"><name><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser1Test</name></name></classId></id><coverageId>62e1caa7</coverageId></classHistory>
<classHistory><id hierarchicalHash="fa273f7c"><classId hash="4196876156"><name><name>org/jmxtrans/embedded/util/json/PlaceholderEnabledJsonNodeFactoryTest</name></name></classId></id><coverageId>fa273f7c</coverageId></classHistory>
<classHistory><id hierarchicalHash="44bcf73e"><classId hash="1153234750"><name><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></name></classId></id><coverageId>25b3d547a</coverageId></classHistory>
<classHistory><id hierarchicalHash="7f9fcaaf"><classId hash="2141178543"><name><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser3Test</name></name></classId></id><coverageId>7f9fcaaf</coverageId></classHistory>
<classHistory><id hierarchicalHash="73fdaad0"><classId hash="1946004176"><name><name>org/jmxtrans/embedded/util/pool/ManagedGenericKeyedObjectPoolMBean</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="14d8effd9"><classId hash="2138296154"><name><name>org/jmxtrans/embedded/util/pool/SocketWriterPoolFactory</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="11f38cb7f"><classId hash="2788886458"><name><name>org/jmxtrans/embedded/util/pool/ManagedGenericKeyedObjectPool</name></name></classId></id><coverageId>177a53a5</coverageId></classHistory>
<classHistory><id hierarchicalHash="80f4716a"><classId hash="2163503466"><name><name>org/jmxtrans/embedded/config/Config</name></name></classId></id><coverageId>28500882d</coverageId></classHistory>
<classHistory><id hierarchicalHash="ef9640bd"><classId hash="4019601597"><name><name>org/jmxtrans/embedded/spring/SpringEmbeddedJmxTransMBean</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="6ba99717"><classId hash="1806276375"><name><name>org/jmxtrans/embedded/EmbeddedJmxTransException</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="990f22da"><classId hash="1414671260"><name><name>org/jmxtrans/embedded/EmbeddedJmxTrans$1</name></name></classId></id><coverageId>182a44400</coverageId></classHistory>
<classHistory><id hierarchicalHash="b558d504"><classId hash="1889263046"><name><name>org/jmxtrans/embedded/EmbeddedJmxTrans$2</name></name></classId></id><coverageId>182a44400</coverageId></classHistory>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljavax/management/MBeanServer;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljavax/management/MBeanServer;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljavax/management/MBeanServer;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljavax/management/MBeanServer;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljavax/management/MBeanServer;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljavax/management/MBeanServer;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljavax/management/MBeanServer;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljavax/management/MBeanServer;)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljavax/management/MBeanServer;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>addQuery</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>addQuery</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getExportIntervalInSeconds</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getNumExportThreads</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getNumQueryThreads</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getOutputWriters</name></method><methodDesc>()Ljava/util/Set;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getQueries</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getQueryIntervalInSeconds</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>113</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>114</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>112</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>117</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans$1</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans$1</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/Config</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/Config</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/Config</name></clazz><method><name>addOutputWriters</name></method><methodDesc>(Ljava/util/Collection;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/Config</name></clazz><method><name>addQuery</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/Config</name></clazz><method><name>configure</name></method><methodDesc>(Lorg/jmxtrans/embedded/EmbeddedJmxTrans;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/Config</name></clazz><method><name>configure</name></method><methodDesc>(Lorg/jmxtrans/embedded/EmbeddedJmxTrans;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/Config</name></clazz><method><name>configure</name></method><methodDesc>(Lorg/jmxtrans/embedded/EmbeddedJmxTrans;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransBeanDefinitionParser2Test.test(org.jmxtrans.embedded.spring.EmbeddedJmxTransBeanDefinitionParser2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/Config</name></clazz><method><name>configure</name></method><methodDesc>(Lorg/jmxtrans/embedded/EmbeddedJmxTrans;)V</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/Config</name></clazz><method><name>configure</name></method><methodDesc>(Lorg/jmxtrans/embedded/EmbeddedJmxTrans;)V</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/Config</name></clazz><method><name>configure</name></method><methodDesc>(Lorg/jmxtrans/embedded/EmbeddedJmxTrans;)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/Config</name></clazz><method><name>configure</name></method><methodDesc>(Lorg/jmxtrans/embedded/EmbeddedJmxTrans;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/Config</name></clazz><method><name>configure</name></method><methodDesc>(Lorg/jmxtrans/embedded/EmbeddedJmxTrans;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/Config</name></clazz><method><name>configure</name></method><methodDesc>(Lorg/jmxtrans/embedded/EmbeddedJmxTrans;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/Config</name></clazz><method><name>configure</name></method><methodDesc>(Lorg/jmxtrans/embedded/EmbeddedJmxTrans;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/Config</name></clazz><method><name>configure</name></method><methodDesc>(Lorg/jmxtrans/embedded/EmbeddedJmxTrans;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/Config</name></clazz><method><name>configure</name></method><methodDesc>(Lorg/jmxtrans/embedded/EmbeddedJmxTrans;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/Config</name></clazz><method><name>configure</name></method><methodDesc>(Lorg/jmxtrans/embedded/EmbeddedJmxTrans;)V</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/Config</name></clazz><method><name>configure</name></method><methodDesc>(Lorg/jmxtrans/embedded/EmbeddedJmxTrans;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/Config</name></clazz><method><name>configure</name></method><methodDesc>(Lorg/jmxtrans/embedded/EmbeddedJmxTrans;)V</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/Config</name></clazz><method><name>configure</name></method><methodDesc>(Lorg/jmxtrans/embedded/EmbeddedJmxTrans;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/Config</name></clazz><method><name>configure</name></method><methodDesc>(Lorg/jmxtrans/embedded/EmbeddedJmxTrans;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/Config</name></clazz><method><name>configure</name></method><methodDesc>(Lorg/jmxtrans/embedded/EmbeddedJmxTrans;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/Config</name></clazz><method><name>configure</name></method><methodDesc>(Lorg/jmxtrans/embedded/EmbeddedJmxTrans;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/Config</name></clazz><method><name>configure</name></method><methodDesc>(Lorg/jmxtrans/embedded/EmbeddedJmxTrans;)V</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/Config</name></clazz><method><name>configure</name></method><methodDesc>(Lorg/jmxtrans/embedded/EmbeddedJmxTrans;)V</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/Config</name></clazz><method><name>configure</name></method><methodDesc>(Lorg/jmxtrans/embedded/EmbeddedJmxTrans;)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/Config</name></clazz><method><name>configure</name></method><methodDesc>(Lorg/jmxtrans/embedded/EmbeddedJmxTrans;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/Config</name></clazz><method><name>configure</name></method><methodDesc>(Lorg/jmxtrans/embedded/EmbeddedJmxTrans;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransBeanDefinitionParser2Test.test(org.jmxtrans.embedded.spring.EmbeddedJmxTransBeanDefinitionParser2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/Config</name></clazz><method><name>configure</name></method><methodDesc>(Lorg/jmxtrans/embedded/EmbeddedJmxTrans;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/Config</name></clazz><method><name>configure</name></method><methodDesc>(Lorg/jmxtrans/embedded/EmbeddedJmxTrans;)V</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/Config</name></clazz><method><name>configure</name></method><methodDesc>(Lorg/jmxtrans/embedded/EmbeddedJmxTrans;)V</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/Config</name></clazz><method><name>configure</name></method><methodDesc>(Lorg/jmxtrans/embedded/EmbeddedJmxTrans;)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/Config</name></clazz><method><name>configure</name></method><methodDesc>(Lorg/jmxtrans/embedded/EmbeddedJmxTrans;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/Config</name></clazz><method><name>configure</name></method><methodDesc>(Lorg/jmxtrans/embedded/EmbeddedJmxTrans;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/Config</name></clazz><method><name>configure</name></method><methodDesc>(Lorg/jmxtrans/embedded/EmbeddedJmxTrans;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/Config</name></clazz><method><name>configure</name></method><methodDesc>(Lorg/jmxtrans/embedded/EmbeddedJmxTrans;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/Config</name></clazz><method><name>configure</name></method><methodDesc>(Lorg/jmxtrans/embedded/EmbeddedJmxTrans;)V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/Config</name></clazz><method><name>configure</name></method><methodDesc>(Lorg/jmxtrans/embedded/EmbeddedJmxTrans;)V</methodDesc></location><indexes><int>96</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>instantiateOutputWriter</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)Lorg/jmxtrans/output/OutputWriter;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>instantiateOutputWriter</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)Lorg/jmxtrans/output/OutputWriter;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>instantiateOutputWriter</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)Lorg/jmxtrans/output/OutputWriter;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>instantiateOutputWriter</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)Lorg/jmxtrans/output/OutputWriter;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>instantiateOutputWriter</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)Lorg/jmxtrans/output/OutputWriter;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>instantiateOutputWriter</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)Lorg/jmxtrans/output/OutputWriter;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>instantiateOutputWriter</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)Lorg/jmxtrans/output/OutputWriter;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>instantiateOutputWriter</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)Lorg/jmxtrans/output/OutputWriter;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>instantiateOutputWriter</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)Lorg/jmxtrans/output/OutputWriter;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>instantiateOutputWriter</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)Lorg/jmxtrans/output/OutputWriter;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>instantiateOutputWriter</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)Lorg/jmxtrans/output/OutputWriter;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>instantiateOutputWriter</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)Lorg/jmxtrans/output/OutputWriter;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>instantiateOutputWriter</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)Lorg/jmxtrans/output/OutputWriter;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>instantiateOutputWriter</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)Lorg/jmxtrans/output/OutputWriter;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>instantiateOutputWriter</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)Lorg/jmxtrans/output/OutputWriter;</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>instantiateOutputWriter</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)Lorg/jmxtrans/output/OutputWriter;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>instantiateOutputWriter</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)Lorg/jmxtrans/output/OutputWriter;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>instantiateOutputWriter</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)Lorg/jmxtrans/output/OutputWriter;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>instantiateOutputWriter</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)Lorg/jmxtrans/output/OutputWriter;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>instantiateOutputWriter</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)Lorg/jmxtrans/output/OutputWriter;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>96</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>180</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>199</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>218</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>237</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>256</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>163</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>174</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>179</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>185</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>186</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>193</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>198</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>204</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>205</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>212</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>217</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>223</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>224</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>231</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>236</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>242</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>243</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>250</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>255</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>261</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>262</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>96</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>180</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>199</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>218</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>237</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>256</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>96</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>180</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>199</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>218</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>237</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>256</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>147</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>169</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>187</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>206</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>225</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>244</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Ljava/io/InputStream;Lorg/jmxtrans/embedded/config/Config;)V</methodDesc></location><indexes><int>263</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfigurations</name></method><methodDesc>(Ljava/util/List;)Lorg/jmxtrans/embedded/config/Config;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfigurations</name></method><methodDesc>(Ljava/util/List;)Lorg/jmxtrans/embedded/config/Config;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfigurations</name></method><methodDesc>(Ljava/util/List;)Lorg/jmxtrans/embedded/config/Config;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfigurations</name></method><methodDesc>(Ljava/util/List;)Lorg/jmxtrans/embedded/config/Config;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfigurations</name></method><methodDesc>(Ljava/util/List;)Lorg/jmxtrans/embedded/config/Config;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfigurations</name></method><methodDesc>(Ljava/util/List;)Lorg/jmxtrans/embedded/config/Config;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfigurations</name></method><methodDesc>(Ljava/util/List;)Lorg/jmxtrans/embedded/config/Config;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfigurations</name></method><methodDesc>(Ljava/util/List;)Lorg/jmxtrans/embedded/config/Config;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfigurations</name></method><methodDesc>(Ljava/util/List;)Lorg/jmxtrans/embedded/config/Config;</methodDesc></location><indexes><int>133</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfigurations</name></method><methodDesc>(Ljava/util/List;)Lorg/jmxtrans/embedded/config/Config;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>openResource</name></method><methodDesc>(Ljava/lang/String;)Ljava/io/InputStream;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>openResource</name></method><methodDesc>(Ljava/lang/String;)Ljava/io/InputStream;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>openResource</name></method><methodDesc>(Ljava/lang/String;)Ljava/io/InputStream;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>openResource</name></method><methodDesc>(Ljava/lang/String;)Ljava/io/InputStream;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>openResource</name></method><methodDesc>(Ljava/lang/String;)Ljava/io/InputStream;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>openResource</name></method><methodDesc>(Ljava/lang/String;)Ljava/io/InputStream;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>openResource</name></method><methodDesc>(Ljava/lang/String;)Ljava/io/InputStream;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>openResource</name></method><methodDesc>(Ljava/lang/String;)Ljava/io/InputStream;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>openResource</name></method><methodDesc>(Ljava/lang/String;)Ljava/io/InputStream;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>openResource</name></method><methodDesc>(Ljava/lang/String;)Ljava/io/InputStream;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>openResource</name></method><methodDesc>(Ljava/lang/String;)Ljava/io/InputStream;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>openResource</name></method><methodDesc>(Ljava/lang/String;)Ljava/io/InputStream;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>openResource</name></method><methodDesc>(Ljava/lang/String;)Ljava/io/InputStream;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>openResource</name></method><methodDesc>(Ljava/lang/String;)Ljava/io/InputStream;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>openResource</name></method><methodDesc>(Ljava/lang/String;)Ljava/io/InputStream;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>openResource</name></method><methodDesc>(Ljava/lang/String;)Ljava/io/InputStream;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseOutputWritersNode</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/util/List;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseOutputWritersNode</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/util/List;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseOutputWritersNode</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/util/List;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseOutputWritersNode</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/util/List;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseOutputWritersNode</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseOutputWritersNode</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/util/List;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseOutputWritersNode</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/util/List;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseOutputWritersNode</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/util/List;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseOutputWritersNode</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/util/List;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseOutputWritersNode</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/util/List;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseOutputWritersNode</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/util/List;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseOutputWritersNode</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/util/List;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseOutputWritersNode</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/util/List;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseOutputWritersNode</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/util/List;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseOutputWritersNode</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/util/List;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseOutputWritersNode</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/util/List;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseOutputWritersNode</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/util/List;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseOutputWritersNode</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/util/List;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseOutputWritersNode</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/util/List;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseOutputWritersNode</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/util/List;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseOutputWritersNode</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/util/List;</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>141</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>136</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>178</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>198</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>211</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>124</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>131</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>148</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>149</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>165</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>166</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>172</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>177</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>184</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>192</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>197</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>204</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>216</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>218</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>220</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>221</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>222</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>230</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>232</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>234</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>236</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>237</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>238</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>136</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>178</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>198</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>211</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTemplatesTest.loadAllTemplates(org.jmxtrans.embedded.config.ConfigurationTemplatesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>136</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>178</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>198</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.config.ConfigurationTest.org.jmxtrans.embedded.config.ConfigurationTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseQueryAttributeNode</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Lcom/fasterxml/jackson/databind/JsonNode;)V</methodDesc></location><indexes><int>211</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>131</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>139</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransBeanDefinitionParser3Test.test(org.jmxtrans.embedded.spring.EmbeddedJmxTransBeanDefinitionParser3Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>getBeanClass</name></method><methodDesc>(Lorg/w3c/dom/Element;)Ljava/lang/Class;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>resolveId</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/support/AbstractBeanDefinition;Lorg/springframework/beans/factory/xml/ParserContext;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>resolveId</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/support/AbstractBeanDefinition;Lorg/springframework/beans/factory/xml/ParserContext;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>resolveId</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/support/AbstractBeanDefinition;Lorg/springframework/beans/factory/xml/ParserContext;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>resolveId</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/support/AbstractBeanDefinition;Lorg/springframework/beans/factory/xml/ParserContext;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>resolveId</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/support/AbstractBeanDefinition;Lorg/springframework/beans/factory/xml/ParserContext;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>resolveId</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/support/AbstractBeanDefinition;Lorg/springframework/beans/factory/xml/ParserContext;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/springframework/core/io/ResourceLoader;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>189</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>160</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>105</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>124</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>130</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>160</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>160</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>224</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>200</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>218</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObjectType</name></method><methodDesc>()Ljava/lang/Class;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>isSingleton</name></method><methodDesc>()Z</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>isSingleton</name></method><methodDesc>()Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>setConfigurationUrl</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>setConfigurationUrl</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>setConfigurationUrl</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>setConfigurationUrl</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest.testGetObject(org.jmxtrans.embedded.spring.EmbeddedJmxTransFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>setConfigurationUrl</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>setConfigurationUrls</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>setConfigurationUrls</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>setConfigurationUrls</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>setConfigurationUrls</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>setConfigurationUrls</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransNamespaceHandler</name></clazz><method><name>init</name></method><methodDesc>()V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransBeanDefinitionParser2Test.test(org.jmxtrans.embedded.spring.EmbeddedJmxTransBeanDefinitionParser2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransNamespaceHandler</name></clazz><method><name>init</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.spring.EmbeddedJmxTransBeanDefinitionParser2Test.test(org.jmxtrans.embedded.spring.EmbeddedJmxTransBeanDefinitionParser2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/json/PlaceholderEnabledJsonNodeFactory</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.util.json.PlaceholderEnabledJsonNodeFactoryTest.testWithPlaceholders(org.jmxtrans.embedded.util.json.PlaceholderEnabledJsonNodeFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/json/PlaceholderEnabledJsonNodeFactory</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Z)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/json/PlaceholderEnabledJsonNodeFactory</name></clazz><method><name>textNode</name></method><methodDesc>(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/node/TextNode;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.util.json.PlaceholderEnabledJsonNodeFactoryTest.testWithPlaceholders(org.jmxtrans.embedded.util.json.PlaceholderEnabledJsonNodeFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/json/PlaceholderEnabledJsonNodeFactory</name></clazz><method><name>textNode</name></method><methodDesc>(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/node/TextNode;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.util.json.PlaceholderEnabledJsonNodeFactoryTest.testWithPlaceholders(org.jmxtrans.embedded.util.json.PlaceholderEnabledJsonNodeFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/json/PlaceholderEnabledJsonNodeFactory</name></clazz><method><name>textNode</name></method><methodDesc>(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/node/TextNode;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.util.json.PlaceholderEnabledJsonNodeFactoryTest.testWithPlaceholders(org.jmxtrans.embedded.util.json.PlaceholderEnabledJsonNodeFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/json/PlaceholderEnabledJsonNodeFactory</name></clazz><method><name>textNode</name></method><methodDesc>(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/node/TextNode;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/json/PlaceholderEnabledJsonNodeFactory</name></clazz><method><name>textNode</name></method><methodDesc>(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/node/TextNode;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.util.json.PlaceholderEnabledJsonNodeFactoryTest.testWithPlaceholders(org.jmxtrans.embedded.util.json.PlaceholderEnabledJsonNodeFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/json/PlaceholderEnabledJsonNodeFactory</name></clazz><method><name>textNode</name></method><methodDesc>(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/node/TextNode;</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.embedded.util.json.PlaceholderEnabledJsonNodeFactoryTest.testWithPlaceholders(org.jmxtrans.embedded.util.json.PlaceholderEnabledJsonNodeFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/ManagedGenericKeyedObjectPool</name></clazz><method><name>getNumIdle</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/ManagedGenericKeyedObjectPool</name></clazz><method><name>getNumIdle</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>exportMetrics</name></method><methodDesc>(Ljava/util/concurrent/BlockingQueue;)I</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>exportMetrics</name></method><methodDesc>(Ljava/util/concurrent/BlockingQueue;)I</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>exportMetrics</name></method><methodDesc>(Ljava/util/concurrent/BlockingQueue;)I</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>exportMetrics</name></method><methodDesc>(Ljava/util/concurrent/BlockingQueue;)I</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>exportMetrics</name></method><methodDesc>(Ljava/util/concurrent/BlockingQueue;)I</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>exportMetrics</name></method><methodDesc>(Ljava/util/concurrent/BlockingQueue;)I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>exportMetrics</name></method><methodDesc>(Ljava/util/concurrent/BlockingQueue;)I</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>exportMetrics</name></method><methodDesc>(Ljava/util/concurrent/BlockingQueue;)I</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>exportMetrics</name></method><methodDesc>(Ljava/util/concurrent/BlockingQueue;)I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>exportMetrics</name></method><methodDesc>(Ljava/util/concurrent/BlockingQueue;)I</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>exportMetrics</name></method><methodDesc>(Ljava/util/concurrent/BlockingQueue;)I</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>exportMetrics</name></method><methodDesc>(Ljava/util/concurrent/BlockingQueue;)I</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>exportMetrics</name></method><methodDesc>(Ljava/util/concurrent/BlockingQueue;)I</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>exportMetrics</name></method><methodDesc>(Ljava/util/concurrent/BlockingQueue;)I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>exportMetrics</name></method><methodDesc>(Ljava/util/concurrent/BlockingQueue;)I</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>exportMetrics</name></method><methodDesc>(Ljava/util/concurrent/BlockingQueue;)I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>exportMetrics</name></method><methodDesc>(Ljava/util/concurrent/BlockingQueue;)I</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>exportMetrics</name></method><methodDesc>(Ljava/util/concurrent/BlockingQueue;)I</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>exportMetrics</name></method><methodDesc>(Ljava/util/concurrent/BlockingQueue;)I</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>exportMetrics</name></method><methodDesc>(Ljava/util/concurrent/BlockingQueue;)I</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>exportMetrics</name></method><methodDesc>(Ljava/util/concurrent/BlockingQueue;)I</methodDesc></location><indexes><int>102</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>exportMetrics</name></method><methodDesc>(Ljava/util/concurrent/BlockingQueue;)I</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>exportMetrics</name></method><methodDesc>(Ljava/util/concurrent/BlockingQueue;)I</methodDesc></location><indexes><int>96</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getCollectedMetricsCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getCollectedMetricsCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getCollectedMetricsCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getCollectedMetricsCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getCollectedMetricsCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getCollectedMetricsCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getCollectedMetricsCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getCollectedMetricsCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getCollectedMetricsCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getCollectedMetricsCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getCollectionCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getCollectionCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getCollectionCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getCollectionCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getCollectionCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getCollectionCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getCollectionCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getCollectionCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getCollectionCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getCollectionCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getCollectionDurationInMillis</name></method><methodDesc>()J</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getCollectionDurationInMillis</name></method><methodDesc>()J</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getCollectionDurationInMillis</name></method><methodDesc>()J</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getCollectionDurationInNanos</name></method><methodDesc>()J</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getCollectionDurationInNanos</name></method><methodDesc>()J</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getCollectionDurationInNanos</name></method><methodDesc>()J</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getCollectionDurationInNanos</name></method><methodDesc>()J</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getCollectionDurationInNanos</name></method><methodDesc>()J</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getCollectionDurationInNanos</name></method><methodDesc>()J</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getCollectionDurationInNanos</name></method><methodDesc>()J</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getCollectionDurationInNanos</name></method><methodDesc>()J</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getCollectionDurationInNanos</name></method><methodDesc>()J</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getCollectionDurationInNanos</name></method><methodDesc>()J</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getExportCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getExportCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getExportCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getExportCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getExportCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getExportCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getExportCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getExportCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getExportCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getExportCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getExportDurationInMillis</name></method><methodDesc>()J</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getExportDurationInMillis</name></method><methodDesc>()J</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getExportDurationInMillis</name></method><methodDesc>()J</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getExportDurationInNanos</name></method><methodDesc>()J</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getExportDurationInNanos</name></method><methodDesc>()J</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getExportDurationInNanos</name></method><methodDesc>()J</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getExportDurationInNanos</name></method><methodDesc>()J</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getExportDurationInNanos</name></method><methodDesc>()J</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getExportDurationInNanos</name></method><methodDesc>()J</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getExportDurationInNanos</name></method><methodDesc>()J</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getExportDurationInNanos</name></method><methodDesc>()J</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getExportDurationInNanos</name></method><methodDesc>()J</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getExportDurationInNanos</name></method><methodDesc>()J</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getExportedMetricsCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getExportedMetricsCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getExportedMetricsCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getExportedMetricsCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getExportedMetricsCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getExportedMetricsCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getExportedMetricsCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getExportedMetricsCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getExportedMetricsCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getExportedMetricsCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>getMbeanServer</name></method><methodDesc>()Ljavax/management/MBeanServer;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>configureFromSystemProperty</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>configureFromSystemProperty</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>configureFromSystemProperty</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>configureFromSystemProperty</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>configureFromSystemProperty</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>configureFromSystemProperty</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>configureFromSystemProperty</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>configureFromSystemProperty</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>configureFromSystemProperty</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>configureFromSystemProperty</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)Ljava/lang/String;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>configureFromSystemProperty</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)Ljava/lang/String;</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>configureFromSystemProperty</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)Ljava/lang/String;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>configureFromSystemProperty</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)Ljava/lang/String;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>configureFromSystemProperty</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>configureFromSystemProperty</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>configureFromSystemProperty</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>configureFromSystemProperty</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>configureFromSystemProperty</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>configureFromSystemProperty</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>configureFromSystemProperty</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>configureFromSystemProperty</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>configureFromSystemProperty</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>configureFromSystemProperty</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)Ljava/lang/String;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>configureFromSystemProperty</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)Ljava/lang/String;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>configureFromWebXmlParam</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>configureFromWebXmlParam</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>configureFromWebXmlParam</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextDestroyed</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextDestroyed</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextDestroyed</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextDestroyed</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextDestroyed</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextDestroyed</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextDestroyed</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextDestroyed</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextDestroyed</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextDestroyed</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>164</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>96</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>113</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>116</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>118</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>142</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>145</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>146</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>148</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>149</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>154</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/servlet/EmbeddedJmxTransLoaderListener</name></clazz><method><name>contextInitialized</name></method><methodDesc>(Ljavax/servlet/ServletContextEvent;)V</methodDesc></location><indexes><int>157</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketWriterPoolFactory</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;I)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketWriterPoolFactory</name></clazz><method><name>destroyObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketWriter;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketWriterPoolFactory</name></clazz><method><name>destroyObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketWriter;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketWriterPoolFactory</name></clazz><method><name>destroyObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketWriter;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketWriterPoolFactory</name></clazz><method><name>destroyObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketWriter;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketWriterPoolFactory</name></clazz><method><name>makeObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;)Lorg/jmxtrans/utils/net/SocketWriter;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketWriterPoolFactory</name></clazz><method><name>makeObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;)Lorg/jmxtrans/utils/net/SocketWriter;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketWriterPoolFactory</name></clazz><method><name>makeObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;)Lorg/jmxtrans/utils/net/SocketWriter;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketWriterPoolFactory</name></clazz><method><name>makeObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;)Lorg/jmxtrans/utils/net/SocketWriter;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketWriterPoolFactory</name></clazz><method><name>makeObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;)Lorg/jmxtrans/utils/net/SocketWriter;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketWriterPoolFactory</name></clazz><method><name>makeObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;)Lorg/jmxtrans/utils/net/SocketWriter;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketWriterPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketWriter;)Z</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketWriterPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketWriter;)Z</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketWriterPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketWriter;)Z</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketWriterPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketWriter;)Z</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketWriterPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketWriter;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketWriterPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketWriter;)Z</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketWriterPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketWriter;)Z</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketWriterPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketWriter;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketWriterPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketWriter;)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketWriterPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketWriter;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketWriterPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketWriter;)Z</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketWriterPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketWriter;)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketWriterPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketWriter;)Z</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketWriterPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketWriter;)Z</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketWriterPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketWriter;)Z</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketWriterPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketWriter;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketWriterPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketWriter;)Z</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketWriterPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketWriter;)Z</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketWriterPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketWriter;)Z</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketWriterPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketWriter;)Z</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketWriterPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketWriter;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketWriterPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketWriter;)Z</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketWriterPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketWriter;)Z</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketWriterPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketWriter;)Z</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketOutputStreamPoolFactory</name></clazz><method><name>destroyObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketOutputStream;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketOutputStreamPoolFactory</name></clazz><method><name>destroyObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketOutputStream;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketOutputStreamPoolFactory</name></clazz><method><name>destroyObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketOutputStream;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketOutputStreamPoolFactory</name></clazz><method><name>destroyObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketOutputStream;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketOutputStreamPoolFactory</name></clazz><method><name>makeObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;)Lorg/jmxtrans/utils/net/SocketOutputStream;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketOutputStreamPoolFactory</name></clazz><method><name>makeObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;)Lorg/jmxtrans/utils/net/SocketOutputStream;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketOutputStreamPoolFactory</name></clazz><method><name>makeObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;)Lorg/jmxtrans/utils/net/SocketOutputStream;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketOutputStreamPoolFactory</name></clazz><method><name>makeObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;)Lorg/jmxtrans/utils/net/SocketOutputStream;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketOutputStreamPoolFactory</name></clazz><method><name>makeObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;)Lorg/jmxtrans/utils/net/SocketOutputStream;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketOutputStreamPoolFactory</name></clazz><method><name>makeObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;)Lorg/jmxtrans/utils/net/SocketOutputStream;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketOutputStreamPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketOutputStream;)Z</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketOutputStreamPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketOutputStream;)Z</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketOutputStreamPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketOutputStream;)Z</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketOutputStreamPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketOutputStream;)Z</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketOutputStreamPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketOutputStream;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketOutputStreamPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketOutputStream;)Z</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketOutputStreamPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketOutputStream;)Z</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketOutputStreamPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketOutputStream;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketOutputStreamPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketOutputStream;)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketOutputStreamPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketOutputStream;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketOutputStreamPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketOutputStream;)Z</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketOutputStreamPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketOutputStream;)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketOutputStreamPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketOutputStream;)Z</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketOutputStreamPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketOutputStream;)Z</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketOutputStreamPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketOutputStream;)Z</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketOutputStreamPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketOutputStream;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketOutputStreamPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketOutputStream;)Z</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketOutputStreamPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketOutputStream;)Z</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketOutputStreamPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketOutputStream;)Z</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketOutputStreamPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketOutputStream;)Z</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketOutputStreamPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketOutputStream;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketOutputStreamPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketOutputStream;)Z</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketOutputStreamPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketOutputStream;)Z</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/SocketOutputStreamPoolFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Lorg/jmxtrans/utils/net/SocketOutputStream;)Z</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/ManagedGenericKeyedObjectPool</name></clazz><method><name>getLifo</name></method><methodDesc>()Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/ManagedGenericKeyedObjectPool</name></clazz><method><name>getLifo</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/ManagedGenericKeyedObjectPool</name></clazz><method><name>getMaxActive</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/ManagedGenericKeyedObjectPool</name></clazz><method><name>getMaxActive</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/ManagedGenericKeyedObjectPool</name></clazz><method><name>getMaxIdle</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/ManagedGenericKeyedObjectPool</name></clazz><method><name>getMaxIdle</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/ManagedGenericKeyedObjectPool</name></clazz><method><name>getMaxTotal</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/ManagedGenericKeyedObjectPool</name></clazz><method><name>getMaxTotal</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/ManagedGenericKeyedObjectPool</name></clazz><method><name>getMaxWait</name></method><methodDesc>()J</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/ManagedGenericKeyedObjectPool</name></clazz><method><name>getMaxWait</name></method><methodDesc>()J</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/ManagedGenericKeyedObjectPool</name></clazz><method><name>getMinEvictableIdleTimeMillis</name></method><methodDesc>()J</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/ManagedGenericKeyedObjectPool</name></clazz><method><name>getMinEvictableIdleTimeMillis</name></method><methodDesc>()J</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/ManagedGenericKeyedObjectPool</name></clazz><method><name>getMinIdle</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/ManagedGenericKeyedObjectPool</name></clazz><method><name>getMinIdle</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/ManagedGenericKeyedObjectPool</name></clazz><method><name>getNumActive</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/ManagedGenericKeyedObjectPool</name></clazz><method><name>getNumActive</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/ManagedGenericKeyedObjectPool</name></clazz><method><name>getNumTestsPerEvictionRun</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/ManagedGenericKeyedObjectPool</name></clazz><method><name>getNumTestsPerEvictionRun</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/ManagedGenericKeyedObjectPool</name></clazz><method><name>getTestOnBorrow</name></method><methodDesc>()Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/ManagedGenericKeyedObjectPool</name></clazz><method><name>getTestOnBorrow</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/ManagedGenericKeyedObjectPool</name></clazz><method><name>getTestOnReturn</name></method><methodDesc>()Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/ManagedGenericKeyedObjectPool</name></clazz><method><name>getTestOnReturn</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/ManagedGenericKeyedObjectPool</name></clazz><method><name>getTestWhileIdle</name></method><methodDesc>()Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/ManagedGenericKeyedObjectPool</name></clazz><method><name>getTestWhileIdle</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/ManagedGenericKeyedObjectPool</name></clazz><method><name>getTimeBetweenEvictionRunsMillis</name></method><methodDesc>()J</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/pool/ManagedGenericKeyedObjectPool</name></clazz><method><name>getTimeBetweenEvictionRunsMillis</name></method><methodDesc>()J</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfigurations</name></method><methodDesc>(Ljava/util/List;)Lorg/jmxtrans/embedded/config/Config;</methodDesc></location><indexes><int>114</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfigurations</name></method><methodDesc>(Ljava/util/List;)Lorg/jmxtrans/embedded/config/Config;</methodDesc></location><indexes><int>123</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfigurations</name></method><methodDesc>(Ljava/util/List;)Lorg/jmxtrans/embedded/config/Config;</methodDesc></location><indexes><int>116</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfigurations</name></method><methodDesc>(Ljava/util/List;)Lorg/jmxtrans/embedded/config/Config;</methodDesc></location><indexes><int>118</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfigurations</name></method><methodDesc>(Ljava/util/List;)Lorg/jmxtrans/embedded/config/Config;</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>loadConfigurations</name></method><methodDesc>(Ljava/util/List;)Lorg/jmxtrans/embedded/config/Config;</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>openResource</name></method><methodDesc>(Ljava/lang/String;)Ljava/io/InputStream;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>openResource</name></method><methodDesc>(Ljava/lang/String;)Ljava/io/InputStream;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>openResource</name></method><methodDesc>(Ljava/lang/String;)Ljava/io/InputStream;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseOutputWritersNode</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/util/List;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseOutputWritersNode</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/util/List;</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseOutputWritersNode</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/util/List;</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseOutputWritersNode</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/util/List;</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/config/ConfigurationParser</name></clazz><method><name>parseOutputWritersNode</name></method><methodDesc>(Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/util/List;</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>146</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>176</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>184</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>148</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>150</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>151</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>178</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>180</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>182</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>183</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/json/PlaceholderEnabledJsonNodeFactory</name></clazz><method><name>textNode</name></method><methodDesc>(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/node/TextNode;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/json/PlaceholderEnabledJsonNodeFactory</name></clazz><method><name>textNode</name></method><methodDesc>(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/node/TextNode;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/json/PlaceholderEnabledJsonNodeFactory</name></clazz><method><name>textNode</name></method><methodDesc>(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/node/TextNode;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/json/PlaceholderEnabledJsonNodeFactory</name></clazz><method><name>textNode</name></method><methodDesc>(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/node/TextNode;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/json/PlaceholderEnabledJsonNodeFactory</name></clazz><method><name>textNode</name></method><methodDesc>(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/node/TextNode;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/json/PlaceholderEnabledJsonNodeFactory</name></clazz><method><name>textNode</name></method><methodDesc>(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/node/TextNode;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/util/json/PlaceholderEnabledJsonNodeFactory</name></clazz><method><name>textNode</name></method><methodDesc>(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/node/TextNode;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>124</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans</name></clazz><method><name>afterPropertiesSet</name></method><methodDesc>()V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans</name></clazz><method><name>destroy</name></method><methodDesc>()V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/spring/SpringEmbeddedJmxTrans</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/embedded/EmbeddedJmxTrans$2</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
