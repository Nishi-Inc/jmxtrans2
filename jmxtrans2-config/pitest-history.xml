6
<classHistory><id hierarchicalHash="ab027b"><classId hash="11207291"><name><name>org/jmxtrans/config/ConfigParser</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="4ef15571"><classId hash="1324438897"><name><name>org/jmxtrans/config/Interval</name></name></classId></id><coverageId>ce3f26bb</coverageId></classHistory>
<classHistory><id hierarchicalHash="ce3f26bb"><classId hash="3460245179"><name><name>org/jmxtrans/config/XmlConfigParserTest</name></name></classId></id><coverageId>ce3f26bb</coverageId></classHistory>
<classHistory><id hierarchicalHash="41899957"><classId hash="1099536727"><name><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></name></classId></id><coverageId>ce3f26bb</coverageId></classHistory>
<classHistory><id hierarchicalHash="d450c08f"><classId hash="3562061967"><name><name>org/jmxtrans/config/Invocation</name></name></classId></id><coverageId>ce3f26bb</coverageId></classHistory>
<classHistory><id hierarchicalHash="a5e54bf4"><classId hash="2783267828"><name><name>org/jmxtrans/config/XmlConfigParser</name></name></classId></id><coverageId>ce3f26bb</coverageId></classHistory>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseInterval</name></method><methodDesc>()Lorg/jmxtrans/config/Interval;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.intervalIsReadCorrectly(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseInterval</name></method><methodDesc>()Lorg/jmxtrans/config/Interval;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.intervalMustBeAnInteger(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseInterval</name></method><methodDesc>()Lorg/jmxtrans/config/Interval;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.intervalMustBeAnInteger(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseInterval</name></method><methodDesc>()Lorg/jmxtrans/config/Interval;</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.multipleIntervalsAreNotAllowed(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseInterval</name></method><methodDesc>()Lorg/jmxtrans/config/Interval;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.intervalMustBeAnInteger(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseInterval</name></method><methodDesc>()Lorg/jmxtrans/config/Interval;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.multipleIntervalsAreNotAllowed(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseInterval</name></method><methodDesc>()Lorg/jmxtrans/config/Interval;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.multipleIntervalsAreNotAllowed(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseInterval</name></method><methodDesc>()Lorg/jmxtrans/config/Interval;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.intervalMustBeAnInteger(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseInterval</name></method><methodDesc>()Lorg/jmxtrans/config/Interval;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.intervalMustBeAnInteger(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseInterval</name></method><methodDesc>()Lorg/jmxtrans/config/Interval;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.intervalIsReadCorrectly(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseInterval</name></method><methodDesc>()Lorg/jmxtrans/config/Interval;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.intervalMustBeAnInteger(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseInterval</name></method><methodDesc>()Lorg/jmxtrans/config/Interval;</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.intervalMustBeAnInteger(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseInterval</name></method><methodDesc>()Lorg/jmxtrans/config/Interval;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.intervalMustBeAnInteger(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseInterval</name></method><methodDesc>()Lorg/jmxtrans/config/Interval;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.intervalMustBeAnInteger(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseInterval</name></method><methodDesc>()Lorg/jmxtrans/config/Interval;</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseInterval</name></method><methodDesc>()Lorg/jmxtrans/config/Interval;</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.intervalIsNullWhenNotInConfig(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseInvocations</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.emptyListReturnedWhenNoInvocationInConfig(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseInvocations</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.emptyListReturnedWhenNoInvocationInConfig(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseInvocations</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleInvocation(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseInvocations</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleInvocation(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseInvocations</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleInvocation(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseInvocations</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleInvocation(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseInvocations</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleInvocation(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseInvocations</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.emptyListReturnedWhenNoInvocationInConfig(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseInvocations</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.emptyListReturnedWhenNoInvocationInConfig(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseInvocations</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleInvocation(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseInvocations</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleInvocation(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseInvocations</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleInvocation(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseInvocations</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleInvocation(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseInvocations</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleInvocation(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseInvocations</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleInvocation(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseInvocations</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.emptyListReturnedWhenNoInvocationInConfig(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseInvocations</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleInvocation(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseInvocations</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.emptyListReturnedWhenNoInvocationInConfig(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseInvocations</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.emptyListReturnedWhenNoInvocationInConfig(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseOutputWriters</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleOutputWriter(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseOutputWriters</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleOutputWriter(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseOutputWriters</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.emptyListReturnedWhenNoOutputWriterInConfig(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseOutputWriters</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseOutputWriters</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleOutputWriter(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseOutputWriters</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleOutputWriter(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseOutputWriters</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>134</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseOutputWriters</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>141</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseOutputWriters</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseOutputWriters</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>146</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleOutputWriter(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseOutputWriters</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleOutputWriter(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseOutputWriters</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseOutputWriters</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleOutputWriter(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseOutputWriters</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleOutputWriter(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseOutputWriters</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleOutputWriter(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseOutputWriters</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.emptyListReturnedWhenNoOutputWriterInConfig(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseOutputWriters</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleOutputWriter(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseOutputWriters</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleOutputWriter(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseOutputWriters</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleOutputWriter(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseOutputWriters</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseOutputWriters</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleOutputWriter(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseOutputWriters</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleOutputWriter(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseOutputWriters</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleOutputWriter(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseOutputWriters</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseOutputWriters</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseOutputWriters</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>90</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseOutputWriters</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseOutputWriters</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseOutputWriters</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>96</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseOutputWriters</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleOutputWriter(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseOutputWriters</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>136</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseOutputWriters</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>138</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseOutputWriters</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>139</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseOutputWriters</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>152</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.emptyListReturnedWhenNoOutputWriterInConfig(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseOutputWriters</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseOutputWriters</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleOutputWriter(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseOutputWriters</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleOutputWriter(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseOutputWriters</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseOutputWriters</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleOutputWriter(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseOutputWriters</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleOutputWriter(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseOutputWriters</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.emptyListReturnedWhenNoOutputWriterInConfig(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseOutputWriters</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>114</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseQueries</name></method><methodDesc>(Lorg/jmxtrans/query/ResultNameStrategy;)Ljava/util/Collection;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.emptyListReturnedWhenNoQueryInConfig(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseQueries</name></method><methodDesc>(Lorg/jmxtrans/query/ResultNameStrategy;)Ljava/util/Collection;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.emptyListReturnedWhenNoQueryInConfig(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseQueries</name></method><methodDesc>(Lorg/jmxtrans/query/ResultNameStrategy;)Ljava/util/Collection;</methodDesc></location><indexes><int>102</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseQueries</name></method><methodDesc>(Lorg/jmxtrans/query/ResultNameStrategy;)Ljava/util/Collection;</methodDesc></location><indexes><int>116</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseQueries</name></method><methodDesc>(Lorg/jmxtrans/query/ResultNameStrategy;)Ljava/util/Collection;</methodDesc></location><indexes><int>130</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleQuery(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseQueries</name></method><methodDesc>(Lorg/jmxtrans/query/ResultNameStrategy;)Ljava/util/Collection;</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleQuery(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseQueries</name></method><methodDesc>(Lorg/jmxtrans/query/ResultNameStrategy;)Ljava/util/Collection;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleQuery(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseQueries</name></method><methodDesc>(Lorg/jmxtrans/query/ResultNameStrategy;)Ljava/util/Collection;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.emptyListReturnedWhenNoQueryInConfig(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseQueries</name></method><methodDesc>(Lorg/jmxtrans/query/ResultNameStrategy;)Ljava/util/Collection;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleQuery(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseQueries</name></method><methodDesc>(Lorg/jmxtrans/query/ResultNameStrategy;)Ljava/util/Collection;</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleQuery(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseQueries</name></method><methodDesc>(Lorg/jmxtrans/query/ResultNameStrategy;)Ljava/util/Collection;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.emptyListReturnedWhenNoQueryInConfig(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseQueries</name></method><methodDesc>(Lorg/jmxtrans/query/ResultNameStrategy;)Ljava/util/Collection;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleQuery(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseQueries</name></method><methodDesc>(Lorg/jmxtrans/query/ResultNameStrategy;)Ljava/util/Collection;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleQuery(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseQueries</name></method><methodDesc>(Lorg/jmxtrans/query/ResultNameStrategy;)Ljava/util/Collection;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleQuery(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseQueries</name></method><methodDesc>(Lorg/jmxtrans/query/ResultNameStrategy;)Ljava/util/Collection;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleQuery(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseQueries</name></method><methodDesc>(Lorg/jmxtrans/query/ResultNameStrategy;)Ljava/util/Collection;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleQuery(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseQueries</name></method><methodDesc>(Lorg/jmxtrans/query/ResultNameStrategy;)Ljava/util/Collection;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleQuery(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseQueries</name></method><methodDesc>(Lorg/jmxtrans/query/ResultNameStrategy;)Ljava/util/Collection;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleQuery(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseQueries</name></method><methodDesc>(Lorg/jmxtrans/query/ResultNameStrategy;)Ljava/util/Collection;</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleQuery(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseQueries</name></method><methodDesc>(Lorg/jmxtrans/query/ResultNameStrategy;)Ljava/util/Collection;</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleQuery(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseQueries</name></method><methodDesc>(Lorg/jmxtrans/query/ResultNameStrategy;)Ljava/util/Collection;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleQuery(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseQueries</name></method><methodDesc>(Lorg/jmxtrans/query/ResultNameStrategy;)Ljava/util/Collection;</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleQuery(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseQueries</name></method><methodDesc>(Lorg/jmxtrans/query/ResultNameStrategy;)Ljava/util/Collection;</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleQuery(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseQueries</name></method><methodDesc>(Lorg/jmxtrans/query/ResultNameStrategy;)Ljava/util/Collection;</methodDesc></location><indexes><int>104</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseQueries</name></method><methodDesc>(Lorg/jmxtrans/query/ResultNameStrategy;)Ljava/util/Collection;</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseQueries</name></method><methodDesc>(Lorg/jmxtrans/query/ResultNameStrategy;)Ljava/util/Collection;</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseQueries</name></method><methodDesc>(Lorg/jmxtrans/query/ResultNameStrategy;)Ljava/util/Collection;</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseQueries</name></method><methodDesc>(Lorg/jmxtrans/query/ResultNameStrategy;)Ljava/util/Collection;</methodDesc></location><indexes><int>112</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseQueries</name></method><methodDesc>(Lorg/jmxtrans/query/ResultNameStrategy;)Ljava/util/Collection;</methodDesc></location><indexes><int>114</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseQueries</name></method><methodDesc>(Lorg/jmxtrans/query/ResultNameStrategy;)Ljava/util/Collection;</methodDesc></location><indexes><int>115</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseQueries</name></method><methodDesc>(Lorg/jmxtrans/query/ResultNameStrategy;)Ljava/util/Collection;</methodDesc></location><indexes><int>136</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleQuery(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseQueries</name></method><methodDesc>(Lorg/jmxtrans/query/ResultNameStrategy;)Ljava/util/Collection;</methodDesc></location><indexes><int>146</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.emptyListReturnedWhenNoQueryInConfig(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseQueries</name></method><methodDesc>(Lorg/jmxtrans/query/ResultNameStrategy;)Ljava/util/Collection;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleQuery(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseQueries</name></method><methodDesc>(Lorg/jmxtrans/query/ResultNameStrategy;)Ljava/util/Collection;</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleQuery(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseQueries</name></method><methodDesc>(Lorg/jmxtrans/query/ResultNameStrategy;)Ljava/util/Collection;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseQueries</name></method><methodDesc>(Lorg/jmxtrans/query/ResultNameStrategy;)Ljava/util/Collection;</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseQueries</name></method><methodDesc>(Lorg/jmxtrans/query/ResultNameStrategy;)Ljava/util/Collection;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleQuery(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseQueries</name></method><methodDesc>(Lorg/jmxtrans/query/ResultNameStrategy;)Ljava/util/Collection;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.emptyListReturnedWhenNoQueryInConfig(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseQueries</name></method><methodDesc>(Lorg/jmxtrans/query/ResultNameStrategy;)Ljava/util/Collection;</methodDesc></location><indexes><int>147</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.emptyListReturnedWhenNoQueryInConfig(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseResultNameStrategy</name></method><methodDesc>()Lorg/jmxtrans/query/ResultNameStrategy;</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.resultNameStrategyWithoutParametersIsInstantiated(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseResultNameStrategy</name></method><methodDesc>()Lorg/jmxtrans/query/ResultNameStrategy;</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.resultNameStrategyWithoutClassIsInvalid(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseResultNameStrategy</name></method><methodDesc>()Lorg/jmxtrans/query/ResultNameStrategy;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseResultNameStrategy</name></method><methodDesc>()Lorg/jmxtrans/query/ResultNameStrategy;</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseResultNameStrategy</name></method><methodDesc>()Lorg/jmxtrans/query/ResultNameStrategy;</methodDesc></location><indexes><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseResultNameStrategy</name></method><methodDesc>()Lorg/jmxtrans/query/ResultNameStrategy;</methodDesc></location><indexes><int>135</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.multipleResultNameStrategyAreNotAllowed(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseResultNameStrategy</name></method><methodDesc>()Lorg/jmxtrans/query/ResultNameStrategy;</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.multipleResultNameStrategyAreNotAllowed(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseResultNameStrategy</name></method><methodDesc>()Lorg/jmxtrans/query/ResultNameStrategy;</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseResultNameStrategy</name></method><methodDesc>()Lorg/jmxtrans/query/ResultNameStrategy;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.resultNameStrategyWithoutClassIsInvalid(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseResultNameStrategy</name></method><methodDesc>()Lorg/jmxtrans/query/ResultNameStrategy;</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseResultNameStrategy</name></method><methodDesc>()Lorg/jmxtrans/query/ResultNameStrategy;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.resultNameStrategyWithoutParametersIsInstantiated(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseResultNameStrategy</name></method><methodDesc>()Lorg/jmxtrans/query/ResultNameStrategy;</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.resultNameStrategyWithoutParametersIsInstantiated(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseResultNameStrategy</name></method><methodDesc>()Lorg/jmxtrans/query/ResultNameStrategy;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.multipleResultNameStrategyAreNotAllowed(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseResultNameStrategy</name></method><methodDesc>()Lorg/jmxtrans/query/ResultNameStrategy;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.multipleResultNameStrategyAreNotAllowed(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseResultNameStrategy</name></method><methodDesc>()Lorg/jmxtrans/query/ResultNameStrategy;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.resultNameStrategyWithoutClassIsInvalid(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseResultNameStrategy</name></method><methodDesc>()Lorg/jmxtrans/query/ResultNameStrategy;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.resultNameStrategyWithoutClassIsInvalid(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseResultNameStrategy</name></method><methodDesc>()Lorg/jmxtrans/query/ResultNameStrategy;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseResultNameStrategy</name></method><methodDesc>()Lorg/jmxtrans/query/ResultNameStrategy;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.resultNameStrategyWithoutParametersIsInstantiated(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseResultNameStrategy</name></method><methodDesc>()Lorg/jmxtrans/query/ResultNameStrategy;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.resultNameStrategyWithoutParametersIsInstantiated(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseResultNameStrategy</name></method><methodDesc>()Lorg/jmxtrans/query/ResultNameStrategy;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.resultNameStrategyWithoutParametersIsInstantiated(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseResultNameStrategy</name></method><methodDesc>()Lorg/jmxtrans/query/ResultNameStrategy;</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseResultNameStrategy</name></method><methodDesc>()Lorg/jmxtrans/query/ResultNameStrategy;</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseResultNameStrategy</name></method><methodDesc>()Lorg/jmxtrans/query/ResultNameStrategy;</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseResultNameStrategy</name></method><methodDesc>()Lorg/jmxtrans/query/ResultNameStrategy;</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseResultNameStrategy</name></method><methodDesc>()Lorg/jmxtrans/query/ResultNameStrategy;</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseResultNameStrategy</name></method><methodDesc>()Lorg/jmxtrans/query/ResultNameStrategy;</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseResultNameStrategy</name></method><methodDesc>()Lorg/jmxtrans/query/ResultNameStrategy;</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseResultNameStrategy</name></method><methodDesc>()Lorg/jmxtrans/query/ResultNameStrategy;</methodDesc></location><indexes><int>123</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseResultNameStrategy</name></method><methodDesc>()Lorg/jmxtrans/query/ResultNameStrategy;</methodDesc></location><indexes><int>124</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseResultNameStrategy</name></method><methodDesc>()Lorg/jmxtrans/query/ResultNameStrategy;</methodDesc></location><indexes><int>137</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.multipleResultNameStrategyAreNotAllowed(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseResultNameStrategy</name></method><methodDesc>()Lorg/jmxtrans/query/ResultNameStrategy;</methodDesc></location><indexes><int>139</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseResultNameStrategy</name></method><methodDesc>()Lorg/jmxtrans/query/ResultNameStrategy;</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.multipleResultNameStrategyAreNotAllowed(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseResultNameStrategy</name></method><methodDesc>()Lorg/jmxtrans/query/ResultNameStrategy;</methodDesc></location><indexes><int>142</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.multipleResultNameStrategyAreNotAllowed(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseResultNameStrategy</name></method><methodDesc>()Lorg/jmxtrans/query/ResultNameStrategy;</methodDesc></location><indexes><int>143</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseResultNameStrategy</name></method><methodDesc>()Lorg/jmxtrans/query/ResultNameStrategy;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseResultNameStrategy</name></method><methodDesc>()Lorg/jmxtrans/query/ResultNameStrategy;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.resultNameStrategyWithoutParametersIsInstantiated(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseResultNameStrategy</name></method><methodDesc>()Lorg/jmxtrans/query/ResultNameStrategy;</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseResultNameStrategy</name></method><methodDesc>()Lorg/jmxtrans/query/ResultNameStrategy;</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.resultNameStrategyWithoutParametersIsInstantiated(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseResultNameStrategy</name></method><methodDesc>()Lorg/jmxtrans/query/ResultNameStrategy;</methodDesc></location><indexes><int>150</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.resultNameStrategyIsNullWhenNotInConfig(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/XmlConfigParser</name></clazz><method><name>parseResultNameStrategy</name></method><methodDesc>()Lorg/jmxtrans/query/ResultNameStrategy;</methodDesc></location><indexes><int>105</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>114</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleInvocation(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleInvocation(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleInvocation(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleInvocation(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleInvocation(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleInvocation(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleInvocation(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleInvocation(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleInvocation(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleInvocation(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>113</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleInvocation(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleInvocation(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleInvocation(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleInvocation(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleInvocation(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleInvocation(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleInvocation(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>112</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleInvocation(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleInvocation(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleInvocation(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleInvocation(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleInvocation(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>113</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleInvocation(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleInvocation(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleInvocation(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleInvocation(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleInvocation(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>113</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleInvocation(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>104</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>115</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.canParseSingleInvocation(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>90</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>invoke</name></method><methodDesc>(Ljavax/management/MBeanServer;Lorg/jmxtrans/output/OutputWriter;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>invoke</name></method><methodDesc>(Ljavax/management/MBeanServer;Lorg/jmxtrans/output/OutputWriter;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>invoke</name></method><methodDesc>(Ljavax/management/MBeanServer;Lorg/jmxtrans/output/OutputWriter;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>invoke</name></method><methodDesc>(Ljavax/management/MBeanServer;Lorg/jmxtrans/output/OutputWriter;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>invoke</name></method><methodDesc>(Ljavax/management/MBeanServer;Lorg/jmxtrans/output/OutputWriter;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>invoke</name></method><methodDesc>(Ljavax/management/MBeanServer;Lorg/jmxtrans/output/OutputWriter;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>invoke</name></method><methodDesc>(Ljavax/management/MBeanServer;Lorg/jmxtrans/output/OutputWriter;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>invoke</name></method><methodDesc>(Ljavax/management/MBeanServer;Lorg/jmxtrans/output/OutputWriter;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>invoke</name></method><methodDesc>(Ljavax/management/MBeanServer;Lorg/jmxtrans/output/OutputWriter;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>invoke</name></method><methodDesc>(Ljavax/management/MBeanServer;Lorg/jmxtrans/output/OutputWriter;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>invoke</name></method><methodDesc>(Ljavax/management/MBeanServer;Lorg/jmxtrans/output/OutputWriter;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Invocation</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/output/OutputWriter;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/output/OutputWriter;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/output/OutputWriter;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>incrementOutputWriterFailures</name></method><methodDesc>()V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>incrementOutputWriterFailures</name></method><methodDesc>()V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>incrementOutputWriterFailures</name></method><methodDesc>()V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>incrementOutputWriterFailures</name></method><methodDesc>()V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>incrementOutputWriterFailures</name></method><methodDesc>()V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>incrementOutputWriterFailures</name></method><methodDesc>()V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>incrementOutputWriterFailures</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>incrementOutputWriterFailures</name></method><methodDesc>()V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>incrementOutputWriterFailures</name></method><methodDesc>()V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>incrementOutputWriterFailures</name></method><methodDesc>()V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>incrementOutputWriterFailures</name></method><methodDesc>()V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>incrementOutputWriterSuccess</name></method><methodDesc>()V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>incrementOutputWriterSuccess</name></method><methodDesc>()V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>incrementOutputWriterSuccess</name></method><methodDesc>()V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>incrementOutputWriterSuccess</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>incrementOutputWriterSuccess</name></method><methodDesc>()V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>incrementOutputWriterSuccess</name></method><methodDesc>()V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>incrementOutputWriterSuccess</name></method><methodDesc>()V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>postCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>postCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>postCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>postCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>postCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>postCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>postCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>postCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>postConstruct</name></method><methodDesc>(Ljava/util/Map;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>postConstruct</name></method><methodDesc>(Ljava/util/Map;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>postConstruct</name></method><methodDesc>(Ljava/util/Map;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>preCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>preCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>preCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>preCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>preCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>preCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>preCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>preCollect</name></method><methodDesc>()V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>preDestroy</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>write</name></method><methodDesc>(Ljava/lang/Iterable;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>write</name></method><methodDesc>(Ljava/lang/Iterable;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>write</name></method><methodDesc>(Ljava/lang/Iterable;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>write</name></method><methodDesc>(Ljava/lang/Iterable;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>write</name></method><methodDesc>(Ljava/lang/Iterable;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>write</name></method><methodDesc>(Ljava/lang/Iterable;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>write</name></method><methodDesc>(Ljava/lang/Iterable;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/OutputWriterCircuitBreakerDecorator</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Interval</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(ILjava/util/concurrent/TimeUnit;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.intervalIsReadCorrectly(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.intervalIsReadCorrectly(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.intervalIsReadCorrectly(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.intervalIsReadCorrectly(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.intervalIsReadCorrectly(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.intervalIsReadCorrectly(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.intervalIsReadCorrectly(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.intervalIsReadCorrectly(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.intervalIsReadCorrectly(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.intervalIsReadCorrectly(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.intervalIsReadCorrectly(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.config.XmlConfigParserTest.intervalIsReadCorrectly(org.jmxtrans.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Interval</name></clazz><method><name>getTimeUnit</name></method><methodDesc>()Ljava/util/concurrent/TimeUnit;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Interval</name></clazz><method><name>getValue</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Interval</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Interval</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Interval</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Interval</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Interval</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Interval</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Interval</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Interval</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/config/Interval</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
