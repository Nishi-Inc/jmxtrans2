13
<classHistory><id hierarchicalHash="81decdea"><classId hash="2178862570"><name><name>org/jmxtrans/scheduler/QueryProcessorTest</name></name></classId></id><coverageId>81decdea</coverageId></classHistory>
<classHistory><id hierarchicalHash="6359d162"><classId hash="1388990983"><name><name>org/jmxtrans/scheduler/NaiveScheduler$State</name></name></classId></id><coverageId>9847ad84</coverageId></classHistory>
<classHistory><id hierarchicalHash="5025f321"><classId hash="1344664353"><name><name>org/jmxtrans/scheduler/DeadlineRunnable</name></name></classId></id><coverageId>1a733c3fa</coverageId></classHistory>
<classHistory><id hierarchicalHash="9cd996d3"><classId hash="2631505619"><name><name>org/jmxtrans/scheduler/DeadlineRunnableTest</name></name></classId></id><coverageId>9cd996d3</coverageId></classHistory>
<classHistory><id hierarchicalHash="cf617d3f"><classId hash="559013879"><name><name>org/jmxtrans/scheduler/ResultProcessor$Processor</name></name></classId></id><coverageId>887b5f3d</coverageId></classHistory>
<classHistory><id hierarchicalHash="887b5f3d"><classId hash="2289786685"><name><name>org/jmxtrans/scheduler/ResultProcessorTest</name></name></classId></id><coverageId>887b5f3d</coverageId></classHistory>
<classHistory><id hierarchicalHash="108f7f5b"><classId hash="277839707"><name><name>org/jmxtrans/scheduler/NaiveScheduler</name></name></classId></id><coverageId>9847ad84</coverageId></classHistory>
<classHistory><id hierarchicalHash="13354514c"><classId hash="3326690039"><name><name>org/jmxtrans/scheduler/QueryProcessor$Processor</name></name></classId></id><coverageId>81decdea</coverageId></classHistory>
<classHistory><id hierarchicalHash="5b7b1de1"><classId hash="1534795233"><name><name>org/jmxtrans/scheduler/QueryGeneratorTest</name></name></classId></id><coverageId>5b7b1de1</coverageId></classHistory>
<classHistory><id hierarchicalHash="9847ad84"><classId hash="2554834308"><name><name>org/jmxtrans/scheduler/NaiveSchedulerTest</name></name></classId></id><coverageId>9847ad84</coverageId></classHistory>
<classHistory><id hierarchicalHash="5de9aa27"><classId hash="1575594535"><name><name>org/jmxtrans/scheduler/ResultProcessor</name></name></classId></id><coverageId>887b5f3d</coverageId></classHistory>
<classHistory><id hierarchicalHash="206a2940"><classId hash="543828288"><name><name>org/jmxtrans/scheduler/QueryGenerator</name></name></classId></id><coverageId>5b7b1de1</coverageId></classHistory>
<classHistory><id hierarchicalHash="1ce51b34"><classId hash="484776756"><name><name>org/jmxtrans/scheduler/QueryProcessor</name></name></classId></id><coverageId>81decdea</coverageId></classHistory>
<result><id><location><clazz><name>org/jmxtrans/scheduler/DeadlineRunnable</name></clazz><method><name>getDeadline</name></method><methodDesc>()J</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.QueryProcessorTest.queryAreProcessed(org.jmxtrans.scheduler.QueryProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/DeadlineRunnable</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/DeadlineRunnable</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.DeadlineRunnableTest.jodIsNotRunAfterDeadline(org.jmxtrans.scheduler.DeadlineRunnableTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/DeadlineRunnable</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.DeadlineRunnableTest.jodIsNotRunAfterDeadline(org.jmxtrans.scheduler.DeadlineRunnableTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/DeadlineRunnable</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.DeadlineRunnableTest.jodIsNotRunAfterDeadline(org.jmxtrans.scheduler.DeadlineRunnableTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/DeadlineRunnable</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.DeadlineRunnableTest.jobIsRunBeforeDeadline(org.jmxtrans.scheduler.DeadlineRunnableTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/DeadlineRunnable</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.DeadlineRunnableTest.jobIsRunBeforeDeadline(org.jmxtrans.scheduler.DeadlineRunnableTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/NaiveScheduler</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.NaiveSchedulerTest.cannotStartServiceTwice(org.jmxtrans.scheduler.NaiveSchedulerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/NaiveScheduler</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.NaiveSchedulerTest.nothingIsRunningAfterStop(org.jmxtrans.scheduler.NaiveSchedulerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/NaiveScheduler</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.NaiveSchedulerTest.nothingIsRunningAfterStop(org.jmxtrans.scheduler.NaiveSchedulerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/NaiveScheduler</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.NaiveSchedulerTest.cannotStartServiceTwice(org.jmxtrans.scheduler.NaiveSchedulerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/NaiveScheduler</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.NaiveSchedulerTest.nothingIsRunningAfterStop(org.jmxtrans.scheduler.NaiveSchedulerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/NaiveScheduler</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/NaiveScheduler</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.NaiveSchedulerTest.cannotStopServiceIfNotRunning(org.jmxtrans.scheduler.NaiveSchedulerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/NaiveScheduler</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.NaiveSchedulerTest.cannotStopServiceIfNotRunning(org.jmxtrans.scheduler.NaiveSchedulerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/NaiveScheduler</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.NaiveSchedulerTest.cannotStopServiceIfNotRunning(org.jmxtrans.scheduler.NaiveSchedulerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/NaiveScheduler</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/NaiveScheduler</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.NaiveSchedulerTest.nothingIsRunningAfterStop(org.jmxtrans.scheduler.NaiveSchedulerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/NaiveScheduler</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/NaiveScheduler</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/NaiveScheduler</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/NaiveScheduler</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.NaiveSchedulerTest.cannotStopServiceIfNotRunning(org.jmxtrans.scheduler.NaiveSchedulerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/NaiveScheduler</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.NaiveSchedulerTest.cannotStopServiceIfNotRunning(org.jmxtrans.scheduler.NaiveSchedulerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/NaiveScheduler</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/NaiveScheduler</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.NaiveSchedulerTest.nothingIsRunningAfterStop(org.jmxtrans.scheduler.NaiveSchedulerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/NaiveScheduler</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/NaiveScheduler</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.NaiveSchedulerTest.nothingIsRunningAfterStop(org.jmxtrans.scheduler.NaiveSchedulerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/NaiveScheduler</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.NaiveSchedulerTest.nothingIsRunningAfterStop(org.jmxtrans.scheduler.NaiveSchedulerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/NaiveScheduler</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.NaiveSchedulerTest.nothingIsRunningAfterStop(org.jmxtrans.scheduler.NaiveSchedulerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/QueryGenerator</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;Lorg/jmxtrans/utils/time/Interval;Ljava/lang/Iterable;Lorg/jmxtrans/scheduler/QueryProcessor;Ljava/util/concurrent/ScheduledExecutorService;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.QueryGeneratorTest.queryAreEnqueued(org.jmxtrans.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.QueryGeneratorTest.nextTaskIsScheduled(org.jmxtrans.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.QueryGeneratorTest.queryAreEnqueued(org.jmxtrans.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.QueryGeneratorTest.nextTaskIsScheduled(org.jmxtrans.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.QueryGeneratorTest.queryAreEnqueued(org.jmxtrans.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.QueryGeneratorTest.queryAreEnqueued(org.jmxtrans.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.QueryGeneratorTest.queryAreEnqueued(org.jmxtrans.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.QueryGeneratorTest.queryAreEnqueued(org.jmxtrans.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.QueryGeneratorTest.nextTaskIsScheduled(org.jmxtrans.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.QueryGeneratorTest.nextTaskIsScheduled(org.jmxtrans.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.QueryGeneratorTest.queryAreEnqueued(org.jmxtrans.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.QueryGeneratorTest.nextTaskIsScheduled(org.jmxtrans.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.QueryGeneratorTest.queryAreEnqueued(org.jmxtrans.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.QueryGeneratorTest.nextTaskIsNotScheduledIfGeneratorIsStopped(org.jmxtrans.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.QueryGeneratorTest.queryAreEnqueued(org.jmxtrans.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/QueryGenerator</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.QueryGeneratorTest.nextTaskIsScheduled(org.jmxtrans.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/QueryGenerator</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.QueryGeneratorTest.nextTaskIsScheduled(org.jmxtrans.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/QueryGenerator</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.QueryGeneratorTest.nextTaskIsNotScheduledIfGeneratorIsStopped(org.jmxtrans.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/QueryProcessor</name></clazz><method><name>process</name></method><methodDesc>(JLorg/jmxtrans/query/embedded/Query;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.QueryProcessorTest.queryAreProcessed(org.jmxtrans.scheduler.QueryProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/QueryProcessor</name></clazz><method><name>process</name></method><methodDesc>(JLorg/jmxtrans/query/embedded/Query;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.QueryProcessorTest.queryAreProcessed(org.jmxtrans.scheduler.QueryProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/QueryProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.QueryProcessorTest.queryAreProcessed(org.jmxtrans.scheduler.QueryProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/QueryProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/QueryProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.QueryProcessorTest.queryAreProcessed(org.jmxtrans.scheduler.QueryProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/QueryProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.QueryProcessorTest.queryAreProcessed(org.jmxtrans.scheduler.QueryProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/QueryProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.QueryProcessorTest.queryAreProcessed(org.jmxtrans.scheduler.QueryProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/QueryProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/QueryProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.QueryProcessorTest.queryAreProcessed(org.jmxtrans.scheduler.QueryProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/QueryProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.QueryProcessorTest.queryAreProcessed(org.jmxtrans.scheduler.QueryProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/QueryProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/QueryProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.QueryProcessorTest.queryAreProcessed(org.jmxtrans.scheduler.QueryProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/QueryProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.QueryProcessorTest.queryAreProcessed(org.jmxtrans.scheduler.QueryProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/ResultProcessor</name></clazz><method><name>writeResults</name></method><methodDesc>(JLjava/util/concurrent/BlockingQueue;Lorg/jmxtrans/output/OutputWriter;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.ResultProcessorTest.resultsAreProcessed(org.jmxtrans.scheduler.ResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/ResultProcessor</name></clazz><method><name>writeResults</name></method><methodDesc>(JLjava/util/concurrent/BlockingQueue;Lorg/jmxtrans/output/OutputWriter;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.ResultProcessorTest.resultsAreProcessed(org.jmxtrans.scheduler.ResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/ResultProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.scheduler.ResultProcessorTest.resultsAreProcessed(org.jmxtrans.scheduler.ResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/ResultProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/ResultProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/scheduler/DeadlineRunnable</name></clazz><method><name>getClock</name></method><methodDesc>()Lorg/jmxtrans/utils/time/Clock;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
