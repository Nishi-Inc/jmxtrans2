12
<classHistory><id hierarchicalHash="ea12bc35"><classId hash="3927096373"><name><name>org/jmxtrans/query/ResultNameStrategy</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="3279c5f5"><classId hash="846841333"><name><name>org/jmxtrans/query/embedded/QueryMBean</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="8bbb9b2a"><classId hash="1238450888"><name><name>org/jmxtrans/query/embedded/QueryAttribute$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="e53bb636"><classId hash="3845895734"><name><name>org/jmxtrans/query/Query</name></name></classId></id><coverageId>dab0b18e</coverageId></classHistory>
<classHistory><id hierarchicalHash="182b6283"><classId hash="405496451"><name><name>org/jmxtrans/query/embedded/QueryTest</name></name></classId></id><coverageId>182b6283</coverageId></classHistory>
<classHistory><id hierarchicalHash="19460029"><classId hash="424017961"><name><name>org/jmxtrans/query/embedded/Query</name></name></classId></id><coverageId>182b6283</coverageId></classHistory>
<classHistory><id hierarchicalHash="5ced756a"><classId hash="453188872"><name><name>org/jmxtrans/query/embedded/QueryAttribute$Builder</name></name></classId></id><coverageId>182b6283</coverageId></classHistory>
<classHistory><id hierarchicalHash="71d88251"><classId hash="1386224833"><name><name>org/jmxtrans/query/embedded/ResultNameStrategy$StaticEvaluator</name></name></classId></id><coverageId>10b0d4da9</coverageId></classHistory>
<classHistory><id hierarchicalHash="1f386590"><classId hash="523789712"><name><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></name></classId></id><coverageId>10b0d4da9</coverageId></classHistory>
<classHistory><id hierarchicalHash="41ea5862"><classId hash="1105877090"><name><name>org/jmxtrans/query/embedded/QueryAttribute</name></name></classId></id><coverageId>182b6283</coverageId></classHistory>
<classHistory><id hierarchicalHash="f2e1eb26"><classId hash="4074892070"><name><name>org/jmxtrans/query/embedded/ResultNameStrategyTest</name></name></classId></id><coverageId>f2e1eb26</coverageId></classHistory>
<classHistory><id hierarchicalHash="dab0b18e"><classId hash="3669012878"><name><name>org/jmxtrans/query/QueryTest</name></name></classId></id><coverageId>dab0b18e</coverageId></classHistory>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>90</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>105</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>getExpressionEvaluators</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>getResultName</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/query/embedded/QueryAttribute;)Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>getResultName</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/query/embedded/QueryAttribute;)Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>getResultName</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/query/embedded/QueryAttribute;)Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>getResultName</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/query/embedded/QueryAttribute;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>getResultName</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/query/embedded/QueryAttribute;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>getResultName</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/query/embedded/QueryAttribute;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>getResultName</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/query/embedded/QueryAttribute;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>getResultName</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/query/embedded/QueryAttribute;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>registerExpressionEvaluator</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>registerExpressionEvaluator</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>registerExpressionEvaluator</name></method><methodDesc>(Ljava/lang/String;Ljava/util/concurrent/Callable;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>169</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>148</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>154</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>155</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>113</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>165</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>186</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>187</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>150</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>136</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>146</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>250</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>101</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>229</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>235</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>102</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>154</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>236</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>169</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>123</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>138</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>142</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>145</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>156</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>163</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>194</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>246</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>279</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>169</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>169</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>280</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>231</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Lorg/jmxtrans/query/ResultNameStrategy;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.result_name_are_processed(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Lorg/jmxtrans/query/ResultNameStrategy;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Lorg/jmxtrans/query/ResultNameStrategy;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Lorg/jmxtrans/query/ResultNameStrategy;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Lorg/jmxtrans/query/ResultNameStrategy;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Lorg/jmxtrans/query/ResultNameStrategy;)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Lorg/jmxtrans/query/ResultNameStrategy;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Lorg/jmxtrans/query/ResultNameStrategy;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Lorg/jmxtrans/query/ResultNameStrategy;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Lorg/jmxtrans/query/ResultNameStrategy;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Lorg/jmxtrans/query/ResultNameStrategy;)V</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>addResult</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;Ljava/util/Collection;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>addResult</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;Ljava/util/Collection;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>addResult</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;Ljava/util/Collection;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>addResult</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;Ljava/util/Collection;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>addResult</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;Ljava/util/Collection;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>addResult</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;Ljava/util/Collection;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>addResult</name></method><methodDesc>(Lorg/jmxtrans/results/QueryResult;Ljava/util/Collection;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/Queue;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/Queue;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/Queue;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/Queue;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/Queue;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/Queue;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/Queue;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/Queue;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/Queue;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/Queue;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/Queue;)V</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/Queue;)V</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/Queue;)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>102</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>113</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>135</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>101</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>112</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>101</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>112</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>101</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>112</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>114</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>136</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>141</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>getAttribute</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>getKey</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>getPosition</name></method><methodDesc>()Ljava/lang/Integer;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>getResultAlias</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>getType</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>157</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.non_indexed_list_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>170</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.non_indexed_list_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>199</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>217</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.result_name_are_processed(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>163</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.non_indexed_list_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>135</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.non_indexed_list_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>146</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.non_indexed_list_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>116</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.non_indexed_list_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>145</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.non_indexed_list_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>148</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.non_indexed_list_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>159</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.non_indexed_list_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>161</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.non_indexed_list_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>164</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.non_indexed_list_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>165</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.non_indexed_list_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>169</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>186</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>187</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>198</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>216</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.non_indexed_list_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>146</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.non_indexed_list_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.result_name_are_processed(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>146</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.non_indexed_list_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>172</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.non_indexed_list_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>201</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>219</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.QueryTest.basic_attribute_return_simple_result(org.jmxtrans.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>101</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>105</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljavax/management/ObjectName;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljavax/management/ObjectName;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljavax/management/ObjectName;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljavax/management/ObjectName;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljavax/management/ObjectName;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljavax/management/ObjectName;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljavax/management/ObjectName;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljavax/management/ObjectName;)V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljavax/management/ObjectName;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljavax/management/ObjectName;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljavax/management/ObjectName;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljavax/management/ObjectName;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljavax/management/ObjectName;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>addAttribute</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/query/embedded/Query;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>addAttribute</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/query/embedded/Query;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>addAttribute</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/query/embedded/Query;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>addAttribute</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/query/embedded/Query;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>addAttribute</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/QueryAttribute;)Lorg/jmxtrans/query/embedded/Query;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>addAttribute</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/QueryAttribute;)Lorg/jmxtrans/query/embedded/Query;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>addAttribute</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/QueryAttribute;)Lorg/jmxtrans/query/embedded/Query;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>addAttribute</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/QueryAttribute;)Lorg/jmxtrans/query/embedded/Query;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>addAttribute</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/QueryAttribute;)Lorg/jmxtrans/query/embedded/Query;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>addAttribute</name></method><methodDesc>(Lorg/jmxtrans/query/embedded/QueryAttribute;)Lorg/jmxtrans/query/embedded/Query;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>145</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>96</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>133</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>137</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>146</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>getCollectedMetricsCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>getCollectedMetricsCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>getCollectionCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>getCollectionCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>getCollectionDurationInNanos</name></method><methodDesc>()J</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>getCollectionDurationInNanos</name></method><methodDesc>()J</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>getExportCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>getExportCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>getExportDurationInNanos</name></method><methodDesc>()J</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>getExportDurationInNanos</name></method><methodDesc>()J</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>getExportedMetricsCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>getExportedMetricsCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>getId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>getQueryAttributes</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>getQueryAttributes</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>getResultAlias</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>builder</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/query/embedded/QueryAttribute$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>builder</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/query/embedded/QueryAttribute$Builder;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>127</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>163</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>96</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>123</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>96</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>96</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>169</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectScalar</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectScalar</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectScalar</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectScalar</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectScalar</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>collectScalar</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Queue;Lorg/jmxtrans/query/embedded/Query;Lorg/jmxtrans/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>getName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>getResultAlias</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>getType</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy$StaticEvaluator</name></clazz><method><name>call</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.ResultNameStrategyTest.org.jmxtrans.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy$StaticEvaluator</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy$StaticEvaluator</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy$StaticEvaluator</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy$StaticEvaluator</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy$StaticEvaluator</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy$StaticEvaluator</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy$StaticEvaluator</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy$StaticEvaluator</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/ResultNameStrategy$StaticEvaluator</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/query/embedded/QueryAttribute;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/query/embedded/QueryAttribute;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute$Builder</name></clazz><method><name>withKeys</name></method><methodDesc>(Ljava/util/Collection;)Lorg/jmxtrans/query/embedded/QueryAttribute$Builder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute$Builder</name></clazz><method><name>withKeys</name></method><methodDesc>(Ljava/util/Collection;)Lorg/jmxtrans/query/embedded/QueryAttribute$Builder;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute$Builder</name></clazz><method><name>withKeys</name></method><methodDesc>(Ljava/util/Collection;)Lorg/jmxtrans/query/embedded/QueryAttribute$Builder;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute$Builder</name></clazz><method><name>withKeys</name></method><methodDesc>(Ljava/util/Collection;)Lorg/jmxtrans/query/embedded/QueryAttribute$Builder;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute$Builder</name></clazz><method><name>withKeys</name></method><methodDesc>(Ljava/util/Collection;)Lorg/jmxtrans/query/embedded/QueryAttribute$Builder;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute$Builder</name></clazz><method><name>withKeys</name></method><methodDesc>(Ljava/util/Collection;)Lorg/jmxtrans/query/embedded/QueryAttribute$Builder;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.query.embedded.QueryTest.org.jmxtrans.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute$Builder</name></clazz><method><name>withResultAlias</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/query/embedded/QueryAttribute$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/query/embedded/QueryAttribute$Builder</name></clazz><method><name>withType</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/query/embedded/QueryAttribute$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
