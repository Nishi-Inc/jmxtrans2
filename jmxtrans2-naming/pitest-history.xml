5
<classHistory><id hierarchicalHash="2d7df623"><classId hash="401548728"><name><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl$StaticEvaluator</name></name></classId></id><coverageId>40545bde</coverageId></classHistory>
<classHistory><id hierarchicalHash="918ff7e7"><classId hash="2442131431"><name><name>org/jmxtrans/naming/ResultNameStrategyImpl</name></name></classId></id><coverageId>40545bde</coverageId></classHistory>
<classHistory><id hierarchicalHash="158ed06b"><classId hash="361681003"><name><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></name></classId></id><coverageId>40545bde</coverageId></classHistory>
<classHistory><id hierarchicalHash="a20b7bca"><classId hash="2718661578"><name><name>org/jmxtrans/naming/ExpressionLanguageEngine</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="40545bde"><classId hash="1079270366"><name><name>org/jmxtrans/naming/ResultNameStrategyTest</name></name></classId></id><coverageId>40545bde</coverageId></classHistory>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>registerExpressionEvaluator</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>registerExpressionEvaluator</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>147</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>154</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>113</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>199</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>200</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>149</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>248</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>109</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>118</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>127</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>152</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>227</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>233</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>101</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>234</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>168</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>155</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>162</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>193</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>244</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>285</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>168</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>168</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>286</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>96</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>229</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl$StaticEvaluator</name></clazz><method><name>call</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ResultNameStrategyImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.naming.ResultNameStrategyTest.org.jmxtrans.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>getExpressionEvaluators</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>registerExpressionEvaluator</name></method><methodDesc>(Ljava/lang/String;Ljava/util/concurrent/Callable;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>168</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>164</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>135</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>145</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>137</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>139</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>141</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>143</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl$StaticEvaluator</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl$StaticEvaluator</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl$StaticEvaluator</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl$StaticEvaluator</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl$StaticEvaluator</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl$StaticEvaluator</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl$StaticEvaluator</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl$StaticEvaluator</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ExpressionLanguageEngineImpl$StaticEvaluator</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ResultNameStrategyImpl</name></clazz><method><name>getExpressionLanguageEngine</name></method><methodDesc>()Lorg/jmxtrans/naming/ExpressionLanguageEngine;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ResultNameStrategyImpl</name></clazz><method><name>getResultName</name></method><methodDesc>(Lorg/jmxtrans/query/Query;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ResultNameStrategyImpl</name></clazz><method><name>getResultName</name></method><methodDesc>(Lorg/jmxtrans/query/Query;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ResultNameStrategyImpl</name></clazz><method><name>getResultName</name></method><methodDesc>(Lorg/jmxtrans/query/Query;Ljavax/management/ObjectName;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ResultNameStrategyImpl</name></clazz><method><name>getResultName</name></method><methodDesc>(Lorg/jmxtrans/query/Query;Ljavax/management/ObjectName;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/naming/ResultNameStrategyImpl</name></clazz><method><name>getResultName</name></method><methodDesc>(Lorg/jmxtrans/query/Query;Ljavax/management/ObjectName;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
