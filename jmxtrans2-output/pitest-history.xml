7
<classHistory><id hierarchicalHash="c2dc4432"><classId hash="1821861561"><name><name>org/jmxtrans/output/DevNullOutputWriter$Factory</name></name></classId></id><coverageId>b5e5de31</coverageId></classHistory>
<classHistory><id hierarchicalHash="4b308e73"><classId hash="1261473395"><name><name>org/jmxtrans/output/OutputWriterFactory</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="688504c7"><classId hash="1447353721"><name><name>org/jmxtrans/output/DevNullOutputWriter</name></name></classId></id><coverageId>b5e5de31</coverageId></classHistory>
<classHistory><id hierarchicalHash="1240274e"><classId hash="306194254"><name><name>org/jmxtrans/output/AbstractOutputWriter</name></name></classId></id><coverageId>1b1c2b71f</coverageId></classHistory>
<classHistory><id hierarchicalHash="fe3c9d89"><classId hash="4265385353"><name><name>org/jmxtrans/output/OutputWriter</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="fbdcd8ee"><classId hash="4225554670"><name><name>org/jmxtrans/output/AbstractOutputWriterTest</name></name></classId></id><coverageId>fbdcd8ee</coverageId></classHistory>
<classHistory><id hierarchicalHash="b5e5de31"><classId hash="3051740721"><name><name>org/jmxtrans/output/DevNullOutputWriterTest</name></name></classId></id><coverageId>b5e5de31</coverageId></classHistory>
<result><id><location><clazz><name>org/jmxtrans/output/AbstractOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.AbstractOutputWriterTest.loggersAreInitializedCorrectlyAtWarnLevel(org.jmxtrans.output.AbstractOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/AbstractOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.AbstractOutputWriterTest.loggersAreInitializedCorrectlyAtWarnLevel(org.jmxtrans.output.AbstractOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/AbstractOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.AbstractOutputWriterTest.loggersAreInitializedCorrectlyAtWarnLevel(org.jmxtrans.output.AbstractOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/AbstractOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.AbstractOutputWriterTest.loggersAreInitializedCorrectlyAtWarnLevel(org.jmxtrans.output.AbstractOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/AbstractOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.AbstractOutputWriterTest.loggersAreInitializedCorrectlyAtWarnLevel(org.jmxtrans.output.AbstractOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/AbstractOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.AbstractOutputWriterTest.loggersAreInitializedCorrectlyAtWarnLevel(org.jmxtrans.output.AbstractOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/AbstractOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.AbstractOutputWriterTest.loggersAreInitializedCorrectlyAtTraceAndFinestLevels(org.jmxtrans.output.AbstractOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/AbstractOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.AbstractOutputWriterTest.loggersAreInitializedCorrectlyAtTraceAndFinestLevels(org.jmxtrans.output.AbstractOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/AbstractOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.AbstractOutputWriterTest.loggersAreInitializedCorrectlyAtDebugAndFinerAndFineLevels(org.jmxtrans.output.AbstractOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/AbstractOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.AbstractOutputWriterTest.loggersAreInitializedCorrectlyAtDebugAndFinerAndFineLevels(org.jmxtrans.output.AbstractOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/AbstractOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.AbstractOutputWriterTest.loggersAreInitializedCorrectlyAtDebugAndFinerAndFineLevels(org.jmxtrans.output.AbstractOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/AbstractOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.AbstractOutputWriterTest.loggersAreInitializedCorrectlyAtWarnLevel(org.jmxtrans.output.AbstractOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/AbstractOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.AbstractOutputWriterTest.loggersAreInitializedCorrectlyAtWarnLevel(org.jmxtrans.output.AbstractOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/AbstractOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.AbstractOutputWriterTest.loggersAreInitializedCorrectlyAtTraceAndFinestLevels(org.jmxtrans.output.AbstractOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/AbstractOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.AbstractOutputWriterTest.loggersAreInitializedCorrectlyAtWarnLevel(org.jmxtrans.output.AbstractOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/AbstractOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.AbstractOutputWriterTest.loggersAreInitializedCorrectlyAtWarnLevel(org.jmxtrans.output.AbstractOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/AbstractOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.AbstractOutputWriterTest.loggersAreInitializedCorrectlyAtDebugAndFinerAndFineLevels(org.jmxtrans.output.AbstractOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/AbstractOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.AbstractOutputWriterTest.loggersAreInitializedCorrectlyAtWarnLevel(org.jmxtrans.output.AbstractOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/AbstractOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.AbstractOutputWriterTest.loggersAreInitializedCorrectlyAtTraceAndFinestLevels(org.jmxtrans.output.AbstractOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/AbstractOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.AbstractOutputWriterTest.loggersAreInitializedCorrectlyAtWarnLevel(org.jmxtrans.output.AbstractOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/AbstractOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.AbstractOutputWriterTest.loggersAreInitializedCorrectlyAtDebugAndFinerAndFineLevels(org.jmxtrans.output.AbstractOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/AbstractOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.AbstractOutputWriterTest.loggersAreInitializedCorrectlyAtDebugAndFinerAndFineLevels(org.jmxtrans.output.AbstractOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/AbstractOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.AbstractOutputWriterTest.loggersAreInitializedCorrectlyAtWarnLevel(org.jmxtrans.output.AbstractOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/AbstractOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/AbstractOutputWriter</name></clazz><method><name>getDebugLevel</name></method><methodDesc>()Ljava/util/logging/Level;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.AbstractOutputWriterTest.loggersAreInitializedCorrectlyAtWarnLevel(org.jmxtrans.output.AbstractOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/AbstractOutputWriter</name></clazz><method><name>getInfoLevel</name></method><methodDesc>()Ljava/util/logging/Level;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.AbstractOutputWriterTest.loggersAreInitializedCorrectlyAtWarnLevel(org.jmxtrans.output.AbstractOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/AbstractOutputWriter</name></clazz><method><name>getLogLevel</name></method><methodDesc>(Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/AbstractOutputWriter</name></clazz><method><name>getLogLevel</name></method><methodDesc>(Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/AbstractOutputWriter</name></clazz><method><name>getTraceLevel</name></method><methodDesc>()Ljava/util/logging/Level;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.AbstractOutputWriterTest.loggersAreInitializedCorrectlyAtWarnLevel(org.jmxtrans.output.AbstractOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/AbstractOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Ljava/lang/Iterable;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.AbstractOutputWriterTest.resultsAreDispatched(org.jmxtrans.output.AbstractOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/AbstractOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Ljava/lang/Iterable;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.AbstractOutputWriterTest.resultsAreDispatched(org.jmxtrans.output.AbstractOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/AbstractOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Ljava/lang/Iterable;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.AbstractOutputWriterTest.resultsAreDispatched(org.jmxtrans.output.AbstractOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/AbstractOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Ljava/lang/Iterable;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/AbstractOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Ljava/lang/Iterable;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.AbstractOutputWriterTest.resultsAreDispatched(org.jmxtrans.output.AbstractOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/AbstractOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Ljava/lang/Iterable;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.AbstractOutputWriterTest.resultsAreDispatched(org.jmxtrans.output.AbstractOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/AbstractOutputWriter</name></clazz><method><name>write</name></method><methodDesc>(Ljava/lang/Iterable;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.AbstractOutputWriterTest.resultsAreDispatched(org.jmxtrans.output.AbstractOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/DevNullOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/DevNullOutputWriter;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.DevNullOutputWriterTest.factoryCanCreateOutputWriter(org.jmxtrans.output.DevNullOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/DevNullOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/DevNullOutputWriter;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/output/DevNullOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/output/DevNullOutputWriter;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.output.DevNullOutputWriterTest.factoryCanCreateOutputWriter(org.jmxtrans.output.DevNullOutputWriterTest)</value></killingTest></status></result>
