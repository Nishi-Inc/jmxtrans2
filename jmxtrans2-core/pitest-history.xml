88
<classHistory><id hierarchicalHash="ce7b0469"><classId hash="3464168553"><name><name>org/jmxtrans/core/log/Level</name></name></classId></id><coverageId>f80fcb3e</coverageId></classHistory>
<classHistory><id hierarchicalHash="ab86da7e"><classId hash="2877741694"><name><name>org/jmxtrans/core/output/DevNullOutputWriter</name></name></classId></id><coverageId>174a34a44</coverageId></classHistory>
<classHistory><id hierarchicalHash="fc2c53a8"><classId hash="4230763432"><name><name>org/jmxtrans/core/config/ConfigurationMerger</name></name></classId></id><coverageId>b2a39050</coverageId></classHistory>
<classHistory><id hierarchicalHash="10f73f9ae"><classId hash="304760426"><name><name>org/jmxtrans/core/query/embedded/ResultNameStrategy$StaticEvaluator</name></name></classId></id><coverageId>1f7508ddc</coverageId></classHistory>
<classHistory><id hierarchicalHash="c73a5016"><classId hash="3342487574"><name><name>org/jmxtrans/core/log/LoggerFactory</name></name></classId></id><coverageId>8cba01db1</coverageId></classHistory>
<classHistory><id hierarchicalHash="c0a277d1"><classId hash="825576460"><name><name>org/jmxtrans/core/query/embedded/QueryAttribute$Builder</name></name></classId></id><coverageId>21e6d747a</coverageId></classHistory>
<classHistory><id hierarchicalHash="f28d7772"><classId hash="4069357426"><name><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxyTest</name></name></classId></id><coverageId>f28d7772</coverageId></classHistory>
<classHistory><id hierarchicalHash="b2a39050"><classId hash="2997063760"><name><name>org/jmxtrans/core/config/JmxTransBuilderTest</name></name></classId></id><coverageId>b2a39050</coverageId></classHistory>
<classHistory><id hierarchicalHash="acf8a407"><classId hash="2060818078"><name><name>org/jmxtrans/core/query/embedded/Query$Builder</name></name></classId></id><coverageId>1a73c5968</coverageId></classHistory>
<classHistory><id hierarchicalHash="b3fd750b"><classId hash="3019732235"><name><name>org/jmxtrans/core/output/OutputWriter</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="76342f59"><classId hash="1983131481"><name><name>org/jmxtrans/core/query/embedded/InProcessServer</name></name></classId></id><coverageId>1c4446fcf</coverageId></classHistory>
<classHistory><id hierarchicalHash="9c408cf5"><classId hash="2621476085"><name><name>org/jmxtrans/core/scheduler/QueryProcessor</name></name></classId></id><coverageId>1353b8f95</coverageId></classHistory>
<classHistory><id hierarchicalHash="9764af5"><classId hash="158747381"><name><name>org/jmxtrans/core/results/QueryResultTimeComparator</name></name></classId></id><coverageId>de89a240</coverageId></classHistory>
<classHistory><id hierarchicalHash="3708bd6d"><classId hash="923319661"><name><name>org/jmxtrans/core/scheduler/QueryGenerator</name></name></classId></id><coverageId>1ab5aa7b8</coverageId></classHistory>
<classHistory><id hierarchicalHash="1987cdec6"><classId hash="3697269045"><name><name>org/jmxtrans/core/log/PrintWriterLogger$1</name></name></classId></id><coverageId>f203a7bb</coverageId></classHistory>
<classHistory><id hierarchicalHash="dcbef150"><classId hash="3703501136"><name><name>org/jmxtrans/core/log/ConsoleLogProvider</name></name></classId></id><coverageId>a58af090</coverageId></classHistory>
<classHistory><id hierarchicalHash="32230d69"><classId hash="841157993"><name><name>org/jmxtrans/core/query/embedded/Query</name></name></classId></id><coverageId>1a73c5968</coverageId></classHistory>
<classHistory><id hierarchicalHash="ed912258"><classId hash="2132949246"><name><name>org/jmxtrans/core/query/embedded/RemoteServer$Builder</name></name></classId></id><coverageId>bb6d6c33</coverageId></classHistory>
<classHistory><id hierarchicalHash="391dac3b"><classId hash="958245947"><name><name>org/jmxtrans/core/scheduler/QueryProcessorTest</name></name></classId></id><coverageId>391dac3b</coverageId></classHistory>
<classHistory><id hierarchicalHash="eeb09dfb"><classId hash="4004552187"><name><name>org/jmxtrans/core/query/ResultNameStrategy</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="bcd3715a"><classId hash="3167973722"><name><name>org/jmxtrans/core/log/Logger</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="39318cce"><classId hash="959548622"><name><name>org/jmxtrans/core/results/QueryResultValueComparator</name></name></classId></id><coverageId>ab60c45a</coverageId></classHistory>
<classHistory><id hierarchicalHash="e3286300"><classId hash="3811074816"><name><name>org/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessorTest</name></name></classId></id><coverageId>e3286300</coverageId></classHistory>
<classHistory><id hierarchicalHash="631b9c9c"><classId hash="1662753948"><name><name>org/jmxtrans/core/config/DefaultConfiguration</name></name></classId></id><coverageId>141ac708a</coverageId></classHistory>
<classHistory><id hierarchicalHash="32f6d9ba"><classId hash="855038394"><name><name>org/jmxtrans/core/output/DevNullOutputWriterTest</name></name></classId></id><coverageId>32f6d9ba</coverageId></classHistory>
<classHistory><id hierarchicalHash="7cb16921"><classId hash="2092001569"><name><name>org/jmxtrans/core/naming/ResultNameStrategyTest</name></name></classId></id><coverageId>7cb16921</coverageId></classHistory>
<classHistory><id hierarchicalHash="5facc894"><classId hash="1605159060"><name><name>org/jmxtrans/core/config/Configuration</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="7bc2c802"><classId hash="2076362754"><name><name>org/jmxtrans/core/log/Slf4JLogProvider</name></name></classId></id><coverageId>935698342</coverageId></classHistory>
<classHistory><id hierarchicalHash="32349f7"><classId hash="52644343"><name><name>org/jmxtrans/core/config/ModifiableConfiguration</name></name></classId></id><coverageId>141ac708a</coverageId></classHistory>
<classHistory><id hierarchicalHash="60c2383"><classId hash="101458819"><name><name>org/jmxtrans/core/log/LevelTest</name></name></classId></id><coverageId>60c2383</coverageId></classHistory>
<classHistory><id hierarchicalHash="36d5956c"><classId hash="919967084"><name><name>org/jmxtrans/core/results/QueryResultTest</name></name></classId></id><coverageId>36d5956c</coverageId></classHistory>
<classHistory><id hierarchicalHash="5af87df"><classId hash="95389663"><name><name>org/jmxtrans/core/log/Slf4JLoggerTest</name></name></classId></id><coverageId>5af87df</coverageId></classHistory>
<classHistory><id hierarchicalHash="16ba287e4"><classId hash="2223923002"><name><name>org/jmxtrans/core/scheduler/NaiveScheduler$State</name></name></classId></id><coverageId>b2a39050</coverageId></classHistory>
<classHistory><id hierarchicalHash="4171973c"><classId hash="1097963324"><name><name>org/jmxtrans/core/query/embedded/QueryMetrics</name></name></classId></id><coverageId>1a73c5968</coverageId></classHistory>
<classHistory><id hierarchicalHash="8bbd3397"><classId hash="2344432535"><name><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerOpenException</name></name></classId></id><coverageId>f28d7772</coverageId></classHistory>
<classHistory><id hierarchicalHash="5842a994"><classId hash="1480763796"><name><name>org/jmxtrans/core/config/JmxtransConfigurationException</name></name></classId></id><coverageId>b2a39050</coverageId></classHistory>
<classHistory><id hierarchicalHash="fd49b344"><classId hash="4249465668"><name><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></name></classId></id><coverageId>1f7508ddc</coverageId></classHistory>
<classHistory><id hierarchicalHash="1ba7decc"><classId hash="463986380"><name><name>org/jmxtrans/core/output/AbstractOutputWriterTest</name></name></classId></id><coverageId>1ba7decc</coverageId></classHistory>
<classHistory><id hierarchicalHash="d830eefd"><classId hash="3627085565"><name><name>org/jmxtrans/core/scheduler/JmxTransThreadFactoryTest</name></name></classId></id><coverageId>d830eefd</coverageId></classHistory>
<classHistory><id hierarchicalHash="aae57da7"><classId hash="2867166631"><name><name>org/jmxtrans/core/naming/ExpressionLanguageEngine</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="80e5c0cf"><classId hash="2162540751"><name><name>org/jmxtrans/core/config/ConfigParser</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="4e98960d"><classId hash="1318622733"><name><name>org/jmxtrans/core/query/embedded/Server</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="8f6d2bc5"><classId hash="2406296517"><name><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></name></classId></id><coverageId>21e6d747a</coverageId></classHistory>
<classHistory><id hierarchicalHash="4c78b72b"><classId hash="1282979627"><name><name>org/jmxtrans/core/log/PrintWriterLoggerTest</name></name></classId></id><coverageId>4c78b72b</coverageId></classHistory>
<classHistory><id hierarchicalHash="a58af090"><classId hash="2777346192"><name><name>org/jmxtrans/core/log/ConsoleLogProviderTest</name></name></classId></id><coverageId>a58af090</coverageId></classHistory>
<classHistory><id hierarchicalHash="de89a240"><classId hash="3733561920"><name><name>org/jmxtrans/core/results/QueryResultTimeComparatorTest</name></name></classId></id><coverageId>de89a240</coverageId></classHistory>
<classHistory><id hierarchicalHash="40416fa3"><classId hash="1078030243"><name><name>org/jmxtrans/core/scheduler/JmxTransThreadFactory</name></name></classId></id><coverageId>1d44ed257</coverageId></classHistory>
<classHistory><id hierarchicalHash="7c3a033"><classId hash="130261043"><name><name>org/jmxtrans/core/scheduler/DeadlineRunnableTest</name></name></classId></id><coverageId>7c3a033</coverageId></classHistory>
<classHistory><id hierarchicalHash="1f33f3872"><classId hash="3997195457"><name><name>org/jmxtrans/core/scheduler/ResultProcessor$Processor</name></name></classId></id><coverageId>759a9f04</coverageId></classHistory>
<classHistory><id hierarchicalHash="c946ae0b"><classId hash="3376852491"><name><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></name></classId></id><coverageId>23439e7fc</coverageId></classHistory>
<classHistory><id hierarchicalHash="7f20ee22"><classId hash="2132864546"><name><name>org/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor</name></name></classId></id><coverageId>224d4d38a</coverageId></classHistory>
<classHistory><id hierarchicalHash="abfa8168"><classId hash="2885321064"><name><name>org/jmxtrans/core/query/embedded/QueryMBean</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="77311b12"><classId hash="1999706898"><name><name>org/jmxtrans/core/query/embedded/QueryAttributeTest</name></name></classId></id><coverageId>77311b12</coverageId></classHistory>
<classHistory><id hierarchicalHash="f38df53"><classId hash="255385427"><name><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></name></classId></id><coverageId>7cb16921</coverageId></classHistory>
<classHistory><id hierarchicalHash="497a530a"><classId hash="1232753418"><name><name>org/jmxtrans/core/scheduler/FullSchedulingTest</name></name></classId></id><coverageId>497a530a</coverageId></classHistory>
<classHistory><id hierarchicalHash="79fe940a"><classId hash="2046727178"><name><name>org/jmxtrans/core/output/OutputWriterFactory</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="af3cc45e"><classId hash="2939995230"><name><name>org/jmxtrans/core/scheduler/QueryGeneratorTest</name></name></classId></id><coverageId>af3cc45e</coverageId></classHistory>
<classHistory><id hierarchicalHash="ab60c45a"><classId hash="2875245658"><name><name>org/jmxtrans/core/results/QueryResultValueComparatorTest</name></name></classId></id><coverageId>ab60c45a</coverageId></classHistory>
<classHistory><id hierarchicalHash="505c6ae2"><classId hash="1348233954"><name><name>org/jmxtrans/core/scheduler/ResultProcessor</name></name></classId></id><coverageId>1283e2f54</coverageId></classHistory>
<classHistory><id hierarchicalHash="2c648bf9"><classId hash="744786937"><name><name>org/jmxtrans/core/query/embedded/RemoteServerTest</name></name></classId></id><coverageId>2c648bf9</coverageId></classHistory>
<classHistory><id hierarchicalHash="2c204bfa"><classId hash="740314106"><name><name>org/jmxtrans/core/scheduler/ResultProcessorTest</name></name></classId></id><coverageId>2c204bfa</coverageId></classHistory>
<classHistory><id hierarchicalHash="15b6b3d3"><classId hash="364295123"><name><name>org/jmxtrans/core/query/Query</name></name></classId></id><coverageId>c743cf5e</coverageId></classHistory>
<classHistory><id hierarchicalHash="d4c50aa2"><classId hash="3314297679"><name><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl$StaticEvaluator</name></name></classId></id><coverageId>7cb16921</coverageId></classHistory>
<classHistory><id hierarchicalHash="e71428aa"><classId hash="3876858026"><name><name>org/jmxtrans/core/scheduler/NaiveScheduler</name></name></classId></id><coverageId>1f6b69e19</coverageId></classHistory>
<classHistory><id hierarchicalHash="deee15c6"><classId hash="3740145094"><name><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></name></classId></id><coverageId>7cb16921</coverageId></classHistory>
<classHistory><id hierarchicalHash="f841156e"><classId hash="4165014894"><name><name>org/jmxtrans/core/log/LoggerFactoryTest</name></name></classId></id><coverageId>f841156e</coverageId></classHistory>
<classHistory><id hierarchicalHash="c6dce038"><classId hash="3336364088"><name><name>org/jmxtrans/core/config/StandardConfiguration</name></name></classId></id><coverageId>141ac708a</coverageId></classHistory>
<classHistory><id hierarchicalHash="c3fc2d21"><classId hash="1435321287"><name><name>org/jmxtrans/core/query/embedded/RemoteServer$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="bc1d0591"><classId hash="3156018577"><name><name>org/jmxtrans/core/log/PrintWriterLogger</name></name></classId></id><coverageId>f203a7bb</coverageId></classHistory>
<classHistory><id hierarchicalHash="5cb72549"><classId hash="1555506505"><name><name>org/jmxtrans/core/log/Slf4JLogger</name></name></classId></id><coverageId>93b190b21</coverageId></classHistory>
<classHistory><id hierarchicalHash="e6359f5"><classId hash="241392117"><name><name>org/jmxtrans/core/log/LogProvider</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="8f08e03a"><classId hash="2399723578"><name><name>org/jmxtrans/core/config/XmlConfigParserTest</name></name></classId></id><coverageId>8f08e03a</coverageId></classHistory>
<classHistory><id hierarchicalHash="658fe8de"><classId hash="1703930078"><name><name>org/jmxtrans/core/query/embedded/QueryTest</name></name></classId></id><coverageId>658fe8de</coverageId></classHistory>
<classHistory><id hierarchicalHash="142377247"><classId hash="2999600770"><name><name>org/jmxtrans/core/query/embedded/QueryAttribute$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="c743cf5e"><classId hash="3343109982"><name><name>org/jmxtrans/core/query/QueryTest</name></name></classId></id><coverageId>c743cf5e</coverageId></classHistory>
<classHistory><id hierarchicalHash="c19863e0"><classId hash="3247989728"><name><name>org/jmxtrans/core/query/InvocationTest</name></name></classId></id><coverageId>c19863e0</coverageId></classHistory>
<classHistory><id hierarchicalHash="18c3c26d1"><classId hash="3769977939"><name><name>org/jmxtrans/core/output/DevNullOutputWriter$Factory</name></name></classId></id><coverageId>174a34a44</coverageId></classHistory>
<classHistory><id hierarchicalHash="5c851569"><classId hash="1552225641"><name><name>org/jmxtrans/core/query/embedded/ResultNameStrategyTest</name></name></classId></id><coverageId>5c851569</coverageId></classHistory>
<classHistory><id hierarchicalHash="8f613b53"><classId hash="2405514067"><name><name>org/jmxtrans/core/query/Invocation</name></name></classId></id><coverageId>20344d46a</coverageId></classHistory>
<classHistory><id hierarchicalHash="2152ce57d"><classId hash="3293177785"><name><name>org/jmxtrans/core/scheduler/QueryProcessor$Processor</name></name></classId></id><coverageId>8297ff45</coverageId></classHistory>
<classHistory><id hierarchicalHash="6e6ee95a"><classId hash="1852762458"><name><name>org/jmxtrans/core/query/embedded/RemoteServer</name></name></classId></id><coverageId>bb6d6c33</coverageId></classHistory>
<classHistory><id hierarchicalHash="70791264"><classId hash="1886982756"><name><name>org/jmxtrans/core/config/JmxTransBuilder</name></name></classId></id><coverageId>b2a39050</coverageId></classHistory>
<classHistory><id hierarchicalHash="4c3248b4"><classId hash="437205835"><name><name>org/jmxtrans/core/query/embedded/Query$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="cade652d"><classId hash="3403572525"><name><name>org/jmxtrans/core/results/QueryResult</name></name></classId></id><coverageId>36852b8c2</coverageId></classHistory>
<classHistory><id hierarchicalHash="fa98babf"><classId hash="4204313279"><name><name>org/jmxtrans/core/scheduler/NaiveSchedulerTest</name></name></classId></id><coverageId>fa98babf</coverageId></classHistory>
<classHistory><id hierarchicalHash="5e709842"><classId hash="1584437314"><name><name>org/jmxtrans/core/config/XmlConfigParser</name></name></classId></id><coverageId>141ac708a</coverageId></classHistory>
<classHistory><id hierarchicalHash="69c96591"><classId hash="1774806417"><name><name>org/jmxtrans/core/log/Slf4JLogProviderTest</name></name></classId></id><coverageId>69c96591</coverageId></classHistory>
<classHistory><id hierarchicalHash="b4a270cf"><classId hash="3030544591"><name><name>org/jmxtrans/core/scheduler/DeadlineRunnable</name></name></classId></id><coverageId>b67beb72</coverageId></classHistory>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="12" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="12" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="12" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="12" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="12" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="12" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="12" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="12" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="12" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="12" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="12" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="12" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="12" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="12" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="12" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="12" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="12" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/core/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/core/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/core/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/core/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/core/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/core/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/core/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/core/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/core/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/core/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/core/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/core/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/core/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/core/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/core/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/core/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/core/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/core/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/core/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/core/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/core/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/core/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/core/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/core/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/core/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/core/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/core/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/core/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/core/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/core/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/core/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/core/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/core/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/core/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/core/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/core/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/core/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/core/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/core/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/core/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/core/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/core/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/core/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/core/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/core/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/core/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/core/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/core/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>_getResultName</name></method><methodDesc>(Lorg/jmxtrans/core/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/core/query/embedded/QueryAttribute;)Ljava/lang/StringBuilder;</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="8" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="8" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="8" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="8" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="8" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="8" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>104</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="8" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>getExpressionEvaluators</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>getResultName</name></method><methodDesc>(Lorg/jmxtrans/core/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/core/query/embedded/QueryAttribute;)Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>getResultName</name></method><methodDesc>(Lorg/jmxtrans/core/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/core/query/embedded/QueryAttribute;)Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>getResultName</name></method><methodDesc>(Lorg/jmxtrans/core/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/core/query/embedded/QueryAttribute;)Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>getResultName</name></method><methodDesc>(Lorg/jmxtrans/core/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/core/query/embedded/QueryAttribute;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>getResultName</name></method><methodDesc>(Lorg/jmxtrans/core/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/core/query/embedded/QueryAttribute;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>getResultName</name></method><methodDesc>(Lorg/jmxtrans/core/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/core/query/embedded/QueryAttribute;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>getResultName</name></method><methodDesc>(Lorg/jmxtrans/core/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/core/query/embedded/QueryAttribute;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>getResultName</name></method><methodDesc>(Lorg/jmxtrans/core/query/embedded/Query;Ljavax/management/ObjectName;Lorg/jmxtrans/core/query/embedded/QueryAttribute;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>registerExpressionEvaluator</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>registerExpressionEvaluator</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>registerExpressionEvaluator</name></method><methodDesc>(Ljava/lang/String;Ljava/util/concurrent/Callable;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>133</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>169</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>148</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>154</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>180</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>183</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>187</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>155</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>101</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>105</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>113</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>135</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>137</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>139</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>165</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>190</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>195</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>196</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>142</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>150</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>191</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>136</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>146</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>180</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>214</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>250</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="8" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>101</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>229</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>235</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>261</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="8" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>264</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="8" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>268</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="8" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>272</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>102</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>154</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>236</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>169</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="8" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>123</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>138</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>142</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>145</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>156</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>163</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>182</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>184</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>186</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>187</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>194</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>216</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>218</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>220</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>221</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>246</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>275</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="8" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>280</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="8" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="8" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>169</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>169</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>281</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>188</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>223</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>231</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>276</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="8" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Lorg/jmxtrans/core/query/ResultNameStrategy;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Lorg/jmxtrans/core/query/ResultNameStrategy;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.result_name_are_processed(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Lorg/jmxtrans/core/query/ResultNameStrategy;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Lorg/jmxtrans/core/query/ResultNameStrategy;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Lorg/jmxtrans/core/query/ResultNameStrategy;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Lorg/jmxtrans/core/query/ResultNameStrategy;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Lorg/jmxtrans/core/query/ResultNameStrategy;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Lorg/jmxtrans/core/query/ResultNameStrategy;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Lorg/jmxtrans/core/query/ResultNameStrategy;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Lorg/jmxtrans/core/query/ResultNameStrategy;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Lorg/jmxtrans/core/query/ResultNameStrategy;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Lorg/jmxtrans/core/query/ResultNameStrategy;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Lorg/jmxtrans/core/query/ResultNameStrategy;)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Lorg/jmxtrans/core/query/ResultNameStrategy;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Lorg/jmxtrans/core/query/ResultNameStrategy;)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>addResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Ljava/util/Collection;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>addResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Ljava/util/Collection;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>addResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Ljava/util/Collection;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>addResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Ljava/util/Collection;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>addResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Ljava/util/Collection;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>addResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Ljava/util/Collection;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>addResult</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Ljava/util/Collection;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/Queue;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/Queue;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/Queue;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/Queue;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/Queue;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/Queue;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/Queue;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/Queue;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/Queue;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/Queue;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>102</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>113</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>135</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>101</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>112</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>101</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>112</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>101</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>112</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>114</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>136</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>141</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>getAttribute</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>getKey</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>getPosition</name></method><methodDesc>()Ljava/lang/Integer;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>getResultAlias</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>getType</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>logCollectingException</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Exception;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>logCollectingException</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Exception;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>logCollectingException</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Exception;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>logCollectingException</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Exception;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>logCollectingException</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Exception;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>logCollectingException</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Exception;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>logCollectingException</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Exception;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>logCollectingException</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Exception;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>logCollectingException</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Exception;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>logCollectingException</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Exception;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>logCollectingException</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Exception;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>logCollectingException</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Exception;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>logCollectingException</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Exception;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>logCollectingException</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Exception;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>logCollectingException</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Exception;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>157</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.non_indexed_list_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>172</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.non_indexed_list_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>203</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>223</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.result_name_are_processed(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>163</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.non_indexed_list_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>135</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.non_indexed_list_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>146</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.non_indexed_list_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>116</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.non_indexed_list_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>145</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.non_indexed_list_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>148</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.non_indexed_list_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>159</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.non_indexed_list_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>161</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.non_indexed_list_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>164</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.non_indexed_list_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>165</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.non_indexed_list_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>171</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>188</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>189</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>202</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>222</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.non_indexed_list_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>146</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.non_indexed_list_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.result_name_are_processed(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>146</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.non_indexed_list_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>174</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.non_indexed_list_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>205</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.indexed_integer_array_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>processAttributeValues</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;Ljava/util/Collection;)V</methodDesc></location><indexes><int>225</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.QueryTest.basic_attribute_return_simple_result(org.jmxtrans.core.query.QueryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljavax/xml/parsers/DocumentBuilder;Ljavax/xml/bind/Unmarshaller;Lorg/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor;Lorg/jmxtrans/utils/time/Clock;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljavax/xml/parsers/DocumentBuilder;Ljavax/xml/bind/Unmarshaller;Lorg/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor;Lorg/jmxtrans/utils/time/Clock;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljavax/xml/parsers/DocumentBuilder;Ljavax/xml/bind/Unmarshaller;Lorg/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor;Lorg/jmxtrans/utils/time/Clock;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="10" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>instantiateOutputWriter</name></method><methodDesc>(Ljava/lang/String;Ljava/util/Map;)Lorg/jmxtrans/core/output/OutputWriter;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>instantiateOutputWriter</name></method><methodDesc>(Ljava/lang/String;Ljava/util/Map;)Lorg/jmxtrans/core/output/OutputWriter;</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>instantiateOutputWriter</name></method><methodDesc>(Ljava/lang/String;Ljava/util/Map;)Lorg/jmxtrans/core/output/OutputWriter;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>instantiateOutputWriter</name></method><methodDesc>(Ljava/lang/String;Ljava/util/Map;)Lorg/jmxtrans/core/output/OutputWriter;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>instantiateOutputWriter</name></method><methodDesc>(Ljava/lang/String;Ljava/util/Map;)Lorg/jmxtrans/core/output/OutputWriter;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>instantiateOutputWriter</name></method><methodDesc>(Ljava/lang/String;Ljava/util/Map;)Lorg/jmxtrans/core/output/OutputWriter;</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>instantiateOutputWriter</name></method><methodDesc>(Ljava/lang/String;Ljava/util/Map;)Lorg/jmxtrans/core/output/OutputWriter;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>instantiateOutputWriter</name></method><methodDesc>(Ljava/lang/String;Ljava/util/Map;)Lorg/jmxtrans/core/output/OutputWriter;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>instantiateOutputWriter</name></method><methodDesc>(Ljava/lang/String;Ljava/util/Map;)Lorg/jmxtrans/core/output/OutputWriter;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>instantiateOutputWriter</name></method><methodDesc>(Ljava/lang/String;Ljava/util/Map;)Lorg/jmxtrans/core/output/OutputWriter;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>instantiateOutputWriter</name></method><methodDesc>(Ljava/lang/String;Ljava/util/Map;)Lorg/jmxtrans/core/output/OutputWriter;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>instantiateOutputWriter</name></method><methodDesc>(Ljava/lang/String;Ljava/util/Map;)Lorg/jmxtrans/core/output/OutputWriter;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>instantiateOutputWriter</name></method><methodDesc>(Ljava/lang/String;Ljava/util/Map;)Lorg/jmxtrans/core/output/OutputWriter;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>instantiateOutputWriter</name></method><methodDesc>(Ljava/lang/String;Ljava/util/Map;)Lorg/jmxtrans/core/output/OutputWriter;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>instantiateOutputWriter</name></method><methodDesc>(Ljava/lang/String;Ljava/util/Map;)Lorg/jmxtrans/core/output/OutputWriter;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>loadSchema</name></method><methodDesc>()Ljavax/xml/validation/Schema;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>loadSchema</name></method><methodDesc>()Ljavax/xml/validation/Schema;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>loadSchema</name></method><methodDesc>()Ljavax/xml/validation/Schema;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>loadSchema</name></method><methodDesc>()Ljavax/xml/validation/Schema;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>loadSchema</name></method><methodDesc>()Ljavax/xml/validation/Schema;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.invalidConfigurationThrowsException(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>newInstance</name></method><methodDesc>(Lorg/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor;Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/XmlConfigParser;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>newInstance</name></method><methodDesc>(Lorg/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor;Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/XmlConfigParser;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>newInstance</name></method><methodDesc>(Lorg/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor;Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/XmlConfigParser;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>newInstance</name></method><methodDesc>(Lorg/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor;Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/XmlConfigParser;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>newInstance</name></method><methodDesc>(Lorg/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor;Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/XmlConfigParser;</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>newInstance</name></method><methodDesc>(Lorg/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor;Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/XmlConfigParser;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>newInstance</name></method><methodDesc>(Lorg/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor;Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/XmlConfigParser;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>newInstance</name></method><methodDesc>(Lorg/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor;Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/XmlConfigParser;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.invalidConfigurationThrowsException(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>newInstance</name></method><methodDesc>(Lorg/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor;Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/XmlConfigParser;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>newInstance</name></method><methodDesc>(Lorg/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor;Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/XmlConfigParser;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>newInstance</name></method><methodDesc>(Lorg/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor;Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/XmlConfigParser;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>newInstance</name></method><methodDesc>(Lorg/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor;Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/XmlConfigParser;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.invalidConfigurationThrowsException(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Invocations;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Invocations;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Invocations;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Invocations;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.invocationsAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Invocations;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.invocationsAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Invocations;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.invocationsAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Invocations;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Invocations;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Invocations;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Invocations;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.invocationsAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Invocations;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Invocations;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Invocations;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Invocations;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.invocationsAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Invocations;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Invocations;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.invocationsAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Invocations;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.invocationsAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Invocations;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.invocationsAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Invocations;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.invocationsAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Invocations;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Invocations;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Invocations;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.invocationsAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Invocations;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Invocations;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Invocations;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.invocationsAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Invocations;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.invocationsAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Invocations;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.invocationsAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Invocations;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.invocationsAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Invocations;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Invocations;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$OutputWriters;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$OutputWriters;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$OutputWriters;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$OutputWriters;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$OutputWriters;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$OutputWriters;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$OutputWriters;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$OutputWriters;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$OutputWriters;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$OutputWriters;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$OutputWriters;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$OutputWriters;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$OutputWriters;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$OutputWriters;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$OutputWriters;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$OutputWriters;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$OutputWriters;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$OutputWriters;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$OutputWriters;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$OutputWriters;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$OutputWriters;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$OutputWriters;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$OutputWriters;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$OutputWriters;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Servers;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.serversAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Servers;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.serversAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Servers;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.serversAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Servers;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.serversAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Servers;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.serversAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Servers;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.serversAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Servers;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Servers;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.serversAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Servers;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.serversAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Servers;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.serversAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Servers;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.serversAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Servers;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Servers;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.serversAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Servers;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.serversAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Servers;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.serversAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Servers;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.serversAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Servers;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.serversAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Servers;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Servers;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.serversAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Servers;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Servers;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.serversAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Servers;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Servers;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.serversAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Servers;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.serversAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Servers;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.serversAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Servers;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.serversAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Servers;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.serversAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Servers;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.serversAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Servers;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans$Servers;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.serversAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.queriesAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.queriesAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.queriesAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.queriesAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.queriesAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.queriesAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.queriesAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="5" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.serversAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.serversAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.invocationsAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.queriesAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.queriesAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="5" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.serversAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.invocationsAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="5" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.serversAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.queriesAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.queriesAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.serversAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.invocationsAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/Jmxtrans;Lorg/jmxtrans/core/config/ModifiableConfiguration;)V</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/QueriesType;)Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/QueriesType;)Ljava/util/List;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.queriesAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/QueriesType;)Ljava/util/List;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/QueriesType;)Ljava/util/List;</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/QueriesType;)Ljava/util/List;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/QueriesType;)Ljava/util/List;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/QueriesType;)Ljava/util/List;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.queriesAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/QueriesType;)Ljava/util/List;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/QueriesType;)Ljava/util/List;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/QueriesType;)Ljava/util/List;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/QueriesType;)Ljava/util/List;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/QueriesType;)Ljava/util/List;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/QueriesType;)Ljava/util/List;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/QueriesType;)Ljava/util/List;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/QueriesType;)Ljava/util/List;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/QueriesType;)Ljava/util/List;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/QueriesType;)Ljava/util/List;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/QueriesType;)Ljava/util/List;</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/QueriesType;)Ljava/util/List;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/QueriesType;)Ljava/util/List;</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="5" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/QueriesType;)Ljava/util/List;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/QueriesType;)Ljava/util/List;</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="5" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/QueriesType;)Ljava/util/List;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/QueriesType;)Ljava/util/List;</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/QueriesType;)Ljava/util/List;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/QueriesType;)Ljava/util/List;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="5" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/QueriesType;)Ljava/util/List;</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/QueriesType;)Ljava/util/List;</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/QueriesType;)Ljava/util/List;</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="5" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/QueriesType;)Ljava/util/List;</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/QueriesType;)Ljava/util/List;</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.queriesAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/QueriesType;)Ljava/util/List;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.queriesAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/QueriesType;)Ljava/util/List;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/QueriesType;)Ljava/util/List;</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="5" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/QueriesType;)Ljava/util/List;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/QueriesType;)Ljava/util/List;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/QueriesType;)Ljava/util/List;</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/QueriesType;)Ljava/util/List;</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.queriesAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parse</name></method><methodDesc>(Lorg/jmxtrans/core/config/jaxb/QueriesType;)Ljava/util/List;</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parseConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/io/Resource;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parseConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/io/Resource;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parseConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/io/Resource;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parseConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/io/Resource;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parseConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/io/Resource;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parseConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/io/Resource;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>parseConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/io/Resource;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>supports</name></method><methodDesc>(Lorg/jmxtrans/utils/io/Resource;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.parsingErrorsAreRaisedIfSoConfigured(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>supports</name></method><methodDesc>(Lorg/jmxtrans/utils/io/Resource;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/XmlConfigParser</name></clazz><method><name>supports</name></method><methodDesc>(Lorg/jmxtrans/utils/io/Resource;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>getExpressionEvaluators</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>registerExpressionEvaluator</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>registerExpressionEvaluator</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>registerExpressionEvaluator</name></method><methodDesc>(Ljava/lang/String;Ljava/util/concurrent/Callable;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>133</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>184</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>168</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>147</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>154</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>179</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>101</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>105</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>113</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>135</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>137</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>139</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>164</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>178</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>186</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>188</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>190</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>192</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>193</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>199</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>179</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>179</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>200</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>142</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>149</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>194</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>135</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>145</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>179</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>213</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>266</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>248</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>109</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>118</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>127</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>152</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>227</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>233</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>101</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>234</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>168</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>259</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>137</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>139</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>141</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>143</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>155</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>162</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>181</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>183</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>185</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>186</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>193</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>215</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>217</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>219</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>220</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>244</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>258</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>268</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>270</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>272</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>274</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>276</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>278</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>279</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>285</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>168</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>259</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>168</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>259</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>286</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>96</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>187</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>222</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>229</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl</name></clazz><method><name>resolveExpression</name></method><methodDesc>(Ljava/lang/String;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>280</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryAttributeTest.queryAttributeWithSameNameAndResultAliasAreEquals(org.jmxtrans.core.query.embedded.QueryAttributeTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryAttributeTest.queryAttributeWithSameNameAndResultAliasAreEquals(org.jmxtrans.core.query.embedded.QueryAttributeTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="5" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="5" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>builder</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/core/query/embedded/QueryAttribute$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryAttributeTest.queryAttributeWithSameNameAndResultAliasAreEquals(org.jmxtrans.core.query.embedded.QueryAttributeTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>builder</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/core/query/embedded/QueryAttribute$Builder;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryAttributeTest.queryAttributeWithSameNameAndResultAliasAreEquals(org.jmxtrans.core.query.embedded.QueryAttributeTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>134</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>171</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>147</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>151</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>155</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>159</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>163</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>123</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>124</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>130</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>166</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>177</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectCompositeData</name></method><methodDesc>(Ljavax/management/ObjectName;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;Ljavax/management/openmbean/CompositeData;)I</methodDesc></location><indexes><int>167</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectScalar</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectScalar</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectScalar</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectScalar</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectScalar</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectScalar</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectScalar</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectScalar</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectScalar</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectScalar</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectScalar</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectScalar</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectScalar</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectScalar</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectScalar</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectScalar</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectScalar</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectScalar</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectScalar</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectScalar</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectScalar</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectScalar</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectScalar</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>collectScalar</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/Object;JLjava/util/Collection;Lorg/jmxtrans/core/query/embedded/Query;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)I</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryAttributeTest.queryAttributeWithSameNameAndResultAliasAreEquals(org.jmxtrans.core.query.embedded.QueryAttributeTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryAttributeTest.queryAttributeWithSameNameAndResultAliasAreEquals(org.jmxtrans.core.query.embedded.QueryAttributeTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryAttributeTest.queryAttributeWithSameNameAndResultAliasAreEquals(org.jmxtrans.core.query.embedded.QueryAttributeTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryAttributeTest.queryAttributeWithSameNameAndResultAliasAreEquals(org.jmxtrans.core.query.embedded.QueryAttributeTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryAttributeTest.queryAttributeWithSameNameAndResultAliasAreEquals(org.jmxtrans.core.query.embedded.QueryAttributeTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryAttributeTest.queryAttributeWithSameNameAndResultAliasAreEquals(org.jmxtrans.core.query.embedded.QueryAttributeTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryAttributeTest.queryAttributeWithSameNameAndResultAliasAreEquals(org.jmxtrans.core.query.embedded.QueryAttributeTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryAttributeTest.queryAttributeWithSameNameAndResultAliasAreEquals(org.jmxtrans.core.query.embedded.QueryAttributeTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryAttributeTest.queryAttributeWithSameNameAndResultAliasAreEquals(org.jmxtrans.core.query.embedded.QueryAttributeTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryAttributeTest.queryAttributeWithSameNameAndResultAliasAreEquals(org.jmxtrans.core.query.embedded.QueryAttributeTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryAttributeTest.queryAttributeWithSameNameAndResultAliasAreEquals(org.jmxtrans.core.query.embedded.QueryAttributeTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryAttributeTest.queryAttributeWithSameNameAndResultAliasAreEquals(org.jmxtrans.core.query.embedded.QueryAttributeTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryAttributeTest.queryAttributeWithSameNameAndResultAliasAreEquals(org.jmxtrans.core.query.embedded.QueryAttributeTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryAttributeTest.queryAttributeWithSameNameAndResultAliasAreEquals(org.jmxtrans.core.query.embedded.QueryAttributeTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryAttributeTest.queryAttributeWithSameNameAndResultAliasAreEquals(org.jmxtrans.core.query.embedded.QueryAttributeTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryAttributeTest.queryAttributeWithSameNameAndResultAliasAreEquals(org.jmxtrans.core.query.embedded.QueryAttributeTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryAttributeTest.queryAttributeWithSameNameAndResultAliasAreEquals(org.jmxtrans.core.query.embedded.QueryAttributeTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryAttributeTest.queryAttributeWithSameNameAndResultAliasAreEquals(org.jmxtrans.core.query.embedded.QueryAttributeTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryAttributeTest.queryAttributeWithSameNameAndResultAliasAreEquals(org.jmxtrans.core.query.embedded.QueryAttributeTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryAttributeTest.queryAttributeWithSameNameAndResultAliasAreEquals(org.jmxtrans.core.query.embedded.QueryAttributeTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>getName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>getResultAlias</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>getType</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/String;Ljava/util/List;Ljavax/management/ObjectName;Lorg/jmxtrans/utils/time/Clock;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/String;Ljava/util/List;Ljavax/management/ObjectName;Lorg/jmxtrans/utils/time/Clock;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/String;Ljava/util/List;Ljavax/management/ObjectName;Lorg/jmxtrans/utils/time/Clock;)V</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="10" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/String;Ljava/util/List;Ljavax/management/ObjectName;Lorg/jmxtrans/utils/time/Clock;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/String;Ljava/util/List;Ljavax/management/ObjectName;Lorg/jmxtrans/utils/time/Clock;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/String;Ljava/util/List;Ljavax/management/ObjectName;Lorg/jmxtrans/utils/time/Clock;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/String;Ljava/util/List;Ljavax/management/ObjectName;Lorg/jmxtrans/utils/time/Clock;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/String;Ljava/util/List;Ljavax/management/ObjectName;Lorg/jmxtrans/utils/time/Clock;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/String;Ljava/util/List;Ljavax/management/ObjectName;Lorg/jmxtrans/utils/time/Clock;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/String;Ljava/util/List;Ljavax/management/ObjectName;Lorg/jmxtrans/utils/time/Clock;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/String;Ljava/util/List;Ljavax/management/ObjectName;Lorg/jmxtrans/utils/time/Clock;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/String;Ljava/util/List;Ljavax/management/ObjectName;Lorg/jmxtrans/utils/time/Clock;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/String;Ljava/util/List;Ljavax/management/ObjectName;Lorg/jmxtrans/utils/time/Clock;)V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/String;Ljava/util/List;Ljavax/management/ObjectName;Lorg/jmxtrans/utils/time/Clock;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/String;Ljava/util/List;Ljavax/management/ObjectName;Lorg/jmxtrans/utils/time/Clock;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljavax/management/ObjectName;Ljava/lang/String;Ljava/util/List;Ljavax/management/ObjectName;Lorg/jmxtrans/utils/time/Clock;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>builder</name></method><methodDesc>()Lorg/jmxtrans/core/query/embedded/Query$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>builder</name></method><methodDesc>()Lorg/jmxtrans/core/query/embedded/Query$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)Ljava/lang/Iterable;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)Ljava/lang/Iterable;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)Ljava/lang/Iterable;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)Ljava/lang/Iterable;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)Ljava/lang/Iterable;</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)Ljava/lang/Iterable;</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)Ljava/lang/Iterable;</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)Ljava/lang/Iterable;</methodDesc></location><indexes><int>150</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)Ljava/lang/Iterable;</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)Ljava/lang/Iterable;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)Ljava/lang/Iterable;</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)Ljava/lang/Iterable;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)Ljava/lang/Iterable;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)Ljava/lang/Iterable;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)Ljava/lang/Iterable;</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)Ljava/lang/Iterable;</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)Ljava/lang/Iterable;</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)Ljava/lang/Iterable;</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)Ljava/lang/Iterable;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)Ljava/lang/Iterable;</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)Ljava/lang/Iterable;</methodDesc></location><indexes><int>90</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)Ljava/lang/Iterable;</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)Ljava/lang/Iterable;</methodDesc></location><indexes><int>96</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)Ljava/lang/Iterable;</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)Ljava/lang/Iterable;</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)Ljava/lang/Iterable;</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)Ljava/lang/Iterable;</methodDesc></location><indexes><int>114</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)Ljava/lang/Iterable;</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)Ljava/lang/Iterable;</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)Ljava/lang/Iterable;</methodDesc></location><indexes><int>156</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)Ljava/lang/Iterable;</methodDesc></location><indexes><int>168</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)Ljava/lang/Iterable;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)Ljava/lang/Iterable;</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)Ljava/lang/Iterable;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)Ljava/lang/Iterable;</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)Ljava/lang/Iterable;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)Ljava/lang/Iterable;</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>collectMetrics</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)Ljava/lang/Iterable;</methodDesc></location><indexes><int>158</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>getCollectedMetricsCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>getCollectedMetricsCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>getCollectionCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>getCollectionCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>getCollectionDurationInNanos</name></method><methodDesc>()J</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>getCollectionDurationInNanos</name></method><methodDesc>()J</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>getId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>getId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>getQueryAttributes</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>getQueryAttributes</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>getQueryMbeanObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>getResultAlias</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;Ljava/lang/String;Lorg/jmxtrans/utils/time/SystemClock;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="5" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;Ljava/lang/String;Lorg/jmxtrans/utils/time/SystemClock;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;Ljava/lang/String;Lorg/jmxtrans/utils/time/SystemClock;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;Ljava/lang/String;Lorg/jmxtrans/utils/time/SystemClock;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.InvocationTest.sameInvocationsAreEquals(org.jmxtrans.core.query.InvocationTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;Ljava/lang/String;Lorg/jmxtrans/utils/time/SystemClock;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.InvocationTest.sameInvocationsAreEquals(org.jmxtrans.core.query.InvocationTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;Ljava/lang/String;Lorg/jmxtrans/utils/time/SystemClock;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="5" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;Ljava/lang/String;Lorg/jmxtrans/utils/time/SystemClock;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;Ljava/lang/String;Lorg/jmxtrans/utils/time/SystemClock;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;Ljava/lang/String;Lorg/jmxtrans/utils/time/SystemClock;)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;Ljava/lang/String;Lorg/jmxtrans/utils/time/SystemClock;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;Ljava/lang/String;Lorg/jmxtrans/utils/time/SystemClock;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="5" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;Ljava/lang/String;Lorg/jmxtrans/utils/time/SystemClock;)V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="5" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.InvocationTest.sameInvocationsAreEquals(org.jmxtrans.core.query.InvocationTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.InvocationTest.sameInvocationsAreEquals(org.jmxtrans.core.query.InvocationTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.InvocationTest.sameInvocationsAreEquals(org.jmxtrans.core.query.InvocationTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.InvocationTest.sameInvocationsAreEquals(org.jmxtrans.core.query.InvocationTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.InvocationTest.sameInvocationsAreEquals(org.jmxtrans.core.query.InvocationTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.InvocationTest.sameInvocationsAreEquals(org.jmxtrans.core.query.InvocationTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.InvocationTest.sameInvocationsAreEquals(org.jmxtrans.core.query.InvocationTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.InvocationTest.sameInvocationsAreEquals(org.jmxtrans.core.query.InvocationTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.InvocationTest.sameInvocationsAreEquals(org.jmxtrans.core.query.InvocationTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.InvocationTest.sameInvocationsAreEquals(org.jmxtrans.core.query.InvocationTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.InvocationTest.sameInvocationsAreEquals(org.jmxtrans.core.query.InvocationTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.InvocationTest.sameInvocationsAreEquals(org.jmxtrans.core.query.InvocationTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.InvocationTest.sameInvocationsAreEquals(org.jmxtrans.core.query.InvocationTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.InvocationTest.sameInvocationsAreEquals(org.jmxtrans.core.query.InvocationTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.InvocationTest.sameInvocationsAreEquals(org.jmxtrans.core.query.InvocationTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.InvocationTest.sameInvocationsAreEquals(org.jmxtrans.core.query.InvocationTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.InvocationTest.sameInvocationsAreEquals(org.jmxtrans.core.query.InvocationTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.InvocationTest.sameInvocationsAreEquals(org.jmxtrans.core.query.InvocationTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.InvocationTest.sameInvocationsAreEquals(org.jmxtrans.core.query.InvocationTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.InvocationTest.sameInvocationsAreEquals(org.jmxtrans.core.query.InvocationTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.InvocationTest.sameInvocationsAreEquals(org.jmxtrans.core.query.InvocationTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.InvocationTest.sameInvocationsAreEquals(org.jmxtrans.core.query.InvocationTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.InvocationTest.sameInvocationsAreEquals(org.jmxtrans.core.query.InvocationTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>invoke</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>invoke</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>invoke</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>invoke</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>invoke</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>invoke</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>invoke</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>invoke</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>invoke</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>invoke</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>invoke</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>invoke</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>invoke</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>invoke</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>invoke</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>invoke</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>invoke</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>invoke</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>invoke</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>invoke</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>invoke</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>invoke</name></method><methodDesc>(Ljavax/management/MBeanServer;Ljava/util/concurrent/BlockingQueue;)V</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/Invocation</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(ZLjava/lang/Iterable;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.parsingErrorsAreRaisedIfSoConfigured(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(ZLjava/lang/Iterable;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.parsingErrorsAreRaisedIfSoConfigured(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(ZLjava/lang/Iterable;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.parsingErrorsAreIgnoredIfSoConfigured(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/scheduler/NaiveScheduler;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/scheduler/NaiveScheduler;</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/scheduler/NaiveScheduler;</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/scheduler/NaiveScheduler;</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/scheduler/NaiveScheduler;</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/scheduler/NaiveScheduler;</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/scheduler/NaiveScheduler;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/scheduler/NaiveScheduler;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/scheduler/NaiveScheduler;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/scheduler/NaiveScheduler;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/scheduler/NaiveScheduler;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/scheduler/NaiveScheduler;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/scheduler/NaiveScheduler;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/scheduler/NaiveScheduler;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/scheduler/NaiveScheduler;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/scheduler/NaiveScheduler;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/scheduler/NaiveScheduler;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.parsingErrorsAreRaisedIfSoConfigured(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/scheduler/NaiveScheduler;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/scheduler/NaiveScheduler;</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/scheduler/NaiveScheduler;</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/scheduler/NaiveScheduler;</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>createExecutorService</name></method><methodDesc>(Ljava/lang/String;IIILjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ExecutorService;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.parsingErrorsAreRaisedIfSoConfigured(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>createExecutorService</name></method><methodDesc>(Ljava/lang/String;IIILjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ExecutorService;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.parsingErrorsAreRaisedIfSoConfigured(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>createExecutorService</name></method><methodDesc>(Ljava/lang/String;IIILjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ExecutorService;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.parsingErrorsAreRaisedIfSoConfigured(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>createExecutorService</name></method><methodDesc>(Ljava/lang/String;IIILjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ExecutorService;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>createExecutorService</name></method><methodDesc>(Ljava/lang/String;IIILjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ExecutorService;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>createExecutorService</name></method><methodDesc>(Ljava/lang/String;IIILjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ExecutorService;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>createScheduledExecutorService</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/concurrent/ScheduledExecutorService;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.parsingErrorsAreRaisedIfSoConfigured(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>createScheduledExecutorService</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/concurrent/ScheduledExecutorService;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.parsingErrorsAreRaisedIfSoConfigured(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>createScheduledExecutorService</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/concurrent/ScheduledExecutorService;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>createScheduledExecutorService</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/concurrent/ScheduledExecutorService;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>createScheduledExecutorService</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/concurrent/ScheduledExecutorService;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>getConfigParsers</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Ljava/lang/Iterable;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>getConfigParsers</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Ljava/lang/Iterable;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>getConfigParsers</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Ljava/lang/Iterable;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.parsingErrorsAreRaisedIfSoConfigured(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>getConfigParsers</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Ljava/lang/Iterable;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.parsingErrorsAreRaisedIfSoConfigured(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>getConfigParsers</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Ljava/lang/Iterable;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.parsingErrorsAreRaisedIfSoConfigured(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.parsingErrorsAreRaisedIfSoConfigured(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.parsingErrorsAreRaisedIfSoConfigured(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.parsingErrorsAreRaisedIfNoParserFound(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>133</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.parsingErrorsAreRaisedIfNoParserFound(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.parsingErrorsAreRaisedIfNoParserFound(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.parsingErrorsAreRaisedIfSoConfigured(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.parsingErrorsAreIgnoredIfSoConfigured(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>116</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.parsingErrorsAreRaisedIfNoParserFound(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.parsingErrorsAreRaisedIfNoParserFound(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.parsingErrorsAreRaisedIfSoConfigured(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.parsingErrorsAreRaisedIfSoConfigured(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.parsingErrorsAreRaisedIfSoConfigured(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.parsingErrorsAreRaisedIfSoConfigured(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.parsingErrorsAreRaisedIfSoConfigured(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.parsingErrorsAreRaisedIfSoConfigured(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.parsingErrorsAreRaisedIfSoConfigured(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.parsingErrorsAreRaisedIfSoConfigured(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.parsingErrorsAreRaisedIfSoConfigured(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.parsingErrorsAreRaisedIfNoParserFound(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>130</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>131</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.parsingErrorsAreRaisedIfNoParserFound(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>146</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.parsingErrorsAreRaisedIfSoConfigured(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.parsingErrorsAreIgnoredIfSoConfigured(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>116</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.parsingErrorsAreRaisedIfNoParserFound(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.parsingErrorsAreRaisedIfNoParserFound(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.parsingErrorsAreRaisedIfNoParserFound(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>116</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.parsingErrorsAreIgnoredIfSoConfigured(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>147</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/JmxTransBuilder</name></clazz><method><name>loadConfiguration</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;Ljava/lang/Class;Ljava/lang/Object;II)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.operationsAreCalledOnProxiedInstance(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;Ljava/lang/Class;Ljava/lang/Object;II)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.operationsAreCalledOnProxiedInstance(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;Ljava/lang/Class;Ljava/lang/Object;II)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="10" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;Ljava/lang/Class;Ljava/lang/Object;II)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.operationsAreCalledOnProxiedInstance(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;Ljava/lang/Class;Ljava/lang/Object;II)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="10" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;Ljava/lang/Class;Ljava/lang/Object;II)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.operationsAreCalledOnProxiedInstance(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;Ljava/lang/Class;Ljava/lang/Object;II)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.operationsAreCalledOnProxiedInstance(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;Ljava/lang/Class;Ljava/lang/Object;II)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.operationsAreCalledOnProxiedInstance(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;Ljava/lang/Class;Ljava/lang/Object;II)V</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.operationsAreCalledOnProxiedInstance(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>create</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;Ljava/lang/Class;Ljava/lang/Object;II)Ljava/lang/Object;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.operationsAreCalledOnProxiedInstance(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>create</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;Ljava/lang/Class;Ljava/lang/Object;II)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.operationsAreCalledOnProxiedInstance(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>create</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;Ljava/lang/Class;Ljava/lang/Object;II)Ljava/lang/Object;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.operationsAreCalledOnProxiedInstance(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>create</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;Ljava/lang/Class;Ljava/lang/Object;II)Ljava/lang/Object;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.operationsAreCalledOnProxiedInstance(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>create</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;Ljava/lang/Class;Ljava/lang/Object;II)Ljava/lang/Object;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.operationsAreCalledOnProxiedInstance(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>create</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;Ljava/lang/Class;Ljava/lang/Object;II)Ljava/lang/Object;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.operationsAreCalledOnProxiedInstance(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>incrementFailures</name></method><methodDesc>()V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.circuitBreakerIsOpenedForMultipleExceptions(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>incrementFailures</name></method><methodDesc>()V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.circuitBreakerIsOpenedForMultipleExceptions(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>incrementFailures</name></method><methodDesc>()V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>incrementFailures</name></method><methodDesc>()V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>incrementFailures</name></method><methodDesc>()V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.circuitBreakerIsOpenedForMultipleExceptions(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>incrementFailures</name></method><methodDesc>()V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.circuitIsNotOpenedForSingleException(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>incrementFailures</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.circuitBreakerIsOpenedForMultipleExceptions(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>incrementFailures</name></method><methodDesc>()V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.circuitBreakerIsOpenedForMultipleExceptions(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>incrementFailures</name></method><methodDesc>()V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.circuitBreakerIsOpenedForMultipleExceptions(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>incrementFailures</name></method><methodDesc>()V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.circuitBreakerIsOpenedForMultipleExceptions(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>incrementFailures</name></method><methodDesc>()V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>incrementFailures</name></method><methodDesc>()V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.circuitBreakerIsOpenedForMultipleExceptions(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>incrementFailures</name></method><methodDesc>()V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.circuitIsNotOpenedForSingleException(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>incrementFailures</name></method><methodDesc>()V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>incrementFailures</name></method><methodDesc>()V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>incrementSuccess</name></method><methodDesc>()V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>incrementSuccess</name></method><methodDesc>()V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>incrementSuccess</name></method><methodDesc>()V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>incrementSuccess</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>incrementSuccess</name></method><methodDesc>()V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>incrementSuccess</name></method><methodDesc>()V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>incrementSuccess</name></method><methodDesc>()V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>incrementSuccess</name></method><methodDesc>()V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>invoke</name></method><methodDesc>(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.circuitBreakerIsOpenedForMultipleExceptions(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>invoke</name></method><methodDesc>(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.circuitIsNotOpenedForSingleException(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>invoke</name></method><methodDesc>(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.operationsAreCalledOnProxiedInstance(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>invoke</name></method><methodDesc>(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.operationsAreCalledOnProxiedInstance(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>invoke</name></method><methodDesc>(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.circuitIsNotOpenedForSingleException(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>invoke</name></method><methodDesc>(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>invoke</name></method><methodDesc>(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.circuitBreakerIsOpenedForMultipleExceptions(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>invoke</name></method><methodDesc>(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.operationsAreCalledOnProxiedInstance(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>invoke</name></method><methodDesc>(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.circuitIsNotOpenedForSingleException(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>invoke</name></method><methodDesc>(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>invoke</name></method><methodDesc>(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.circuitBreakerIsOpenedForMultipleExceptions(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>invoke</name></method><methodDesc>(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.circuitIsNotOpenedForSingleException(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>invoke</name></method><methodDesc>(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.operationsAreCalledOnProxiedInstance(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>invoke</name></method><methodDesc>(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>invoke</name></method><methodDesc>(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.operationsAreCalledOnProxiedInstance(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>invoke</name></method><methodDesc>(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>invoke</name></method><methodDesc>(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.circuitBreakerIsOpenedForMultipleExceptions(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.operationsAreCalledOnProxiedInstance(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.circuitBreakerIsClosedAgainAfterDisableDuration(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.circuitBreakerIsOpenedForMultipleExceptions(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.circuitBreakerIsOpenedForMultipleExceptions(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.circuitBreakerIsOpenedForMultipleExceptions(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.circuitBreakerIsClosedAgainAfterDisableDuration(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.circuitBreakerIsOpenedForMultipleExceptions(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.circuitBreakerIsClosedAgainAfterDisableDuration(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.circuitBreakerIsOpenedForMultipleExceptions(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.operationsAreCalledOnProxiedInstance(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.circuitBreakerIsClosedAgainAfterDisableDuration(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.circuitBreakerIsOpenedForMultipleExceptions(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerProxy</name></clazz><method><name>isDisabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Lorg/jmxtrans/core/log/Level;Lorg/jmxtrans/utils/time/Clock;Ljava/io/PrintStream;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.errorDebuggerOnlyLogsAtErrorLevel(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>debug</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.errorDebuggerOnlyLogsAtErrorLevel(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>debug</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.logLineContainsAllRequiredInformation(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>debug</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.logLineContainsAllRequiredInformation(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>debug</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.errorDebuggerOnlyLogsAtErrorLevel(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>debug</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.logLineContainsAllRequiredInformation(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>debug</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.logLineContainsException(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>debug</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.logLineContainsException(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>debug</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.logLineContainsException(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>debug</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>debug</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.logLineContainsException(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>error</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.errorDebuggerOnlyLogsAtErrorLevel(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>error</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.errorDebuggerOnlyLogsAtErrorLevel(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>error</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.errorDebuggerOnlyLogsAtErrorLevel(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>error</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>error</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.errorDebuggerOnlyLogsAtErrorLevel(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>error</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>error</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>error</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>error</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>error</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>getName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.debugLoggerLogsAtAllLevels(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>info</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.errorDebuggerOnlyLogsAtErrorLevel(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>info</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.debugLoggerLogsAtAllLevels(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>info</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.debugLoggerLogsAtAllLevels(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>info</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.errorDebuggerOnlyLogsAtErrorLevel(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>info</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.debugLoggerLogsAtAllLevels(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>info</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>info</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>info</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>info</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>info</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>isDebugEnabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.logLineContainsAllRequiredInformation(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>isDebugEnabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.errorDebuggerOnlyLogsAtErrorLevel(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>isErrorEnabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.errorDebuggerOnlyLogsAtErrorLevel(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>isErrorEnabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.errorDebuggerOnlyLogsAtErrorLevel(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>isInfoEnabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.debugLoggerLogsAtAllLevels(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>isInfoEnabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.errorDebuggerOnlyLogsAtErrorLevel(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>isWarnEnabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.debugLoggerLogsAtAllLevels(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>isWarnEnabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.errorDebuggerOnlyLogsAtErrorLevel(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>warn</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.errorDebuggerOnlyLogsAtErrorLevel(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>warn</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.debugLoggerLogsAtAllLevels(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>warn</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.debugLoggerLogsAtAllLevels(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>warn</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.errorDebuggerOnlyLogsAtErrorLevel(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>warn</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.debugLoggerLogsAtAllLevels(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>warn</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>warn</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>warn</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>warn</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>warn</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/log/Level;Ljava/lang/String;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.errorDebuggerOnlyLogsAtErrorLevel(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/log/Level;Ljava/lang/String;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.errorDebuggerOnlyLogsAtErrorLevel(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/log/Level;Ljava/lang/String;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.logLineContainsAllRequiredInformation(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/log/Level;Ljava/lang/String;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.logLineContainsAllRequiredInformation(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/log/Level;Ljava/lang/String;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.logLineContainsAllRequiredInformation(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/log/Level;Ljava/lang/String;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="8" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/log/Level;Ljava/lang/String;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.logLineContainsAllRequiredInformation(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/log/Level;Ljava/lang/String;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="8" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/log/Level;Ljava/lang/String;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.logLineContainsAllRequiredInformation(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/log/Level;Ljava/lang/String;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="8" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/log/Level;Ljava/lang/String;)V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.errorDebuggerOnlyLogsAtErrorLevel(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/log/Level;Ljava/lang/String;)V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="8" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/log/Level;Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.logLineContainsException(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/log/Level;Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.logLineContainsException(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/log/Level;Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/log/Level;Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.logLineContainsException(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/log/Level;Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.logLineContainsException(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger</name></clazz><method><name>write</name></method><methodDesc>(Lorg/jmxtrans/core/log/Level;Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;J)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTest.cannotCreateQueryResultWithNullName(org.jmxtrans.core.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.core.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTest.differentValuesAreNotEquals(org.jmxtrans.core.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.core.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.core.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.core.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.core.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.core.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.core.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.core.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.core.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.core.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.core.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.core.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.core.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.core.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.core.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.core.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.core.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.core.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.core.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.core.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.core.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTest.differentValuesAreNotEquals(org.jmxtrans.core.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTest.differentValuesAreNotEquals(org.jmxtrans.core.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTest.differentValuesAreNotEquals(org.jmxtrans.core.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTest.differentValuesAreNotEquals(org.jmxtrans.core.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTest.sameValuesAreEquals(org.jmxtrans.core.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>getEpoch</name></method><methodDesc>(Ljava/util/concurrent/TimeUnit;)J</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTest.initializedCorrectly(org.jmxtrans.core.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>getEpoch</name></method><methodDesc>(Ljava/util/concurrent/TimeUnit;)J</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTest.initializedCorrectly(org.jmxtrans.core.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>getName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTest.initializedCorrectly(org.jmxtrans.core.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>getType</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTest.initializedCorrectly(org.jmxtrans.core.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>getValue</name></method><methodDesc>()Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTest.initializedCorrectly(org.jmxtrans.core.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTest.differentValuesHaveDifferentHashCodes(org.jmxtrans.core.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTest.differentValuesHaveDifferentHashCodes(org.jmxtrans.core.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTest.differentValuesHaveDifferentHashCodes(org.jmxtrans.core.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTest.sameValuesHaveSameHashCode(org.jmxtrans.core.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTest.differentValuesHaveDifferentHashCodes(org.jmxtrans.core.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTest.differentValuesHaveDifferentHashCodes(org.jmxtrans.core.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTest.differentValuesHaveDifferentHashCodes(org.jmxtrans.core.results.QueryResultTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResult</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>96</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>101</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>escapeObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>102</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>getExpressionLanguageEngine</name></method><methodDesc>()Lorg/jmxtrans/core/naming/ExpressionLanguageEngine;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>getResultName</name></method><methodDesc>(Lorg/jmxtrans/core/query/Query;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>getResultName</name></method><methodDesc>(Lorg/jmxtrans/core/query/Query;Ljavax/management/ObjectName;)Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>getResultName</name></method><methodDesc>(Lorg/jmxtrans/core/query/Query;Ljavax/management/ObjectName;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>getResultName</name></method><methodDesc>(Lorg/jmxtrans/core/query/Query;Ljavax/management/ObjectName;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ResultNameStrategyImpl</name></clazz><method><name>getResultName</name></method><methodDesc>(Lorg/jmxtrans/core/query/Query;Ljavax/management/ObjectName;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;Lorg/jmxtrans/utils/time/Interval;Ljava/lang/Iterable;Lorg/jmxtrans/core/scheduler/QueryProcessor;Ljava/util/concurrent/ScheduledExecutorService;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;Lorg/jmxtrans/utils/time/Interval;Ljava/lang/Iterable;Lorg/jmxtrans/core/scheduler/QueryProcessor;Ljava/util/concurrent/ScheduledExecutorService;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryGeneratorTest.nextTaskIsScheduled(org.jmxtrans.core.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;Lorg/jmxtrans/utils/time/Interval;Ljava/lang/Iterable;Lorg/jmxtrans/core/scheduler/QueryProcessor;Ljava/util/concurrent/ScheduledExecutorService;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryGeneratorTest.nextTaskIsScheduled(org.jmxtrans.core.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;Lorg/jmxtrans/utils/time/Interval;Ljava/lang/Iterable;Lorg/jmxtrans/core/scheduler/QueryProcessor;Ljava/util/concurrent/ScheduledExecutorService;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryGeneratorTest.nextTaskIsScheduled(org.jmxtrans.core.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryGeneratorTest.nextTaskIsScheduled(org.jmxtrans.core.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>104</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryGeneratorTest.nextTaskIsScheduled(org.jmxtrans.core.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryGeneratorTest.queryAreEnqueued(org.jmxtrans.core.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryGeneratorTest.queryAreEnqueued(org.jmxtrans.core.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryGeneratorTest.queryAreEnqueued(org.jmxtrans.core.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryGeneratorTest.nextTaskIsScheduled(org.jmxtrans.core.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryGeneratorTest.queryAreEnqueued(org.jmxtrans.core.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryGeneratorTest.queryAreEnqueued(org.jmxtrans.core.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryGeneratorTest.nextTaskIsScheduled(org.jmxtrans.core.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryGeneratorTest.queryAreEnqueued(org.jmxtrans.core.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryGeneratorTest.nextTaskIsScheduled(org.jmxtrans.core.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryGeneratorTest.nextTaskIsScheduled(org.jmxtrans.core.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryGeneratorTest.nextTaskIsScheduled(org.jmxtrans.core.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryGeneratorTest.queryAreEnqueued(org.jmxtrans.core.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryGeneratorTest.nextTaskIsScheduled(org.jmxtrans.core.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryGeneratorTest.nextTaskIsScheduled(org.jmxtrans.core.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryGeneratorTest.nextTaskIsScheduled(org.jmxtrans.core.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryGeneratorTest.nextTaskIsScheduled(org.jmxtrans.core.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>113</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryGeneratorTest.nextTaskIsScheduled(org.jmxtrans.core.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>114</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>124</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryGeneratorTest.nextTaskIsScheduled(org.jmxtrans.core.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryGeneratorTest.nextTaskIsScheduled(org.jmxtrans.core.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryGeneratorTest.queryAreEnqueued(org.jmxtrans.core.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryGeneratorTest.queryAreEnqueued(org.jmxtrans.core.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryGeneratorTest.nextTaskIsScheduled(org.jmxtrans.core.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryGeneratorTest.nextTaskIsScheduled(org.jmxtrans.core.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryGeneratorTest.nextTaskIsScheduled(org.jmxtrans.core.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryGeneratorTest.nextTaskIsNotScheduledIfGeneratorIsStopped(org.jmxtrans.core.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryGeneratorTest.queryAreEnqueued(org.jmxtrans.core.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>115</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryGeneratorTest.nextTaskIsScheduled(org.jmxtrans.core.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryGeneratorTest.nextTaskIsScheduled(org.jmxtrans.core.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryGenerator</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryGeneratorTest.nextTaskIsNotScheduledIfGeneratorIsStopped(org.jmxtrans.core.scheduler.QueryGeneratorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>appendInvocations</name></method><methodDesc>(Lorg/jmxtrans/core/config/ModifiableConfiguration;Ljava/lang/Iterable;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>appendInvocations</name></method><methodDesc>(Lorg/jmxtrans/core/config/ModifiableConfiguration;Ljava/lang/Iterable;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>appendInvocations</name></method><methodDesc>(Lorg/jmxtrans/core/config/ModifiableConfiguration;Ljava/lang/Iterable;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>appendInvocations</name></method><methodDesc>(Lorg/jmxtrans/core/config/ModifiableConfiguration;Ljava/lang/Iterable;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="MEMORY_ERROR"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>appendInvocations</name></method><methodDesc>(Lorg/jmxtrans/core/config/ModifiableConfiguration;Ljava/lang/Iterable;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>appendInvocations</name></method><methodDesc>(Lorg/jmxtrans/core/config/ModifiableConfiguration;Ljava/lang/Iterable;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>appendInvocations</name></method><methodDesc>(Lorg/jmxtrans/core/config/ModifiableConfiguration;Ljava/lang/Iterable;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>appendInvocations</name></method><methodDesc>(Lorg/jmxtrans/core/config/ModifiableConfiguration;Ljava/lang/Iterable;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>appendOutputWriters</name></method><methodDesc>(Lorg/jmxtrans/core/config/ModifiableConfiguration;Ljava/lang/Iterable;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>appendOutputWriters</name></method><methodDesc>(Lorg/jmxtrans/core/config/ModifiableConfiguration;Ljava/lang/Iterable;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>appendOutputWriters</name></method><methodDesc>(Lorg/jmxtrans/core/config/ModifiableConfiguration;Ljava/lang/Iterable;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>appendOutputWriters</name></method><methodDesc>(Lorg/jmxtrans/core/config/ModifiableConfiguration;Ljava/lang/Iterable;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="MEMORY_ERROR"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>appendOutputWriters</name></method><methodDesc>(Lorg/jmxtrans/core/config/ModifiableConfiguration;Ljava/lang/Iterable;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>appendOutputWriters</name></method><methodDesc>(Lorg/jmxtrans/core/config/ModifiableConfiguration;Ljava/lang/Iterable;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>appendOutputWriters</name></method><methodDesc>(Lorg/jmxtrans/core/config/ModifiableConfiguration;Ljava/lang/Iterable;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>appendOutputWriters</name></method><methodDesc>(Lorg/jmxtrans/core/config/ModifiableConfiguration;Ljava/lang/Iterable;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>appendServers</name></method><methodDesc>(Lorg/jmxtrans/core/config/ModifiableConfiguration;Ljava/lang/Iterable;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>appendServers</name></method><methodDesc>(Lorg/jmxtrans/core/config/ModifiableConfiguration;Ljava/lang/Iterable;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>appendServers</name></method><methodDesc>(Lorg/jmxtrans/core/config/ModifiableConfiguration;Ljava/lang/Iterable;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>appendServers</name></method><methodDesc>(Lorg/jmxtrans/core/config/ModifiableConfiguration;Ljava/lang/Iterable;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="MEMORY_ERROR"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>appendServers</name></method><methodDesc>(Lorg/jmxtrans/core/config/ModifiableConfiguration;Ljava/lang/Iterable;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>appendServers</name></method><methodDesc>(Lorg/jmxtrans/core/config/ModifiableConfiguration;Ljava/lang/Iterable;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>appendServers</name></method><methodDesc>(Lorg/jmxtrans/core/config/ModifiableConfiguration;Ljava/lang/Iterable;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>appendServers</name></method><methodDesc>(Lorg/jmxtrans/core/config/ModifiableConfiguration;Ljava/lang/Iterable;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>merge</name></method><methodDesc>(Ljava/util/Collection;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>merge</name></method><methodDesc>(Ljava/util/Collection;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>merge</name></method><methodDesc>(Ljava/util/Collection;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>merge</name></method><methodDesc>(Ljava/util/Collection;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>merge</name></method><methodDesc>(Ljava/util/Collection;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>merge</name></method><methodDesc>(Ljava/util/Collection;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>merge</name></method><methodDesc>(Ljava/util/Collection;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>merge</name></method><methodDesc>(Ljava/util/Collection;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>merge</name></method><methodDesc>(Ljava/util/Collection;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>merge</name></method><methodDesc>(Ljava/util/Collection;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>merge</name></method><methodDesc>(Ljava/util/Collection;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>merge</name></method><methodDesc>(Ljava/util/Collection;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>merge</name></method><methodDesc>(Ljava/util/Collection;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>merge</name></method><methodDesc>(Ljava/util/Collection;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>merge</name></method><methodDesc>(Ljava/util/Collection;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>merge</name></method><methodDesc>(Ljava/util/Collection;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>merge</name></method><methodDesc>(Ljava/util/Collection;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>merge</name></method><methodDesc>(Ljava/util/Collection;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>merge</name></method><methodDesc>(Ljava/util/Collection;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ConfigurationMerger</name></clazz><method><name>merge</name></method><methodDesc>(Ljava/util/Collection;)Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer</name></clazz><method><name>builder</name></method><methodDesc>()Lorg/jmxtrans/core/query/embedded/RemoteServer$Builder;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.RemoteServerTest.weblogicSpecificEnvironmentIsUsedIfRequired(org.jmxtrans.core.query.embedded.RemoteServerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer</name></clazz><method><name>builder</name></method><methodDesc>()Lorg/jmxtrans/core/query/embedded/RemoteServer$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.RemoteServerTest.weblogicSpecificEnvironmentIsUsedIfRequired(org.jmxtrans.core.query.embedded.RemoteServerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.RemoteServerTest.hostAndPortsAreIgnoredIfUrlIsGiven(org.jmxtrans.core.query.embedded.RemoteServerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.RemoteServerTest.hostAndPortsAreIgnoredIfUrlIsGiven(org.jmxtrans.core.query.embedded.RemoteServerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer</name></clazz><method><name>getNonWebLogicEnvironment</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer</name></clazz><method><name>getNonWebLogicEnvironment</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer</name></clazz><method><name>getNonWebLogicEnvironment</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer</name></clazz><method><name>getNonWebLogicEnvironment</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer</name></clazz><method><name>getNonWebLogicEnvironment</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer</name></clazz><method><name>getNonWebLogicEnvironment</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer</name></clazz><method><name>getNonWebLogicEnvironment</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer</name></clazz><method><name>getNonWebLogicEnvironment</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer</name></clazz><method><name>getNonWebLogicEnvironment</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer</name></clazz><method><name>getNonWebLogicEnvironment</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer</name></clazz><method><name>getNonWebLogicEnvironment</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer</name></clazz><method><name>getNonWebLogicEnvironment</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer</name></clazz><method><name>getQueries</name></method><methodDesc>()Ljava/lang/Iterable;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.serversAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer</name></clazz><method><name>getServerConnection</name></method><methodDesc>()Ljavax/management/MBeanServerConnection;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer</name></clazz><method><name>getServerConnection</name></method><methodDesc>()Ljavax/management/MBeanServerConnection;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer</name></clazz><method><name>getServerConnection</name></method><methodDesc>()Ljavax/management/MBeanServerConnection;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer</name></clazz><method><name>getServerConnection</name></method><methodDesc>()Ljavax/management/MBeanServerConnection;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer</name></clazz><method><name>getWebLogicEnvironment</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer</name></clazz><method><name>getWebLogicEnvironment</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer</name></clazz><method><name>getWebLogicEnvironment</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer</name></clazz><method><name>getWebLogicEnvironment</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer</name></clazz><method><name>getWebLogicEnvironment</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer</name></clazz><method><name>getWebLogicEnvironment</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer</name></clazz><method><name>getWebLogicEnvironment</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer</name></clazz><method><name>getWebLogicEnvironment</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer</name></clazz><method><name>getWebLogicEnvironment</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer</name></clazz><method><name>getWebLogicEnvironment</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer</name></clazz><method><name>getWebLogicEnvironment</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query$Builder</name></clazz><method><name>addAttribute</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/core/query/embedded/Query$Builder;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query$Builder</name></clazz><method><name>addAttribute</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/core/query/embedded/Query$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query$Builder</name></clazz><method><name>addAttribute</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/core/query/embedded/Query$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query$Builder</name></clazz><method><name>addAttribute</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/core/query/embedded/Query$Builder;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query$Builder</name></clazz><method><name>addAttribute</name></method><methodDesc>(Lorg/jmxtrans/core/query/embedded/QueryAttribute;)Lorg/jmxtrans/core/query/embedded/Query$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query$Builder</name></clazz><method><name>addAttribute</name></method><methodDesc>(Lorg/jmxtrans/core/query/embedded/QueryAttribute;)Lorg/jmxtrans/core/query/embedded/Query$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query$Builder</name></clazz><method><name>addAttributes</name></method><methodDesc>(Ljava/util/Collection;)Lorg/jmxtrans/core/query/embedded/Query$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query$Builder</name></clazz><method><name>addAttributes</name></method><methodDesc>(Ljava/util/Collection;)Lorg/jmxtrans/core/query/embedded/Query$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/query/embedded/Query;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/query/embedded/Query;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/query/embedded/Query;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="10" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/query/embedded/Query;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/query/embedded/Query;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/query/embedded/Query;</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/query/embedded/Query;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/query/embedded/Query;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/query/embedded/Query;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="10" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/query/embedded/Query;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/query/embedded/Query;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/query/embedded/Query;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/query/embedded/Query;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/query/embedded/Query;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/query/embedded/Query;</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/query/embedded/Query;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="10" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/query/embedded/Query;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/query/embedded/Query;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query$Builder</name></clazz><method><name>withObjectName</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/core/query/embedded/Query$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query$Builder</name></clazz><method><name>withObjectName</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/core/query/embedded/Query$Builder;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query$Builder</name></clazz><method><name>withObjectName</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/core/query/embedded/Query$Builder;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query$Builder</name></clazz><method><name>withObjectName</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/core/query/embedded/Query$Builder;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query$Builder</name></clazz><method><name>withObjectName</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/core/query/embedded/Query$Builder;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query$Builder</name></clazz><method><name>withObjectName</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/core/query/embedded/Query$Builder;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query$Builder</name></clazz><method><name>withObjectName</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/core/query/embedded/Query$Builder;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query$Builder</name></clazz><method><name>withObjectName</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/core/query/embedded/Query$Builder;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query$Builder</name></clazz><method><name>withObjectName</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/core/query/embedded/Query$Builder;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query$Builder</name></clazz><method><name>withObjectName</name></method><methodDesc>(Ljavax/management/ObjectName;)Lorg/jmxtrans/core/query/embedded/Query$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="10" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/Query$Builder</name></clazz><method><name>withResultAlias</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/core/query/embedded/Query$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/StandardConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/core/config/Configuration;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/StandardConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/core/config/Configuration;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/StandardConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/core/config/Configuration;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/StandardConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/core/config/Configuration;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.queriesAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/StandardConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/core/config/Configuration;)V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/StandardConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/core/config/Configuration;)V</methodDesc></location><indexes><int>109</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/StandardConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/core/config/Configuration;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/StandardConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/core/config/Configuration;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/StandardConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/core/config/Configuration;)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.queriesAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/StandardConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/core/config/Configuration;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/StandardConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/core/config/Configuration;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.queriesAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/StandardConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/core/config/Configuration;)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/StandardConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/core/config/Configuration;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/StandardConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/core/config/Configuration;)V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/StandardConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/core/config/Configuration;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/StandardConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/core/config/Configuration;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/StandardConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/core/config/Configuration;)V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/StandardConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/core/config/Configuration;)V</methodDesc></location><indexes><int>102</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/StandardConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/core/config/Configuration;)V</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/StandardConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/core/config/Configuration;)V</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.invocationsAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/StandardConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/core/config/Configuration;)V</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/StandardConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/core/config/Configuration;)V</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.invocationsAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/StandardConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/core/config/Configuration;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.queriesAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/StandardConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/core/config/Configuration;)V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/StandardConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/core/config/Configuration;)V</methodDesc></location><indexes><int>109</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.invocationsAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/StandardConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/core/config/Configuration;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/StandardConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/core/config/Configuration;)V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/StandardConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/core/config/Configuration;)V</methodDesc></location><indexes><int>109</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/StandardConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/core/config/Configuration;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/StandardConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/core/config/Configuration;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/StandardConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/core/config/Configuration;)V</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/StandardConfiguration</name></clazz><method><name>getInvocations</name></method><methodDesc>()Ljava/lang/Iterable;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.invocationsAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/StandardConfiguration</name></clazz><method><name>getOutputWriters</name></method><methodDesc>()Ljava/lang/Iterable;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/StandardConfiguration</name></clazz><method><name>getPeriod</name></method><methodDesc>()Lorg/jmxtrans/utils/time/Interval;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/StandardConfiguration</name></clazz><method><name>getServers</name></method><methodDesc>()Ljava/lang/Iterable;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.queriesAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor</name></clazz><method><name>preprocess</name></method><methodDesc>(Lorg/w3c/dom/Document;)Lorg/w3c/dom/Document;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest.textNodesArePreprocessed(org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor</name></clazz><method><name>preprocess</name></method><methodDesc>(Lorg/w3c/dom/Document;)Lorg/w3c/dom/Document;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest.textNodesArePreprocessed(org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor</name></clazz><method><name>preprocessNode</name></method><methodDesc>(Lorg/w3c/dom/Node;)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest.textNodesArePreprocessed(org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor</name></clazz><method><name>preprocessNode</name></method><methodDesc>(Lorg/w3c/dom/Node;)V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest.textNodesArePreprocessed(org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor</name></clazz><method><name>preprocessNode</name></method><methodDesc>(Lorg/w3c/dom/Node;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest.attributesArePreprocessed(org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor</name></clazz><method><name>preprocessNode</name></method><methodDesc>(Lorg/w3c/dom/Node;)V</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest.textNodesArePreprocessed(org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor</name></clazz><method><name>preprocessNode</name></method><methodDesc>(Lorg/w3c/dom/Node;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest.attributesArePreprocessed(org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor</name></clazz><method><name>preprocessNode</name></method><methodDesc>(Lorg/w3c/dom/Node;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest.textNodesArePreprocessed(org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor</name></clazz><method><name>preprocessNode</name></method><methodDesc>(Lorg/w3c/dom/Node;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest.textNodesArePreprocessed(org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor</name></clazz><method><name>preprocessNode</name></method><methodDesc>(Lorg/w3c/dom/Node;)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest.textNodesArePreprocessed(org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor</name></clazz><method><name>preprocessNode</name></method><methodDesc>(Lorg/w3c/dom/Node;)V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest.textNodesArePreprocessed(org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor</name></clazz><method><name>preprocessNode</name></method><methodDesc>(Lorg/w3c/dom/Node;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest.textNodesArePreprocessed(org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor</name></clazz><method><name>preprocessNode</name></method><methodDesc>(Lorg/w3c/dom/Node;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest.attributesArePreprocessed(org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor</name></clazz><method><name>preprocessNode</name></method><methodDesc>(Lorg/w3c/dom/Node;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest.attributesArePreprocessed(org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor</name></clazz><method><name>preprocessNode</name></method><methodDesc>(Lorg/w3c/dom/Node;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest.textNodesArePreprocessed(org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor</name></clazz><method><name>preprocessNode</name></method><methodDesc>(Lorg/w3c/dom/Node;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest.textNodesArePreprocessed(org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor</name></clazz><method><name>preprocessNode</name></method><methodDesc>(Lorg/w3c/dom/Node;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest.attributesArePreprocessed(org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor</name></clazz><method><name>preprocessNode</name></method><methodDesc>(Lorg/w3c/dom/Node;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest.attributesArePreprocessed(org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor</name></clazz><method><name>preprocessNode</name></method><methodDesc>(Lorg/w3c/dom/Node;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest.attributesArePreprocessed(org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor</name></clazz><method><name>preprocessNode</name></method><methodDesc>(Lorg/w3c/dom/Node;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest.textNodesArePreprocessed(org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor</name></clazz><method><name>preprocessNode</name></method><methodDesc>(Lorg/w3c/dom/Node;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest.textNodesArePreprocessed(org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor</name></clazz><method><name>preprocessNode</name></method><methodDesc>(Lorg/w3c/dom/Node;)V</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest.textNodesArePreprocessed(org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor</name></clazz><method><name>preprocessNode</name></method><methodDesc>(Lorg/w3c/dom/Node;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest.attributesArePreprocessed(org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor</name></clazz><method><name>preprocessNode</name></method><methodDesc>(Lorg/w3c/dom/Node;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest.textNodesArePreprocessed(org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor</name></clazz><method><name>preprocessNode</name></method><methodDesc>(Lorg/w3c/dom/Node;)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest.attributesArePreprocessed(org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor</name></clazz><method><name>preprocessNode</name></method><methodDesc>(Lorg/w3c/dom/Node;)V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest.textNodesArePreprocessed(org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor</name></clazz><method><name>preprocessNode</name></method><methodDesc>(Lorg/w3c/dom/Node;)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest.textNodesArePreprocessed(org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor</name></clazz><method><name>preprocessNode</name></method><methodDesc>(Lorg/w3c/dom/Node;)V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest.textNodesArePreprocessed(org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor</name></clazz><method><name>preprocessNode</name></method><methodDesc>(Lorg/w3c/dom/Node;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest.attributesArePreprocessed(org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor</name></clazz><method><name>preprocessNode</name></method><methodDesc>(Lorg/w3c/dom/Node;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest.textNodesArePreprocessed(org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor</name></clazz><method><name>preprocessNode</name></method><methodDesc>(Lorg/w3c/dom/Node;)V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest.attributesArePreprocessed(org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/PropertyPlaceholderResolverXmlPreprocessor</name></clazz><method><name>preprocessNode</name></method><methodDesc>(Lorg/w3c/dom/Node;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest.textNodesArePreprocessed(org.jmxtrans.core.config.PropertyPlaceholderResolverXmlPreprocessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultValueComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultValueComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultValueComparatorTest.nullValuesAreEquals(org.jmxtrans.core.results.QueryResultValueComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultValueComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultValueComparatorTest.nullValuesAreSmallerThanNonNull(org.jmxtrans.core.results.QueryResultValueComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultValueComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultValueComparatorTest.nonNullValuesAreGreaterThanNull(org.jmxtrans.core.results.QueryResultValueComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultValueComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultValueComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultValueComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultValueComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultValueComparatorTest.nullValuesAreEquals(org.jmxtrans.core.results.QueryResultValueComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultValueComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultValueComparatorTest.nonNullValuesAreGreaterThanNull(org.jmxtrans.core.results.QueryResultValueComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultValueComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultValueComparatorTest.nonNullValuesAreGreaterThanNull(org.jmxtrans.core.results.QueryResultValueComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultValueComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultValueComparatorTest.twoIsGreaterThanOne(org.jmxtrans.core.results.QueryResultValueComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultValueComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultValueComparatorTest.twoIsGreaterThanOne(org.jmxtrans.core.results.QueryResultValueComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultValueComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultValueComparatorTest.nonNullValuesAreGreaterThanNull(org.jmxtrans.core.results.QueryResultValueComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultValueComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultValueComparatorTest.nullValuesAreSmallerThanNonNull(org.jmxtrans.core.results.QueryResultValueComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultValueComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultValueComparatorTest.twoIsGreaterThanOne(org.jmxtrans.core.results.QueryResultValueComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultValueComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultValueComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultValueComparatorTest.nullValuesAreEquals(org.jmxtrans.core.results.QueryResultValueComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultValueComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultValueComparatorTest.nullValuesAreSmallerThanNonNull(org.jmxtrans.core.results.QueryResultValueComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultValueComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultValueComparatorTest.nonNullValuesAreGreaterThanNull(org.jmxtrans.core.results.QueryResultValueComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultValueComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultValueComparatorTest.twoIsGreaterThanOne(org.jmxtrans.core.results.QueryResultValueComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultValueComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultValueComparatorTest.twoIsGreaterThanOne(org.jmxtrans.core.results.QueryResultValueComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultValueComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultValueComparatorTest.nonNullValuesAreGreaterThanNull(org.jmxtrans.core.results.QueryResultValueComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultValueComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultValueComparatorTest.nonNullValuesAreGreaterThanNull(org.jmxtrans.core.results.QueryResultValueComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultValueComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultValueComparatorTest.twoIsGreaterThanOne(org.jmxtrans.core.results.QueryResultValueComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultValueComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultValueComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultValueComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultValueComparatorTest.nullValuesAreEquals(org.jmxtrans.core.results.QueryResultValueComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultValueComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultValueComparatorTest.nullValuesAreSmallerThanNonNull(org.jmxtrans.core.results.QueryResultValueComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultValueComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultValueComparatorTest.nonNullValuesAreGreaterThanNull(org.jmxtrans.core.results.QueryResultValueComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultValueComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultValueComparatorTest.twoIsGreaterThanOne(org.jmxtrans.core.results.QueryResultValueComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/NaiveScheduler</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ScheduledExecutorService;Lorg/jmxtrans/core/scheduler/QueryGenerator;J)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.NaiveSchedulerTest.cannotStopServiceIfNotRunning(org.jmxtrans.core.scheduler.NaiveSchedulerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/NaiveScheduler</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ScheduledExecutorService;Lorg/jmxtrans/core/scheduler/QueryGenerator;J)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.NaiveSchedulerTest.cannotStopServiceIfNotRunning(org.jmxtrans.core.scheduler.NaiveSchedulerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/NaiveScheduler</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ScheduledExecutorService;Lorg/jmxtrans/core/scheduler/QueryGenerator;J)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.NaiveSchedulerTest.nothingIsRunningAfterStop(org.jmxtrans.core.scheduler.NaiveSchedulerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/NaiveScheduler</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.NaiveSchedulerTest.cannotStartServiceTwice(org.jmxtrans.core.scheduler.NaiveSchedulerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/NaiveScheduler</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.NaiveSchedulerTest.nothingIsRunningAfterStop(org.jmxtrans.core.scheduler.NaiveSchedulerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/NaiveScheduler</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.NaiveSchedulerTest.nothingIsRunningAfterStop(org.jmxtrans.core.scheduler.NaiveSchedulerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/NaiveScheduler</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.NaiveSchedulerTest.cannotStartServiceTwice(org.jmxtrans.core.scheduler.NaiveSchedulerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/NaiveScheduler</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.NaiveSchedulerTest.nothingIsRunningAfterStop(org.jmxtrans.core.scheduler.NaiveSchedulerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/NaiveScheduler</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/NaiveScheduler</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.FullSchedulingTest.queriesAreFullyProcessed(org.jmxtrans.core.scheduler.FullSchedulingTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/NaiveScheduler</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/NaiveScheduler</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.NaiveSchedulerTest.cannotStopServiceIfNotRunning(org.jmxtrans.core.scheduler.NaiveSchedulerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/NaiveScheduler</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.NaiveSchedulerTest.cannotStopServiceIfNotRunning(org.jmxtrans.core.scheduler.NaiveSchedulerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/NaiveScheduler</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.NaiveSchedulerTest.cannotStopServiceIfNotRunning(org.jmxtrans.core.scheduler.NaiveSchedulerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/NaiveScheduler</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/NaiveScheduler</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.NaiveSchedulerTest.nothingIsRunningAfterStop(org.jmxtrans.core.scheduler.NaiveSchedulerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/NaiveScheduler</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/NaiveScheduler</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/NaiveScheduler</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/NaiveScheduler</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.NaiveSchedulerTest.cannotStopServiceIfNotRunning(org.jmxtrans.core.scheduler.NaiveSchedulerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/NaiveScheduler</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.NaiveSchedulerTest.cannotStopServiceIfNotRunning(org.jmxtrans.core.scheduler.NaiveSchedulerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/NaiveScheduler</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/NaiveScheduler</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.NaiveSchedulerTest.nothingIsRunningAfterStop(org.jmxtrans.core.scheduler.NaiveSchedulerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/NaiveScheduler</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/NaiveScheduler</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/NaiveScheduler</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.NaiveSchedulerTest.nothingIsRunningAfterStop(org.jmxtrans.core.scheduler.NaiveSchedulerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/NaiveScheduler</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.NaiveSchedulerTest.nothingIsRunningAfterStop(org.jmxtrans.core.scheduler.NaiveSchedulerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/NaiveScheduler</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.NaiveSchedulerTest.nothingIsRunningAfterStop(org.jmxtrans.core.scheduler.NaiveSchedulerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/NaiveScheduler</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.serversAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/query/embedded/RemoteServer;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.RemoteServerTest.weblogicSpecificEnvironmentIsUsedIfRequired(org.jmxtrans.core.query.embedded.RemoteServerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/query/embedded/RemoteServer;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.RemoteServerTest.hostAndPortsAreIgnoredIfUrlIsGiven(org.jmxtrans.core.query.embedded.RemoteServerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/query/embedded/RemoteServer;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.RemoteServerTest.weblogicSpecificEnvironmentIsUsedIfRequired(org.jmxtrans.core.query.embedded.RemoteServerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer$Builder</name></clazz><method><name>computeUrl</name></method><methodDesc>()Ljavax/management/remote/JMXServiceURL;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.serversAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer$Builder</name></clazz><method><name>computeUrl</name></method><methodDesc>()Ljavax/management/remote/JMXServiceURL;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.RemoteServerTest.hostAndPortsAreIgnoredIfUrlIsGiven(org.jmxtrans.core.query.embedded.RemoteServerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer$Builder</name></clazz><method><name>computeUrl</name></method><methodDesc>()Ljavax/management/remote/JMXServiceURL;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.serversAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer$Builder</name></clazz><method><name>computeUrl</name></method><methodDesc>()Ljavax/management/remote/JMXServiceURL;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.serversAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer$Builder</name></clazz><method><name>computeUrl</name></method><methodDesc>()Ljavax/management/remote/JMXServiceURL;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer$Builder</name></clazz><method><name>computeUrl</name></method><methodDesc>()Ljavax/management/remote/JMXServiceURL;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.RemoteServerTest.hostAndPortsAreIgnoredIfUrlIsGiven(org.jmxtrans.core.query.embedded.RemoteServerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer$Builder</name></clazz><method><name>computeUrl</name></method><methodDesc>()Ljavax/management/remote/JMXServiceURL;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.serversAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer$Builder</name></clazz><method><name>computeUrl</name></method><methodDesc>()Ljavax/management/remote/JMXServiceURL;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.RemoteServerTest.hostAndPortsAreIgnoredIfUrlIsGiven(org.jmxtrans.core.query.embedded.RemoteServerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer$Builder</name></clazz><method><name>computeUrl</name></method><methodDesc>()Ljavax/management/remote/JMXServiceURL;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.serversAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer$Builder</name></clazz><method><name>withHost</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/core/query/embedded/RemoteServer$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.RemoteServerTest.weblogicSpecificEnvironmentIsUsedIfRequired(org.jmxtrans.core.query.embedded.RemoteServerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer$Builder</name></clazz><method><name>withPassword</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/core/query/embedded/RemoteServer$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.RemoteServerTest.weblogicSpecificEnvironmentIsUsedIfRequired(org.jmxtrans.core.query.embedded.RemoteServerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer$Builder</name></clazz><method><name>withPort</name></method><methodDesc>(Ljava/lang/Integer;)Lorg/jmxtrans/core/query/embedded/RemoteServer$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.RemoteServerTest.weblogicSpecificEnvironmentIsUsedIfRequired(org.jmxtrans.core.query.embedded.RemoteServerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer$Builder</name></clazz><method><name>withProtocolProviderPackages</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/core/query/embedded/RemoteServer$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.RemoteServerTest.weblogicSpecificEnvironmentIsUsedIfRequired(org.jmxtrans.core.query.embedded.RemoteServerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer$Builder</name></clazz><method><name>withQueries</name></method><methodDesc>(Ljava/util/Collection;)Lorg/jmxtrans/core/query/embedded/RemoteServer$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.serversAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer$Builder</name></clazz><method><name>withQueries</name></method><methodDesc>(Ljava/util/Collection;)Lorg/jmxtrans/core/query/embedded/RemoteServer$Builder;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.serversAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer$Builder</name></clazz><method><name>withQueries</name></method><methodDesc>(Ljava/util/Collection;)Lorg/jmxtrans/core/query/embedded/RemoteServer$Builder;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer$Builder</name></clazz><method><name>withUrl</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/core/query/embedded/RemoteServer$Builder;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.RemoteServerTest.hostAndPortsAreIgnoredIfUrlIsGiven(org.jmxtrans.core.query.embedded.RemoteServerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer$Builder</name></clazz><method><name>withUrl</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/core/query/embedded/RemoteServer$Builder;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.RemoteServerTest.hostAndPortsAreIgnoredIfUrlIsGiven(org.jmxtrans.core.query.embedded.RemoteServerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer$Builder</name></clazz><method><name>withUrl</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/core/query/embedded/RemoteServer$Builder;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.serversAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer$Builder</name></clazz><method><name>withUrl</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/core/query/embedded/RemoteServer$Builder;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.RemoteServerTest.hostAndPortsAreIgnoredIfUrlIsGiven(org.jmxtrans.core.query.embedded.RemoteServerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer$Builder</name></clazz><method><name>withUrl</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/core/query/embedded/RemoteServer$Builder;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.RemoteServerTest.weblogicSpecificEnvironmentIsUsedIfRequired(org.jmxtrans.core.query.embedded.RemoteServerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/RemoteServer$Builder</name></clazz><method><name>withUsername</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/core/query/embedded/RemoteServer$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.RemoteServerTest.weblogicSpecificEnvironmentIsUsedIfRequired(org.jmxtrans.core.query.embedded.RemoteServerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryProcessor$Processor</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;JLorg/jmxtrans/core/query/embedded/Server;Lorg/jmxtrans/core/query/embedded/Query;Ljava/lang/Iterable;Lorg/jmxtrans/core/scheduler/ResultProcessor;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryProcessorTest.queryAreProcessed(org.jmxtrans.core.scheduler.QueryProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryProcessor$Processor</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;JLorg/jmxtrans/core/query/embedded/Server;Lorg/jmxtrans/core/query/embedded/Query;Ljava/lang/Iterable;Lorg/jmxtrans/core/scheduler/ResultProcessor;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryProcessorTest.queryAreProcessed(org.jmxtrans.core.scheduler.QueryProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryProcessor$Processor</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;JLorg/jmxtrans/core/query/embedded/Server;Lorg/jmxtrans/core/query/embedded/Query;Ljava/lang/Iterable;Lorg/jmxtrans/core/scheduler/ResultProcessor;Lorg/jmxtrans/core/query/embedded/ResultNameStrategy;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryProcessorTest.queryAreProcessed(org.jmxtrans.core.scheduler.QueryProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryProcessorTest.queryAreProcessed(org.jmxtrans.core.scheduler.QueryProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryProcessorTest.queryAreProcessed(org.jmxtrans.core.scheduler.QueryProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryProcessorTest.queryAreProcessed(org.jmxtrans.core.scheduler.QueryProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryProcessorTest.queryAreProcessed(org.jmxtrans.core.scheduler.QueryProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryProcessorTest.queryAreProcessed(org.jmxtrans.core.scheduler.QueryProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryProcessorTest.queryAreProcessed(org.jmxtrans.core.scheduler.QueryProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryProcessorTest.queryAreProcessed(org.jmxtrans.core.scheduler.QueryProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryProcessorTest.queryAreProcessed(org.jmxtrans.core.scheduler.QueryProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryProcessorTest.queryAreProcessed(org.jmxtrans.core.scheduler.QueryProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryProcessorTest.queryAreProcessed(org.jmxtrans.core.scheduler.QueryProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryProcessorTest.queryAreProcessed(org.jmxtrans.core.scheduler.QueryProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryProcessorTest.queryAreProcessed(org.jmxtrans.core.scheduler.QueryProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryProcessorTest.queryAreProcessed(org.jmxtrans.core.scheduler.QueryProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryProcessorTest.queryAreProcessed(org.jmxtrans.core.scheduler.QueryProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultTimeComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTimeComparatorTest.twoNullResultsAreEquals(org.jmxtrans.core.results.QueryResultTimeComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultTimeComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTimeComparatorTest.nullResultIsSmaller(org.jmxtrans.core.results.QueryResultTimeComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultTimeComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTimeComparatorTest.nullResultIsSmaller(org.jmxtrans.core.results.QueryResultTimeComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultTimeComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTimeComparatorTest.twoNullResultsAreEquals(org.jmxtrans.core.results.QueryResultTimeComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultTimeComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTimeComparatorTest.nullResultIsSmaller(org.jmxtrans.core.results.QueryResultTimeComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultTimeComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTimeComparatorTest.nullResultIsSmaller(org.jmxtrans.core.results.QueryResultTimeComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultTimeComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultTimeComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTimeComparatorTest.comparisonIsDoneOnTimes(org.jmxtrans.core.results.QueryResultTimeComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultTimeComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTimeComparatorTest.comparisonIsDoneOnTimes(org.jmxtrans.core.results.QueryResultTimeComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultTimeComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTimeComparatorTest.twoNullResultsAreEquals(org.jmxtrans.core.results.QueryResultTimeComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultTimeComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTimeComparatorTest.nullResultIsSmaller(org.jmxtrans.core.results.QueryResultTimeComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultTimeComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTimeComparatorTest.nullResultIsSmaller(org.jmxtrans.core.results.QueryResultTimeComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultTimeComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTimeComparatorTest.nullResultIsSmaller(org.jmxtrans.core.results.QueryResultTimeComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultTimeComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTimeComparatorTest.nullResultIsSmaller(org.jmxtrans.core.results.QueryResultTimeComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultTimeComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTimeComparatorTest.comparisonIsDoneOnTimes(org.jmxtrans.core.results.QueryResultTimeComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultTimeComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTimeComparatorTest.twoNullResultsAreEquals(org.jmxtrans.core.results.QueryResultTimeComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultTimeComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTimeComparatorTest.nullResultIsSmaller(org.jmxtrans.core.results.QueryResultTimeComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultTimeComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTimeComparatorTest.nullResultIsSmaller(org.jmxtrans.core.results.QueryResultTimeComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/results/QueryResultTimeComparator</name></clazz><method><name>compare</name></method><methodDesc>(Lorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/results/QueryResult;)I</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.results.QueryResultTimeComparatorTest.comparisonIsDoneOnTimes(org.jmxtrans.core.results.QueryResultTimeComparatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/Slf4JLogger</name></clazz><method><name>debug</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.Slf4JLoggerTest.allMethodsAreDelegatedToSlf4J(org.jmxtrans.core.log.Slf4JLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/Slf4JLogger</name></clazz><method><name>debug</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.Slf4JLoggerTest.allMethodsAreDelegatedToSlf4J(org.jmxtrans.core.log.Slf4JLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/Slf4JLogger</name></clazz><method><name>error</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.Slf4JLoggerTest.allMethodsAreDelegatedToSlf4J(org.jmxtrans.core.log.Slf4JLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/Slf4JLogger</name></clazz><method><name>error</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.Slf4JLoggerTest.allMethodsAreDelegatedToSlf4J(org.jmxtrans.core.log.Slf4JLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/Slf4JLogger</name></clazz><method><name>getName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.Slf4JLogProviderTest.loggerIsCreated(org.jmxtrans.core.log.Slf4JLogProviderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/Slf4JLogger</name></clazz><method><name>getName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.Slf4JLogProviderTest.loggerIsCreated(org.jmxtrans.core.log.Slf4JLogProviderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/Slf4JLogger</name></clazz><method><name>info</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.Slf4JLoggerTest.allMethodsAreDelegatedToSlf4J(org.jmxtrans.core.log.Slf4JLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/Slf4JLogger</name></clazz><method><name>info</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.Slf4JLoggerTest.allMethodsAreDelegatedToSlf4J(org.jmxtrans.core.log.Slf4JLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/Slf4JLogger</name></clazz><method><name>isDebugEnabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.Slf4JLoggerTest.allMethodsAreDelegatedToSlf4J(org.jmxtrans.core.log.Slf4JLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/Slf4JLogger</name></clazz><method><name>isDebugEnabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/Slf4JLogger</name></clazz><method><name>isErrorEnabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.Slf4JLoggerTest.allMethodsAreDelegatedToSlf4J(org.jmxtrans.core.log.Slf4JLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/Slf4JLogger</name></clazz><method><name>isErrorEnabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/Slf4JLogger</name></clazz><method><name>isInfoEnabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.Slf4JLoggerTest.allMethodsAreDelegatedToSlf4J(org.jmxtrans.core.log.Slf4JLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/Slf4JLogger</name></clazz><method><name>isInfoEnabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/Slf4JLogger</name></clazz><method><name>isWarnEnabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.Slf4JLoggerTest.allMethodsAreDelegatedToSlf4J(org.jmxtrans.core.log.Slf4JLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/Slf4JLogger</name></clazz><method><name>isWarnEnabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/Slf4JLogger</name></clazz><method><name>warn</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.Slf4JLoggerTest.allMethodsAreDelegatedToSlf4J(org.jmxtrans.core.log.Slf4JLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/Slf4JLogger</name></clazz><method><name>warn</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.Slf4JLoggerTest.allMethodsAreDelegatedToSlf4J(org.jmxtrans.core.log.Slf4JLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute$Builder</name></clazz><method><name>addKey</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute$Builder</name></clazz><method><name>addKey</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute$Builder</name></clazz><method><name>addKey</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute$Builder</name></clazz><method><name>addKey</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.outputWritersAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute$Builder</name></clazz><method><name>addKey</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/query/embedded/QueryAttribute;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="5" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lorg/jmxtrans/core/query/embedded/QueryAttribute;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="5" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute$Builder</name></clazz><method><name>withKeys</name></method><methodDesc>(Ljava/util/Collection;)Lorg/jmxtrans/core/query/embedded/QueryAttribute$Builder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryAttributeTest.queryAttributeWithSameNameAndKeysAreEquals(org.jmxtrans.core.query.embedded.QueryAttributeTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute$Builder</name></clazz><method><name>withKeys</name></method><methodDesc>(Ljava/util/Collection;)Lorg/jmxtrans/core/query/embedded/QueryAttribute$Builder;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="5" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute$Builder</name></clazz><method><name>withKeys</name></method><methodDesc>(Ljava/util/Collection;)Lorg/jmxtrans/core/query/embedded/QueryAttribute$Builder;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="5" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute$Builder</name></clazz><method><name>withKeys</name></method><methodDesc>(Ljava/util/Collection;)Lorg/jmxtrans/core/query/embedded/QueryAttribute$Builder;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="5" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute$Builder</name></clazz><method><name>withKeys</name></method><methodDesc>(Ljava/util/Collection;)Lorg/jmxtrans/core/query/embedded/QueryAttribute$Builder;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="5" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute$Builder</name></clazz><method><name>withKeys</name></method><methodDesc>(Ljava/util/Collection;)Lorg/jmxtrans/core/query/embedded/QueryAttribute$Builder;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryAttributeTest.queryAttributeWithSameNameAndKeysAreEquals(org.jmxtrans.core.query.embedded.QueryAttributeTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute$Builder</name></clazz><method><name>withResultAlias</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/core/query/embedded/QueryAttribute$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryAttributeTest.queryAttributeWithSameNameAndResultAliasAreEquals(org.jmxtrans.core.query.embedded.QueryAttributeTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryAttribute$Builder</name></clazz><method><name>withType</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/core/query/embedded/QueryAttribute$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryAttributeTest.queryAttributeWithSameNameAndTypeAreEquals(org.jmxtrans.core.query.embedded.QueryAttributeTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryMetrics</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="10" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryMetrics</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryMetrics</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.QueryTest.org.jmxtrans.core.query.embedded.QueryTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryMetrics</name></clazz><method><name>collectionDurationChronometer</name></method><methodDesc>()Lorg/jmxtrans/utils/time/NanoChronometer;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryMetrics</name></clazz><method><name>collectionDurationChronometer</name></method><methodDesc>()Lorg/jmxtrans/utils/time/NanoChronometer;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryMetrics</name></clazz><method><name>getCollectedCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryMetrics</name></clazz><method><name>getCollectedCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryMetrics</name></clazz><method><name>getCollectionDurationNano</name></method><methodDesc>()J</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryMetrics</name></clazz><method><name>getCollectionDurationNano</name></method><methodDesc>()J</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryMetrics</name></clazz><method><name>getCollectionsCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryMetrics</name></clazz><method><name>getCollectionsCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryMetrics</name></clazz><method><name>incrementCollected</name></method><methodDesc>(I)I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryMetrics</name></clazz><method><name>incrementCollected</name></method><methodDesc>(I)I</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryMetrics</name></clazz><method><name>incrementCollectionsCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/QueryMetrics</name></clazz><method><name>incrementCollectionsCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/JmxTransThreadFactory</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.JmxTransThreadFactoryTest.threadCreatedWithCorrectOptions(org.jmxtrans.core.scheduler.JmxTransThreadFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/JmxTransThreadFactory</name></clazz><method><name>newThread</name></method><methodDesc>(Ljava/lang/Runnable;)Ljava/lang/Thread;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.JmxTransThreadFactoryTest.threadCreatedWithCorrectOptions(org.jmxtrans.core.scheduler.JmxTransThreadFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/JmxTransThreadFactory</name></clazz><method><name>newThread</name></method><methodDesc>(Ljava/lang/Runnable;)Ljava/lang/Thread;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/JmxTransThreadFactory</name></clazz><method><name>newThread</name></method><methodDesc>(Ljava/lang/Runnable;)Ljava/lang/Thread;</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.JmxTransThreadFactoryTest.threadCreatedWithCorrectOptions(org.jmxtrans.core.scheduler.JmxTransThreadFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/JmxTransThreadFactory</name></clazz><method><name>newThread</name></method><methodDesc>(Ljava/lang/Runnable;)Ljava/lang/Thread;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.JmxTransThreadFactoryTest.threadCreatedWithCorrectOptions(org.jmxtrans.core.scheduler.JmxTransThreadFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/JmxTransThreadFactory</name></clazz><method><name>newThread</name></method><methodDesc>(Ljava/lang/Runnable;)Ljava/lang/Thread;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.JmxTransThreadFactoryTest.threadCreatedWithCorrectOptions(org.jmxtrans.core.scheduler.JmxTransThreadFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/JmxTransThreadFactory</name></clazz><method><name>newThread</name></method><methodDesc>(Ljava/lang/Runnable;)Ljava/lang/Thread;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.JmxTransThreadFactoryTest.threadCreatedWithCorrectOptions(org.jmxtrans.core.scheduler.JmxTransThreadFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/JmxTransThreadFactory</name></clazz><method><name>newThread</name></method><methodDesc>(Ljava/lang/Runnable;)Ljava/lang/Thread;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.JmxTransThreadFactoryTest.threadCreatedWithCorrectOptions(org.jmxtrans.core.scheduler.JmxTransThreadFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/JmxTransThreadFactory</name></clazz><method><name>newThread</name></method><methodDesc>(Ljava/lang/Runnable;)Ljava/lang/Thread;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.JmxTransThreadFactoryTest.threadCreatedWithCorrectOptions(org.jmxtrans.core.scheduler.JmxTransThreadFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/JmxTransThreadFactory</name></clazz><method><name>newThread</name></method><methodDesc>(Ljava/lang/Runnable;)Ljava/lang/Thread;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.JmxTransThreadFactoryTest.threadCreatedWithCorrectOptions(org.jmxtrans.core.scheduler.JmxTransThreadFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/JmxTransThreadFactory</name></clazz><method><name>newThread</name></method><methodDesc>(Ljava/lang/Runnable;)Ljava/lang/Thread;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.JmxTransThreadFactoryTest.threadCreatedWithCorrectOptions(org.jmxtrans.core.scheduler.JmxTransThreadFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/JmxTransThreadFactory</name></clazz><method><name>newThread</name></method><methodDesc>(Ljava/lang/Runnable;)Ljava/lang/Thread;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.JmxTransThreadFactoryTest.threadCreatedWithCorrectOptions(org.jmxtrans.core.scheduler.JmxTransThreadFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/JmxTransThreadFactory</name></clazz><method><name>newThread</name></method><methodDesc>(Ljava/lang/Runnable;)Ljava/lang/Thread;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/JmxTransThreadFactory</name></clazz><method><name>newThread</name></method><methodDesc>(Ljava/lang/Runnable;)Ljava/lang/Thread;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.JmxTransThreadFactoryTest.threadCreatedWithCorrectOptions(org.jmxtrans.core.scheduler.JmxTransThreadFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/ConsoleLogProvider</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.ConsoleLogProviderTest.messagesAreSentToStdOut(org.jmxtrans.core.log.ConsoleLogProviderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/ConsoleLogProvider</name></clazz><method><name>getLogLevel</name></method><methodDesc>()Lorg/jmxtrans/core/log/Level;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.ConsoleLogProviderTest.logLevelCanBeSet(org.jmxtrans.core.log.ConsoleLogProviderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/ConsoleLogProvider</name></clazz><method><name>getLogLevel</name></method><methodDesc>()Lorg/jmxtrans/core/log/Level;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.ConsoleLogProviderTest.logLevelCanBeSet(org.jmxtrans.core.log.ConsoleLogProviderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/ConsoleLogProvider</name></clazz><method><name>getLogLevel</name></method><methodDesc>()Lorg/jmxtrans/core/log/Level;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.ConsoleLogProviderTest.defaultingToWarnWhenLogLevelIsInvalid(org.jmxtrans.core.log.ConsoleLogProviderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/ConsoleLogProvider</name></clazz><method><name>getLogLevel</name></method><methodDesc>()Lorg/jmxtrans/core/log/Level;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.ConsoleLogProviderTest.defaultingToWarnWhenLogLevelIsInvalid(org.jmxtrans.core.log.ConsoleLogProviderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/ConsoleLogProvider</name></clazz><method><name>getLogLevel</name></method><methodDesc>()Lorg/jmxtrans/core/log/Level;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/ConsoleLogProvider</name></clazz><method><name>getLogLevel</name></method><methodDesc>()Lorg/jmxtrans/core/log/Level;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.ConsoleLogProviderTest.logLevelCanBeSet(org.jmxtrans.core.log.ConsoleLogProviderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/ConsoleLogProvider</name></clazz><method><name>getLogLevel</name></method><methodDesc>()Lorg/jmxtrans/core/log/Level;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/ConsoleLogProvider</name></clazz><method><name>getLogLevel</name></method><methodDesc>()Lorg/jmxtrans/core/log/Level;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.ConsoleLogProviderTest.logLevelCanBeSet(org.jmxtrans.core.log.ConsoleLogProviderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/ConsoleLogProvider</name></clazz><method><name>getLogLevel</name></method><methodDesc>()Lorg/jmxtrans/core/log/Level;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.ConsoleLogProviderTest.defaultingToWarnWhenLogLevelIsInvalid(org.jmxtrans.core.log.ConsoleLogProviderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/ConsoleLogProvider</name></clazz><method><name>getLogLevel</name></method><methodDesc>()Lorg/jmxtrans/core/log/Level;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/ConsoleLogProvider</name></clazz><method><name>getLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/core/log/Logger;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.ConsoleLogProviderTest.defaultingToWarnWhenLogLevelIsInvalid(org.jmxtrans.core.log.ConsoleLogProviderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/ConsoleLogProvider</name></clazz><method><name>getLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/core/log/Logger;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.ConsoleLogProviderTest.defaultingToWarnWhenLogLevelIsInvalid(org.jmxtrans.core.log.ConsoleLogProviderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/ConsoleLogProvider</name></clazz><method><name>getLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/core/log/Logger;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.ConsoleLogProviderTest.defaultingToWarnWhenLogLevelIsInvalid(org.jmxtrans.core.log.ConsoleLogProviderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ModifiableConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ModifiableConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ModifiableConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ModifiableConfiguration</name></clazz><method><name>addServer</name></method><methodDesc>(Lorg/jmxtrans/core/query/embedded/Server;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.queriesAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ModifiableConfiguration</name></clazz><method><name>getInvocations</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ModifiableConfiguration</name></clazz><method><name>getOutputWriters</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ModifiableConfiguration</name></clazz><method><name>getPeriod</name></method><methodDesc>()Lorg/jmxtrans/utils/time/Interval;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ModifiableConfiguration</name></clazz><method><name>getPeriod</name></method><methodDesc>()Lorg/jmxtrans/utils/time/Interval;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ModifiableConfiguration</name></clazz><method><name>getPeriod</name></method><methodDesc>()Lorg/jmxtrans/utils/time/Interval;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ModifiableConfiguration</name></clazz><method><name>getPeriod</name></method><methodDesc>()Lorg/jmxtrans/utils/time/Interval;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ModifiableConfiguration</name></clazz><method><name>getPeriod</name></method><methodDesc>()Lorg/jmxtrans/utils/time/Interval;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.queriesAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ModifiableConfiguration</name></clazz><method><name>getPeriod</name></method><methodDesc>()Lorg/jmxtrans/utils/time/Interval;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ModifiableConfiguration</name></clazz><method><name>getPeriod</name></method><methodDesc>()Lorg/jmxtrans/utils/time/Interval;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.queriesAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/ModifiableConfiguration</name></clazz><method><name>getServers</name></method><methodDesc>()Ljava/util/Collection;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/DeadlineRunnable</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;J)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.DeadlineRunnableTest.jobIsRunBeforeDeadline(org.jmxtrans.core.scheduler.DeadlineRunnableTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/DeadlineRunnable</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;J)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.DeadlineRunnableTest.jobIsRunBeforeDeadline(org.jmxtrans.core.scheduler.DeadlineRunnableTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/DeadlineRunnable</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;J)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.DeadlineRunnableTest.jodIsNotRunAfterDeadline(org.jmxtrans.core.scheduler.DeadlineRunnableTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/DeadlineRunnable</name></clazz><method><name>getClock</name></method><methodDesc>()Lorg/jmxtrans/utils/time/Clock;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/DeadlineRunnable</name></clazz><method><name>getDeadline</name></method><methodDesc>()J</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryProcessorTest.queryAreProcessed(org.jmxtrans.core.scheduler.QueryProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/DeadlineRunnable</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/DeadlineRunnable</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.DeadlineRunnableTest.jobIsRunBeforeDeadline(org.jmxtrans.core.scheduler.DeadlineRunnableTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/DeadlineRunnable</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.DeadlineRunnableTest.jodIsNotRunAfterDeadline(org.jmxtrans.core.scheduler.DeadlineRunnableTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/DeadlineRunnable</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.DeadlineRunnableTest.jodIsNotRunAfterDeadline(org.jmxtrans.core.scheduler.DeadlineRunnableTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/DeadlineRunnable</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.DeadlineRunnableTest.jobIsRunBeforeDeadline(org.jmxtrans.core.scheduler.DeadlineRunnableTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/DeadlineRunnable</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/DeadlineRunnable</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.DeadlineRunnableTest.jobIsRunBeforeDeadline(org.jmxtrans.core.scheduler.DeadlineRunnableTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/ResultProcessor$Processor</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;JLorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/output/OutputWriter;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.ResultProcessorTest.resultsAreProcessed(org.jmxtrans.core.scheduler.ResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/ResultProcessor$Processor</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;JLorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/output/OutputWriter;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.ResultProcessorTest.resultsAreProcessed(org.jmxtrans.core.scheduler.ResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/ResultProcessor$Processor</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/jmxtrans/utils/time/Clock;JLorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/output/OutputWriter;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.ResultProcessorTest.resultsAreProcessed(org.jmxtrans.core.scheduler.ResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/ResultProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.ResultProcessorTest.resultsAreProcessed(org.jmxtrans.core.scheduler.ResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/ResultProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.ResultProcessorTest.resultsAreProcessed(org.jmxtrans.core.scheduler.ResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/ResultProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.ResultProcessorTest.resultsAreProcessed(org.jmxtrans.core.scheduler.ResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/ResultProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/ResultProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/ResultProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.ResultProcessorTest.resultsAreProcessed(org.jmxtrans.core.scheduler.ResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/ResultProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/ResultProcessor$Processor</name></clazz><method><name>doRun</name></method><methodDesc>()V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy$StaticEvaluator</name></clazz><method><name>call</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.query.embedded.ResultNameStrategyTest.org.jmxtrans.core.query.embedded.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy$StaticEvaluator</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy$StaticEvaluator</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy$StaticEvaluator</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy$StaticEvaluator</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy$StaticEvaluator</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy$StaticEvaluator</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy$StaticEvaluator</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy$StaticEvaluator</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/ResultNameStrategy$StaticEvaluator</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl$StaticEvaluator</name></clazz><method><name>call</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.naming.ResultNameStrategyTest.org.jmxtrans.core.naming.ResultNameStrategyTest</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl$StaticEvaluator</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl$StaticEvaluator</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl$StaticEvaluator</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl$StaticEvaluator</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl$StaticEvaluator</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl$StaticEvaluator</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl$StaticEvaluator</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl$StaticEvaluator</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/naming/ExpressionLanguageEngineImpl$StaticEvaluator</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/DefaultConfiguration</name></clazz><method><name>getInstance</name></method><methodDesc>()Lorg/jmxtrans/core/config/Configuration;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/DefaultConfiguration</name></clazz><method><name>getInvocations</name></method><methodDesc>()Ljava/lang/Iterable;</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/DefaultConfiguration</name></clazz><method><name>getInvocations</name></method><methodDesc>()Ljava/lang/Iterable;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/DefaultConfiguration</name></clazz><method><name>getOutputWriters</name></method><methodDesc>()Ljava/lang/Iterable;</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/DefaultConfiguration</name></clazz><method><name>getOutputWriters</name></method><methodDesc>()Ljava/lang/Iterable;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/DefaultConfiguration</name></clazz><method><name>getPeriod</name></method><methodDesc>()Lorg/jmxtrans/utils/time/Interval;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/DefaultConfiguration</name></clazz><method><name>getPeriod</name></method><methodDesc>()Lorg/jmxtrans/utils/time/Interval;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/DefaultConfiguration</name></clazz><method><name>getPeriod</name></method><methodDesc>()Lorg/jmxtrans/utils/time/Interval;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.defaultCollectIntervalIfNotConfigured(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/DefaultConfiguration</name></clazz><method><name>getServers</name></method><methodDesc>()Ljava/lang/Iterable;</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/config/DefaultConfiguration</name></clazz><method><name>getServers</name></method><methodDesc>()Ljava/lang/Iterable;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.JmxTransBuilderTest.schedulerIsBuilt(org.jmxtrans.core.config.JmxTransBuilderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/Level</name></clazz><method><name>isEnabled</name></method><methodDesc>(Lorg/jmxtrans/core/log/Level;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.LevelTest.debugEnablesAllLevels(org.jmxtrans.core.log.LevelTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/Level</name></clazz><method><name>isEnabled</name></method><methodDesc>(Lorg/jmxtrans/core/log/Level;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.LevelTest.debugEnablesAllLevels(org.jmxtrans.core.log.LevelTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/Level</name></clazz><method><name>isEnabled</name></method><methodDesc>(Lorg/jmxtrans/core/log/Level;)Z</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.LevelTest.errorOnlyEnablesErrorLevel(org.jmxtrans.core.log.LevelTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/Level</name></clazz><method><name>isEnabled</name></method><methodDesc>(Lorg/jmxtrans/core/log/Level;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.LevelTest.debugEnablesAllLevels(org.jmxtrans.core.log.LevelTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/Level</name></clazz><method><name>isEnabled</name></method><methodDesc>(Lorg/jmxtrans/core/log/Level;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.LevelTest.errorOnlyEnablesErrorLevel(org.jmxtrans.core.log.LevelTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/Level</name></clazz><method><name>isEnabled</name></method><methodDesc>(Lorg/jmxtrans/core/log/Level;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.LevelTest.debugEnablesAllLevels(org.jmxtrans.core.log.LevelTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/Level</name></clazz><method><name>isEnabled</name></method><methodDesc>(Lorg/jmxtrans/core/log/Level;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.LevelTest.errorOnlyEnablesErrorLevel(org.jmxtrans.core.log.LevelTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/Level</name></clazz><method><name>isEnabled</name></method><methodDesc>(Lorg/jmxtrans/core/log/Level;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.LevelTest.debugEnablesAllLevels(org.jmxtrans.core.log.LevelTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/LoggerFactory</name></clazz><method><name>getLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/core/log/Logger;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.LoggerFactoryTest.slf4jUsedWhenOnClasspath(org.jmxtrans.core.log.LoggerFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/LoggerFactory</name></clazz><method><name>getLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/core/log/Logger;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.LoggerFactoryTest.slf4jUsedWhenOnClasspath(org.jmxtrans.core.log.LoggerFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/LoggerFactory</name></clazz><method><name>instantiateLogProvider</name></method><methodDesc>()Lorg/jmxtrans/core/log/LogProvider;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.circuitBreakerIsClosedAgainAfterDisableDuration(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/LoggerFactory</name></clazz><method><name>instantiateLogProvider</name></method><methodDesc>()Lorg/jmxtrans/core/log/LogProvider;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/LoggerFactory</name></clazz><method><name>instantiateLogProvider</name></method><methodDesc>()Lorg/jmxtrans/core/log/LogProvider;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.circuitBreakerIsClosedAgainAfterDisableDuration(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/LoggerFactory</name></clazz><method><name>instantiateLogProvider</name></method><methodDesc>()Lorg/jmxtrans/core/log/LogProvider;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.circuitBreakerIsClosedAgainAfterDisableDuration(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/LoggerFactory</name></clazz><method><name>instantiateLogProvider</name></method><methodDesc>()Lorg/jmxtrans/core/log/LogProvider;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/LoggerFactory</name></clazz><method><name>instantiateLogProvider</name></method><methodDesc>()Lorg/jmxtrans/core/log/LogProvider;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerOpenException</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/Object;J)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerOpenException</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/Object;J)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.circuitBreakerIsOpenedForMultipleExceptions(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerOpenException</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/Object;J)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.circuitBreakerIsOpenedForMultipleExceptions(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerOpenException</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/Object;J)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.circuitBreakerIsOpenedForMultipleExceptions(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerOpenException</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/Object;J)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.circuitBreakerIsOpenedForMultipleExceptions(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerOpenException</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/Object;J)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.circuitBreakerIsOpenedForMultipleExceptions(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerOpenException</name></clazz><method><name>getDisabledUntil</name></method><methodDesc>()J</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.circuitBreakerIsOpenedForMultipleExceptions(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/circuitbreaker/CircuitBreakerOpenException</name></clazz><method><name>getTarget</name></method><methodDesc>()Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest.circuitBreakerIsOpenedForMultipleExceptions(org.jmxtrans.core.circuitbreaker.CircuitBreakerProxyTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/InProcessServer</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/InProcessServer</name></clazz><method><name>getQueries</name></method><methodDesc>()Ljava/lang/Iterable;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.config.XmlConfigParserTest.queriesAreParsed(org.jmxtrans.core.config.XmlConfigParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/InProcessServer</name></clazz><method><name>getServerConnection</name></method><methodDesc>()Ljavax/management/MBeanServerConnection;</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/query/embedded/InProcessServer</name></clazz><method><name>getServerConnection</name></method><methodDesc>()Ljavax/management/MBeanServerConnection;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/Slf4JLogProvider</name></clazz><method><name>getLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/core/log/Logger;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.Slf4JLogProviderTest.loggerIsCreated(org.jmxtrans.core.log.Slf4JLogProviderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/Slf4JLogProvider</name></clazz><method><name>getLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/core/log/Logger;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.Slf4JLogProviderTest.loggerIsCreated(org.jmxtrans.core.log.Slf4JLogProviderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/Slf4JLogProvider</name></clazz><method><name>getLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/jmxtrans/core/log/Logger;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.Slf4JLogProviderTest.loggerIsCreated(org.jmxtrans.core.log.Slf4JLogProviderTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryProcessor</name></clazz><method><name>process</name></method><methodDesc>(JLorg/jmxtrans/core/query/embedded/Server;Lorg/jmxtrans/core/query/embedded/Query;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryProcessorTest.queryAreProcessed(org.jmxtrans.core.scheduler.QueryProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/QueryProcessor</name></clazz><method><name>process</name></method><methodDesc>(JLorg/jmxtrans/core/query/embedded/Server;Lorg/jmxtrans/core/query/embedded/Query;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.QueryProcessorTest.queryAreProcessed(org.jmxtrans.core.scheduler.QueryProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/ResultProcessor</name></clazz><method><name>writeResult</name></method><methodDesc>(JLorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/output/OutputWriter;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.ResultProcessorTest.resultsAreProcessed(org.jmxtrans.core.scheduler.ResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/scheduler/ResultProcessor</name></clazz><method><name>writeResult</name></method><methodDesc>(JLorg/jmxtrans/core/results/QueryResult;Lorg/jmxtrans/core/output/OutputWriter;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.scheduler.ResultProcessorTest.resultsAreProcessed(org.jmxtrans.core.scheduler.ResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger$1</name></clazz><method><name>initialValue</name></method><methodDesc>()Ljava/text/DateFormat;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.errorDebuggerOnlyLogsAtErrorLevel(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/log/PrintWriterLogger$1</name></clazz><method><name>initialValue</name></method><methodDesc>()Ljava/text/DateFormat;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.log.PrintWriterLoggerTest.errorDebuggerOnlyLogsAtErrorLevel(org.jmxtrans.core.log.PrintWriterLoggerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/output/DevNullOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/core/output/DevNullOutputWriter;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.output.DevNullOutputWriterTest.factoryCanCreateOutputWriter(org.jmxtrans.core.output.DevNullOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/core/output/DevNullOutputWriter$Factory</name></clazz><method><name>create</name></method><methodDesc>(Ljava/util/Map;)Lorg/jmxtrans/core/output/DevNullOutputWriter;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.core.output.DevNullOutputWriterTest.factoryCanCreateOutputWriter(org.jmxtrans.core.output.DevNullOutputWriterTest)</value></killingTest></status></result>
